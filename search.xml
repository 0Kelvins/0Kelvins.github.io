<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[【Entity Framework】自定义读取配置数据库连接]]></title>
      <url>/post/2508d3d8.html</url>
      <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>打包的人反馈<code>EF DBFirst</code>的数据库连接配置里面的<code>&amp;quot</code>(“<code>&quot;</code>”)，处理不好，沟通起来又不在一个地方，很麻烦，连接配置也的确不太好看，于是搜了下，看到了可以自定义。</p>
<h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p>Entity Framework v6.1.3</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol>
<li><p>写个获取连接的类</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Utils</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EFConfig</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">DataBaseConnectionString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">string</span> DataBaseConnection = ConfigurationManager.AppSettings[<span class="string">"Connection"</span>].ToString();</span><br><span class="line">            <span class="keyword">return</span> ConnectionString(DataBaseConnection);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">ConnectionString</span>(<span class="params"><span class="keyword">string</span> DataBaseConnection</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"metadata=res://*/EFData.csdl|res://*/EFData.ssdl|res://*/EFData.msl;provider=System.Data.SqlClient;provider connection string =\""</span></span><br><span class="line">                    + DataBaseConnection + <span class="string">"persist security info=True;multipleactiveresultsets=True;application name=EntityFramework\""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>重写一下<code>edmx</code>-&gt;<code>*.Context.tt</code>-&gt;<code>*.Context.cs</code>的构造函数</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">EFDbContext</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    : <span class="title">base</span>(<span class="params">Utils.EFConfig.DataBaseConnectionString(</span>))</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在<code>Web.config</code>的<code>&lt;appSettings&gt;</code>节点配置，删除不使用了的<code>&lt;connectionStrings&gt;</code>节点</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">appSettings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">"Connection"</span> <span class="attr">value</span>=<span class="string">"data source=127.0.0.1;initial catalog=DBName;user id=User;password=Pwd;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appSettings</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>其实这主要是构造函数本来的方法就支持直接配置连接字符串</p>
<p><img src="/assets/images/ef_connect_string/ef-construct.png" alt="EF的构造函数"></p>
]]></content>
      
        <categories>
            
            <category> CSharp </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSharp </tag>
            
            <tag> DotNet </tag>
            
            <tag> Entity Framework </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【Vue】自定义radio组]]></title>
      <url>/post/60a8fd90.html</url>
      <content type="html"><![CDATA[<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>做出多组<code>radio</code>组，来作为选择条件的UI组件，比<code>select</code>更方便好看。</p>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ol>
<li>使用了<code>bootstrap</code>和<code>vue</code>，两者存在冲突，将<code>bootstrap</code>的js去掉。除了要实现<code>Vue</code>的<code>radio</code>组件外，因为<code>bootstrap</code>的js删除了，所以<code>radio</code>选中的效果没有了，需要自己用<code>Vue</code>来实现绑定点击效果。（不换掉<code>bootstrap</code>的js的话Vue的<code>radio</code>组件事件绑定就会和冲突，进而没反应）</li>
<li>自定义组件的<code>v-model</code>，没能实现出想要的效果。待实验。</li>
</ol>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="1-bootstrap和vue冲突"><a href="#1-bootstrap和vue冲突" class="headerlink" title="1. bootstrap和vue冲突"></a>1. <code>bootstrap</code>和<code>vue</code>冲突</h3><p>本来想换成<code>bootstrap-vue</code>的js来用，发现radio的效果不一样了，最后还是要自己写选中效果，索性就把<code>bootstrap</code>的js去掉了，只用个css。</p>
<h3 id="2-Vue的radio组件相关实现"><a href="#2-Vue的radio组件相关实现" class="headerlink" title="2. Vue的radio组件相关实现"></a>2. <code>Vue</code>的<code>radio</code>组件相关实现</h3><p><code>demo</code>的js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// radio组件</span></span><br><span class="line"><span class="keyword">var</span> temp = <span class="string">'&lt;label class="btn btn-default" :class="&#123;active:checked&#125;" :for="id"&gt;&#123;&#123; label &#125;&#125;'</span></span><br><span class="line">    + <span class="string">'&lt;input :name="name" :id="id" type="radio" :value="value" :checked.sync="checked" v-on:click="update" ref="input"&gt;&lt;/label&gt;'</span>;</span><br><span class="line">Vue.component(<span class="string">'radio-tag'</span>, &#123;</span><br><span class="line">    template: temp,</span><br><span class="line">    props: &#123;</span><br><span class="line">        id: <span class="built_in">String</span>,</span><br><span class="line">        name: <span class="built_in">String</span>,</span><br><span class="line">        label: <span class="built_in">String</span>,</span><br><span class="line">        value: <span class="built_in">String</span>,</span><br><span class="line">        checked: <span class="built_in">Boolean</span>    <span class="comment">// 用来绑定初始值</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        update() &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'update'</span>);</span><br><span class="line">            <span class="comment">// ref获取dom</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.$refs[<span class="string">'input'</span>].checked) &#123;</span><br><span class="line">                <span class="keyword">this</span>.$emit(<span class="string">'update'</span>, <span class="keyword">this</span>.value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#condition'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        schools: [&#123; <span class="string">'id'</span>: <span class="string">'a'</span>, <span class="string">'name'</span>: <span class="string">'a校'</span> &#125;,</span><br><span class="line">                  &#123; <span class="string">'id'</span>: <span class="string">'b'</span>, <span class="string">'name'</span>: <span class="string">'b校'</span> &#125;],</span><br><span class="line">        grades: [&#123; <span class="string">'id'</span>: <span class="string">'a1'</span>, <span class="string">'name'</span>: <span class="string">'初一'</span> &#125;,</span><br><span class="line">                 &#123; <span class="string">'id'</span>: <span class="string">'a2'</span>, <span class="string">'name'</span>: <span class="string">'初二'</span> &#125;,</span><br><span class="line">                 &#123; <span class="string">'id'</span>: <span class="string">'a3'</span>, <span class="string">'name'</span>: <span class="string">'初三'</span> &#125;],</span><br><span class="line">        school: <span class="string">'a'</span>,</span><br><span class="line">        grade: <span class="string">'a1'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        updateGrades(value) &#123;   <span class="comment">// 回调函数</span></span><br><span class="line">            <span class="keyword">this</span>.school = value</span><br><span class="line">        &#125;,</span><br><span class="line">        updateClazzes(value) &#123;</span><br><span class="line">            <span class="keyword">this</span>.grade = value</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p><code>demo</code>页面<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"condition"</span> <span class="attr">class</span>=<span class="string">"row clearfix "</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12 column"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group form-inline"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"School"</span> <span class="attr">class</span>=<span class="string">"col-md-4 control-label"</span>&gt;</span>学校<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">data-toggle</span>=<span class="string">"buttons"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">radio-tag</span> <span class="attr">v-for</span>=<span class="string">"item in schools"</span> <span class="attr">:id</span>=<span class="string">"item.id"</span> <span class="attr">:name</span>=<span class="string">"item.id"</span> <span class="attr">:label</span>=<span class="string">"item.name"</span> <span class="attr">:value</span>=<span class="string">"item.id"</span> <span class="attr">:checked</span>=<span class="string">"school === item.id"</span> <span class="attr">v-on:update</span>=<span class="string">"updateGrades"</span>&gt;</span><span class="tag">&lt;/<span class="name">radio-tag</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;school&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group form-inline"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"Grade"</span> <span class="attr">class</span>=<span class="string">"col-md-4 control-label"</span>&gt;</span>年级<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">data-toggle</span>=<span class="string">"buttons"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">radio-tag</span> <span class="attr">v-for</span>=<span class="string">"item in grades"</span> <span class="attr">:id</span>=<span class="string">"item.id"</span> <span class="attr">:name</span>=<span class="string">"item.id"</span> <span class="attr">:label</span>=<span class="string">"item.name"</span> <span class="attr">:value</span>=<span class="string">"item.id"</span> <span class="attr">:checked</span>=<span class="string">"grade === item.id"</span> <span class="attr">v-on:update</span>=<span class="string">"updateClazzes"</span>&gt;</span><span class="tag">&lt;/<span class="name">radio-tag</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;grade&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ol>
<li>vue的语法缩写</li>
</ol>
<ul>
<li><code>v-bind</code>缩写<code>:</code>，例：<code>v-bind:id=&quot;id&quot;</code>-&gt;<code>:id=&quot;id&quot;</code></li>
<li><p><code>v-on</code>缩写<code>@</code>，例：<code>v-on:click=&quot;update&quot;</code>-&gt;<code>@click=&quot;update&quot;</code></p>
<p>  .net Razor页面中<code>@</code>冲突，可以使用<code>@@</code>，或者就不要缩写</p>
</li>
</ul>
<ol>
<li>vue中class绑定</li>
</ol>
<ul>
<li><code>:class=&quot;{active:isActive}&quot;</code>，这个是官方例子</li>
<li><code>:class=&quot;{active:(model==0?true:false)}&quot;</code>，表达式使用</li>
</ul>
<ol>
<li>父子组件传值</li>
</ol>
<ul>
<li><code>props</code>属性用来父往子传值</li>
<li><code>$emit()</code>方法用来子往父传值</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Front </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Bootstrap </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【C#】数组操作]]></title>
      <url>/post/43a178cc.html</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>数组的合并拆分，基本就是利用数组的复制方法来实现</p>
<p>C#里面使用<code>lambda</code>表达式很方便，数组的各种操作使用<code>lambda</code>就很简洁，但是效率也是自然不如其他的函数了</p>
<h2 id="数组合并-复制"><a href="#数组合并-复制" class="headerlink" title="数组合并(复制)"></a>数组合并(复制)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">int[] a = new int[] &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">int[] b = new int[] &#123; 6, 7, 8, 9 &#125;;</span><br><span class="line">int[] c = new int[](a.Length + b.Length);</span><br><span class="line"></span><br><span class="line">// lambda表达式 Concat 方法</span><br><span class="line">int[] c = a.Concat(b).ToArray();</span><br><span class="line"></span><br><span class="line">/* Array.Copy 支持所有类型数组，支持装拆箱</span><br><span class="line">public static void Copy(</span><br><span class="line">	Array sourceArray,</span><br><span class="line">	int sourceIndex,</span><br><span class="line">	Array destinationArray,</span><br><span class="line">	int destinationIndex,</span><br><span class="line">	int length</span><br><span class="line">)</span><br><span class="line">*/</span><br><span class="line">Array.Copy(a, 0, c, 0, a.Length);</span><br><span class="line">Array.Copy(b, 0, c, a.Length, b);</span><br><span class="line"></span><br><span class="line">// Array.ConstrainedCopy 和 Array.Copy 差不多，更严格，不支持装拆箱</span><br><span class="line"></span><br><span class="line">/* Buffer.BlockCopy 只支持基元类型</span><br><span class="line">sbyte / byte / short / ushort / int / uint / long / ulong / char / float / double / bool</span><br><span class="line"></span><br><span class="line">public static void BlockCopy (</span><br><span class="line">	Array src,</span><br><span class="line">	int srcOffset,</span><br><span class="line">	Array dst,</span><br><span class="line">	int dstOffset,</span><br><span class="line">	int count</span><br><span class="line">)</span><br><span class="line">*/</span><br><span class="line">Buffer.BlockCopy(a, 0, c, 0, a.Length);</span><br><span class="line">Buffer.BlockCopy(b, 0, c, a.Length, b);</span><br></pre></td></tr></table></figure>
<p>数据量小的情况下，没有太大差别，大量数据时速度比较如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Buffer.BlockCopy &gt; Array.ConstrainedCopy &gt; Array.Copy &gt; Concat</span><br></pre></td></tr></table></figure></p>
<h2 id="数组拆分"><a href="#数组拆分" class="headerlink" title="数组拆分"></a>数组拆分</h2><p>除了<code>lambda</code>表达式基本，就是使用复制方法，复制子数组到新数组了，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int[] a = new int[] &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">int[] b = new int[](3);</span><br><span class="line">Array.Copy(a, 0, b, 0, 3);</span><br></pre></td></tr></table></figure></p>
<h3 id="字符串数组-以指定间隔符-拼接成字符串"><a href="#字符串数组-以指定间隔符-拼接成字符串" class="headerlink" title="字符串数组 以指定间隔符 拼接成字符串"></a>字符串数组 以指定间隔符 拼接成字符串</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string[] a = new string[] &#123;&quot;1&quot;, &quot;2&quot;&#125;;</span><br><span class="line">string s = string.Join(&quot;, &quot;, a); // 1, 2</span><br></pre></td></tr></table></figure>
<h3 id="字符串-以指定间隔符-分割成字符串数组"><a href="#字符串-以指定间隔符-分割成字符串数组" class="headerlink" title="字符串 以指定间隔符 分割成字符串数组"></a>字符串 以指定间隔符 分割成字符串数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 单字符分割</span><br><span class="line">string s = &quot;a|b|c|&quot;;</span><br><span class="line">string[] a = s.Split(&apos;|&apos;);	// &#123;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;&quot;&#125;</span><br><span class="line"></span><br><span class="line">// 多字符分割</span><br><span class="line">string[] a = s.Split(new char[2] &#123;&apos;&amp;&apos;,&apos;|&apos;&#125;);</span><br><span class="line"></span><br><span class="line">// 字符串分割</span><br><span class="line">string[] a = Regex.Split(s,&quot;ab&quot;,RegexOptions.IgnoreCase);</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> CSharp </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> CSharp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【LeetCode】4. Median of Two Sorted Arrays]]></title>
      <url>/post/2a84b609.html</url>
      <content type="html"><![CDATA[<h2 id="两数组的中值"><a href="#两数组的中值" class="headerlink" title="两数组的中值"></a>两数组的中值</h2><p>题目地址：<a href="https://leetcode.com/problems/median-of-two-sorted-arrays/description/" target="_blank" rel="noopener">Go to LeetCode</a></p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>求两个有序数组中间位置的数，两个数组长度和为偶数个时中间数求平均。<br>(哇，这题理解起来还是挺简单的，就是要做到<code>O(m+n)</code>有点麻烦了。)</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><ol>
<li>归并排序（O(m+n)）<br>两个有序数组合并排序，这是归并排序算法的一部分。</li>
</ol>
<p>普 通 思 路。然而我这个想法就一闪而过就没了。Orz，还去用插排了，做了半天看起来判断太多太丑了，后面直接删了。然后看了下题解，自己写了遍。（扶额</p>
<ol>
<li>二分查找（O(m,n)）<br>二分查找一个数组还算简单，这两个数组就有点晕了。思路的话 <a href="https://leetcode.com/problems/median-of-two-sorted-arrays/solution/" target="_blank" rel="noopener">LeetCode</a> 上有的，虽然是英文的，但是我没准备汉化一遍。（反正我这也没人看，略略略~</li>
</ol>
<h2 id="记"><a href="#记" class="headerlink" title="记"></a>记</h2><p>还是要多做做题，不然都忘光了。脑子已经锈实了。</p>
]]></content>
      
        <categories>
            
            <category> Algorithm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> Algorithm </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【HDU-2215】I Love This Game]]></title>
      <url>/post/b2d1e532.html</url>
      <content type="html"><![CDATA[<h2 id="I-Love-This-Game"><a href="#I-Love-This-Game" class="headerlink" title="I Love This Game"></a>I Love This Game</h2><p>地址：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2115" target="_blank" rel="noopener">I Love This Game</a></p>
<h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>NBA技巧大赛，给出一组球员及完成时间，求排名，相同时间排名相同，先按时间优先排序然后球员姓名字典序</p>
<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>比较优先级<code>mm &gt; ss &gt; name</code>，然后对排序后数组逐个判断时间是否有相同的，相同则打印排名，否则排名等于下标+1</p>
<h3 id="记"><a href="#记" class="headerlink" title="记"></a>记</h3><p>今天公司网有点烂，LeetCode加载太慢了，就翻了下杭电。看看当初懒懒的就做了那么十几题，还有一题<code>WA</code>的（就这题。），于是重新弄了下环境（VSCode + TDM-GCC），折腾了好久，然后终于可以弄代码了，发现之前代码里少了个+1。=_=，可能是那时候改好了忘提交了吧。</p>
<p>win下普通<code>g++</code>环境用<code>TDM-GCC</code>就好了，体积比<code>Cygwin</code>、<code>Mingw</code>要小得多。VSCode配置文件见，<a href="https://github.com/0Kelvins/Algorithm" target="_blank" rel="noopener">Algorithm仓库</a>的<code>.vscode</code>文件夹。</p>
<p>因为不想把这题混到LeetCode的里面，所以新建了分类、仓库</p>
]]></content>
      
        <categories>
            
            <category> Algorithm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> C++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【LeetCode】3. Longest Substring Without Repeating Characters]]></title>
      <url>/post/ed2c3dd1.html</url>
      <content type="html"><![CDATA[<h2 id="字符串内无重复字母的最长子串"><a href="#字符串内无重复字母的最长子串" class="headerlink" title="字符串内无重复字母的最长子串"></a>字符串内无重复字母的最长子串</h2><p>题目地址：<a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/description/" target="_blank" rel="noopener">Go to LeetCode</a></p>
<h3 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h3><p>字符串都是 <strong>“字符”</strong> 串，那就逐个 <strong>字符</strong> 来考虑比较呗。</p>
<p>定义：</p>
<ul>
<li>目标串：字符串内无重复字母的最长子串</li>
<li>当前最大目标串长度：l</li>
<li>最大目标串长度:lmax</li>
</ul>
<p>解题步骤：</p>
<ol>
<li>设定<code>i</code>为目标串第一个字符下标，逐个字符遍历</li>
<li>比较当前字符在前面是否存在，是则<code>i</code>设置为已存在字符的下标+1（即要包含后面的字符，且不重复，只能舍弃前面的了，后面比较就从这里开始），否则当前最大目标串长度<code>l + 1</code></li>
<li>直到比较完当前字符前所有字符，若<code>l &gt; lmax</code>，则<code>lmax = l</code></li>
</ol>
<h3 id="记"><a href="#记" class="headerlink" title="记"></a>记</h3><p>Java啊什么的，各种框架用多了，总想着整体设计，但在这里这种思维可能会有点碍事。不要总想着从整体的串上来看，这样要找个这样的子串，要怎么比较呢，太麻烦了。</p>
<p>记得当初上数据结构的时候有一个字符串匹配算法（KMP），然后ACM里有一系列的题，我博客园还有以前的记录，那个记得是要麻烦很多的。</p>
<p>这题一次Ac，还算简单。倒是写这个记录写了半天= =b。嘛，太久不动脑子了，一次Ac还是蛮开心的ヽ(￣▽￣)ﾉ</p>
]]></content>
      
        <categories>
            
            <category> Algorithm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> Algorithm </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[NexT修改背景]]></title>
      <url>/post/4daf947.html</url>
      <content type="html"><![CDATA[<h2 id="修改背景步骤"><a href="#修改背景步骤" class="headerlink" title="修改背景步骤"></a>修改背景步骤</h2><ul>
<li>添加背景图片，到路径<code>next-&gt;source-&gt;images</code></li>
<li>修改NexT自定义样式文件：<code>next-&gt;source-&gt;css-&gt;_custom-&gt;custom.styl</code></li>
<li>添加样式代码<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"/images/background.png"</span>);</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed; <span class="comment">/*不随页面移动*/</span></span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat; <span class="comment">/*不重复*/</span></span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">50%</span> <span class="number">50%</span>; <span class="comment">/*居中*/</span></span><br><span class="line">    <span class="attribute">background-size</span>:cover;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*内容半透明背景*/</span></span><br><span class="line"><span class="selector-class">.header-inner</span>,</span><br><span class="line"><span class="selector-class">.content-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="built_in">rgba</span>(255,255,255,0.75) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*底部连接颜色*/</span></span><br><span class="line"><span class="selector-id">#footer</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【Hexo】标签插件测试]]></title>
      <url>/post/225108ff.html</url>
      <content type="html"><![CDATA[<p>主要是可以自定义一些样式</p>
<h2 id="Hexo标签插件"><a href="#Hexo标签插件" class="headerlink" title="Hexo标签插件"></a>Hexo标签插件</h2><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>在文章中插入指定大小的图片。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 例 --&gt;</span></span><br><span class="line">&#123;% img img-test /assets/images/avatar/avatar.jpg 150 150 图片测试 %&#125;</span><br></pre></td></tr></table></figure></p>
<img src="/assets/images/avatar/avatar.jpg" class="img-test" width="150" height="150" title="图片测试">
<h2 id="NexT内建标签"><a href="#NexT内建标签" class="headerlink" title="NexT内建标签"></a>NexT内建标签</h2><h3 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 其中 class="blockquote-center" 是必须的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"blockquote-center"</span>&gt;</span>blah blah blah<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span></span><br><span class="line">&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 标签别名 --&gt;</span></span><br><span class="line">&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center"><p>blah blah blah </p>
</blockquote>
<h3 id="突破容器宽度限制的图片"><a href="#突破容器宽度限制的图片" class="headerlink" title="突破容器宽度限制的图片"></a>突破容器宽度限制的图片</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 其中 class="full-image" 是必须的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/image-url"</span> <span class="attr">class</span>=<span class="string">"full-image"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span></span><br><span class="line">&#123;% fullimage /image-url, alt, title %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 别名 --&gt;</span></span><br><span class="line">&#123;% fi /image-url, alt, title %&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 图片太大没有cdn，先注释了=_=</span><br><span class="line">&#123;% fi /assets/images/illustration/HallstattAustria.jpg, NexT内建标签fi, NexT内建标签fi %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Bootstrap-Callout"><a href="#Bootstrap-Callout" class="headerlink" title="Bootstrap Callout"></a>Bootstrap Callout</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note class-name %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 例 --&gt;</span></span><br><span class="line">&#123;% note success %&#125; 内容 **加粗** (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<p>可选<code>class-name</code>为Bootstrap的样式:<br><code>default</code>、<code>primary</code>、<code>success</code>、<code>info</code>、<code>warning</code>、<code>danger</code></p>
<div class="note default"><p>内容 <strong>加粗</strong> </p></div>
<div class="note primary"><p>内容 <strong>加粗</strong> </p></div>
<div class="note success"><p>内容 <strong>加粗</strong> </p></div>
<div class="note info"><p>内容 <strong>加粗</strong> </p></div>
<div class="note warning"><p>内容 <strong>加粗</strong> </p></div>
<div class="note danger"><p>内容 <strong>加粗</strong> </p></div>]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 标签插件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【VS2015】无法连接FTP服务器]]></title>
      <url>/post/60b740d3.html</url>
      <content type="html"><![CDATA[<p>使用 Visual Studio 2015 时出现的问题</p>
<p>环境：win7</p>
<h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><ul>
<li>发布Web项目到FTP时 失败，并提示 <em>无法打开网站”ftp://…”。未安装与 FTP 服务器进行通信所需的组件（或”Unable to open the Web site ‘ftp://…’. The components for communicating with FTP servers are not installed.”）*</em></li>
<li>可以直接使用文件管理器正常访问<code>ftp</code>地址</li>
</ul>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://social.msdn.microsoft.com/Forums/en-us/338f95b6-19a3-48da-a975-662b4cb1e86c/the-components-for-communicating-with-ftp-servers-are-not-installed?forum=visualstudiogeneral" target="_blank" rel="noopener">The components for communicating with FTP servers are not installed.——<br>paaccess</a></li>
<li><a href="https://github.com/aspnet/Tooling/issues/748" target="_blank" rel="noopener">Publish with FTP does not work —— kurtdevocht</a></li>
</ul>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>安装<strong>32位</strong>的 <code>Visual C++ Redistributable Packages for Visual Studio 2013</code> ，然后重启电脑即可</p>
<p>下载链接：<a href="https://download.microsoft.com/download/F/3/5/F3500770-8A08-488E-94B6-17A1E1DD526F/vcredist_x86.exe" target="_blank" rel="noopener">vcredist_x86</a></p>
<h3 id="记"><a href="#记" class="headerlink" title="记"></a>记</h3><p>考虑把问题翻译成英文以后查，的确能搜到更多的信息</p>
]]></content>
      
        <categories>
            
            <category> Tools </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Tools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【LeetCode】TwoSum、AddTwoNumbers]]></title>
      <url>/post/8b21a190.html</url>
      <content type="html"><![CDATA[<h2 id="LeetCode小记"><a href="#LeetCode小记" class="headerlink" title="LeetCode小记"></a>LeetCode小记</h2><p>好久没写过题目了，思维都僵化了←_←，所以先找点简单些的题目找找感觉。<br>因为现在基本不会用到C/C++，所以使用Java来做。</p>
<h2 id="TwoSum系列题目"><a href="#TwoSum系列题目" class="headerlink" title="TwoSum系列题目"></a><code>TwoSum</code>系列题目</h2><p><strong>题意</strong> &gt; 求数组内相加为目标值的两个数的下标</p>
<h3 id="1-Two-Sum"><a href="#1-Two-Sum" class="headerlink" title="1 Two Sum"></a><code>1</code> Two Sum</h3><p>这题要做出来很简单，但是想优化一下时间复杂度就要思考思考了。第一反应只想到了用<code>Map</code>来存数和下标的键值对，考虑是不是排个序再取个目标值的一半，然后向两边加。但是这样实际上做了层排序，耗费了时间，如果有多个目标值而数组一致的话，可以考虑。当然这里就不是了。</p>
<p><strong>正解</strong>：使用<code>Map</code>，来逐个存储数组的数，并在存储前检查<code>Map</code>内是否包含<code>a</code>与将要存储的数<code>b</code>，满足<code>b + a = target</code>，满足则返回<code>a</code>的下标和当前数的下标，否则存储<code>b</code>及下标，然后继续下一个数。</p>
<p><strong>小结</strong>：这样省去了查找下标、查到结果以外的无用计算等等。</p>
<h3 id="167-Two-Sum-II-——-Input-array-is-sorted"><a href="#167-Two-Sum-II-——-Input-array-is-sorted" class="headerlink" title="167 Two Sum II —— Input array is sorted"></a><code>167</code> Two Sum II —— Input array is sorted</h3><p>刚好就看到有这题，之前从里往外的算法，实现比较不简洁，看到题解什么的都是从外往里算的，当然这样比较好用<code>while</code>来写。</p>
<h2 id="2-Add-Two-Numbers"><a href="#2-Add-Two-Numbers" class="headerlink" title="2 Add Two Numbers"></a><code>2</code> Add Two Numbers</h2><p><strong>题意</strong> &gt; 两个正整数，用单向链表来倒叙表示，链表的每个节点代表数的一位，求相加后的数对应链表。</p>
<p><strong>要点</strong>：相加进位，进位的值要加到下一个节点，最高位进位，两个数不同长度的补位</p>
<p><strong>坑</strong>：<code>1 + 9,9,9 = 0,0,0,1</code>，这里多次进位</p>
<p><strong>方法</strong>：我一开始用的递归实现，因为更好想一点吧（以前一定直接非递归的Orz），每个节点考虑，计算相加的结果，然后填入<code>new</code>的节点<code>t</code>，<code>t</code>的<code>next</code>递归调用传入两个节点对应的<code>next</code>，中间加上判空以及溢出计算就好了。<br>非递归也没有那么麻烦，只是用<code>while</code>来实现子节点的计算。</p>
]]></content>
      
        <categories>
            
            <category> Algorithm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> Algorithm </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[随笔2017-11-13]]></title>
      <url>/post/6bc11fb5.html</url>
      <content type="html"><![CDATA[<h3 id="Apache、Nginx和Tomcat的不同"><a href="#Apache、Nginx和Tomcat的不同" class="headerlink" title="Apache、Nginx和Tomcat的不同"></a>Apache、Nginx和Tomcat的不同</h3><ol>
<li>Apache和Nginx都是Http Server，主要代理静态Http资源请求，服务器本身不能动态生成页面（可以通过其他模块），Tomcat则是在Apache后加了一层应用，可以代理“动态”资源请求（Jsp、Servlet…)，即动态生成页面等</li>
<li>Nginx常用于反向代理服务器，并发非阻塞，Apache并发阻塞，但稳定</li>
</ol>
<h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><ol>
<li><p>删除表内所有数据</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRUNCAT TABLE A;</span><br></pre></td></tr></table></figure>
</li>
<li><p>有条件批量删除数据优化</p>
</li>
</ol>
<p>索引可以提高<code>select</code>的速度，但是会减慢<code>delete</code>的速度，所以，需要有条件大量删除数据时，可以考虑在半夜，备份索引，删除索引，建立删除条件的索引，然后批量删除数据</p>
<h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>用于作为各类镜像的容器，提高环境的搭建效率，可以快速便捷的部署到服务器</p>
<h3 id="日常"><a href="#日常" class="headerlink" title="日常"></a>日常</h3><p>在现在的工作里，越来越觉得以前学的软件工程、算法、计算机网络、Linux什么的都好有用，比那些的框架更有意义。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> SQL </tag>
            
            <tag> Server </tag>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[随笔2017-11-9]]></title>
      <url>/post/abffb977.html</url>
      <content type="html"><![CDATA[<h3 id="Vue小记"><a href="#Vue小记" class="headerlink" title="Vue小记"></a>Vue小记</h3><p>使用侦听属性<code>watch</code>时，属性只有新旧值不同时才会触发</p>
<h3 id="Js小记"><a href="#Js小记" class="headerlink" title="Js小记"></a>Js小记</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> == <span class="string">''</span> -&gt; <span class="literal">true</span></span><br><span class="line"><span class="number">0</span> === <span class="string">''</span> -&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><blockquote>
<p>Session在浏览器关闭后是不会直接自动结束的，重启浏览器重新进入新的会话</p>
</blockquote>
<p>Session ID在浏览器中是保存为Cookie的，只是不使用保存在硬盘上的话，会保存在进程中，即内存中。当浏览器关闭，进程下的Cookie自然丢失，重启也就找不到了，只能重启新的会话。</p>
<p>小记：<br>    为了延长登录有效时间，做了定时器来在每次请求后，定时刷新登录状态，但是一直没想好怎么做好随着Session结束，来结束定时器。原来浏览器关闭，Session还没被回收，那也就不用考虑了。做好定时的单例，以及定时的确定会关闭，以及随登录验证来启用结束更重要。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Vue </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Session </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[VS快捷键]]></title>
      <url>/post/18caccba.html</url>
      <content type="html"><![CDATA[<p>工具 -&gt; 环境 -&gt; 键盘<br>-&gt; 1. 显示命令包含：搜索要修改的快捷键名字</p>
<pre><code>* 修改显示智能提示的快捷键
名字：视图.显示智能标记
* 修改注释快捷键
搜索：注释
</code></pre><ol>
<li>新建快捷键用于 <em>全局</em> -&gt; 按快捷键 -&gt; 选中输入框，按下要设置的快捷键<br>个人习惯，修改为<code>Ctrl + ` </code><br><img src="/assets/images/vs_keys_config/vs-keys-config.png" alt="快捷键设置界面"></li>
</ol>
]]></content>
      
        <categories>
            
            <category> IDE </category>
            
        </categories>
        
        
        <tags>
            
            <tag> VS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[随笔2017-11-8]]></title>
      <url>/post/dcf889e1.html</url>
      <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>今天发现对产品业务不够了解的债，要还了。〒▽〒<br>做的工具对后面一个系统来说是没问题的，但是到再后面的系统，问题就放大了。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>详细的了解别的产品业务也是很有必要的，免得后期做好了再还债。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[NexT标签和分类页面]]></title>
      <url>/post/17076.html</url>
      <content type="html"><![CDATA[<h2 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h2><p>新建一个页面，命名为 tags 。命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure></p>
<h2 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h2><p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2017-11-6 22:19:52</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<p>注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2017-11-6 22:19:52</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<h2 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h2><p>在菜单中添加链接。编辑NexT的配置文件 ，添加 tags 到 menu 中，如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br></pre></td></tr></table></figure></p>
<h2 id="添加-分类-categories"><a href="#添加-分类-categories" class="headerlink" title="添加 分类 categories"></a>添加 分类 categories</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2017-11-06 22:07:29</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>如果页面显示不正常，一般都是有地方拼写错了，或者需要清理浏览器缓存</p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Maven多模块项目搭建]]></title>
      <url>/post/1ddf75e3.html</url>
      <content type="html"><![CDATA[<p><strong>框架/工具 关键字</strong></p>
<blockquote>
<p>Maven SpringBoot Myatis MySQL Tomcat IDEA</p>
</blockquote>
<h3 id="部分操作"><a href="#部分操作" class="headerlink" title="部分操作"></a>部分操作</h3><ol>
<li>新建父工程，<code>New &gt; Project &gt; Maven</code>，不使用原型（不勾选<code>Create from archetype</code>） -&gt; 填写项目信息</li>
<li>删除父工程下<code>src</code>目录</li>
<li><p>右键项目，新建子模块（New -&gt; Module），填写项目名称，其他默认即可<br>|-&gt; 非web模块，不使用原型新建<code>Maven</code>模块<br>|-&gt; web模块<br>  |-&gt; 使用<code>maven-archetype-webapp</code>构建<br>  |-&gt; <code>Spring Initializr</code>构建<code>Spring</code>相关项目<br>新建模块：<br><img src="/assets/images/multi_module_demo/new-module.png" alt="新建模块"><br>简单MVC项目结构如下所示：<br><img src="/assets/images/multi_module_demo/project-struct.png" alt="项目结构"></p>
</li>
<li><p>在各个子模块的pom文件中添加互相的依赖（父工程在前一步自动添加了对应的子模块<code>&lt;modules&gt;</code>）<br><img src="/assets/images/multi_module_demo/module-dependencies.png" alt="模块依赖"></p>
</li>
<li><p>添加依赖到父工程的pom中（<code>Spring Initializr</code>构建web模块的，把web模块的pom依赖改到父工程<br>然后，父工程pom添加</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- The plugin rewrites your manifest --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span><span class="comment">&lt;!-- 指定该Main Class为全局的唯一入口 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.like.DemoWebApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">layout</span>&gt;</span>ZIP<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span><span class="comment">&lt;!--可以把依赖的包都打包到生成的Jar包中--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--可以生成不含依赖包的不可执行Jar包--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- configuration&gt;</span></span><br><span class="line"><span class="comment">                      &lt;classifier&gt;exec&lt;/classifier&gt;</span></span><br><span class="line"><span class="comment">                    &lt;/configuration&gt; --&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>web模块pom添加<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 为jar包取名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>demo-start<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<ol>
<li>右键父项目 &gt; <code>Open Module Settings</code>进入<code>Project Structure</code> &gt; 子模块 &gt; <code>Dependencies</code> &gt; <code>+</code> &gt; <code>Module Dependency</code>，添加子模块需要引用的其他子模块</li>
<li>maven打包</li>
<li>配置启动设置，配置为启动web子模块的配置即可<br><img src="/assets/images/multi_module_demo/run-config.png" alt="模块依赖"></li>
</ol>
<h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><ol>
<li><p>maven统一打包命令(跳过测试)</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn package —Dmaven.test.skip=true</span><br></pre></td></tr></table></figure>
</li>
<li><p>编译/打包报错程序包xxx.xxx.xxx不存在，尝试</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean</span><br></pre></td></tr></table></figure>
</li>
<li><p>子模块间的引用要写在各自的pom文件里的 <code>&lt;dependencies&gt;</code>中，父工程配置<code>&lt;modules&gt;</code>即可</p>
</li>
<li><p>引用的jar包写在父工程pom的 <code>&lt;dependencies&gt;</code>中</p>
</li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Maven </tag>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SpringBoot搭建体验]]></title>
      <url>/post/5998cfba.html</url>
      <content type="html"><![CDATA[<p>虽然现在不在用Java开发，但是决定了解一下Java Web开发在用的比较新的东西<br>在这记录一下，SpringBoot搭建一个小型项目框架</p>
<h3 id="工具清单"><a href="#工具清单" class="headerlink" title="工具清单"></a>工具清单</h3><p>JDK IDEA MySQL</p>
<h3 id="框架工具组成"><a href="#框架工具组成" class="headerlink" title="框架工具组成"></a>框架工具组成</h3><p>SpringBoot + Mybatis + Thymeleaf + Maven</p>
<h3 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h3><ol>
<li>新建工程 -&gt; 选择<code>Spring Initializr</code> -&gt; 选好JDK -&gt; 填好项目信息</li>
<li>选择要集成的框架，这里选基本的<code>SpringBoot</code>项目需要的<br>  Web -&gt; Web<br>  Template Engines -&gt; Thymeleaf<br>  SQL -&gt; MyBatis JDBC MySQL</li>
<li>IDEA搭建好基本框架，Maven添加依赖包</li>
<li>删除<code>application.properties</code>，新建<code>application.yml</code>、<code>application-dev.yml</code>和<code>application-prod.yml</code>，分别作为主配置、开发配置、生成配置文件<br><code>application.yml</code>:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  thymeleaf:</span><br><span class="line">    mode: HTML5</span><br><span class="line">    encoding: utf-8</span><br><span class="line">    content-type: text/html</span><br><span class="line">    cache: false</span><br><span class="line">  profiles:</span><br><span class="line">    active: dev # 表示使用application-dev.yml</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8</span><br><span class="line">    username: root</span><br><span class="line">    password:</span><br><span class="line">    tomcat:</span><br><span class="line">      initialSize: 1</span><br><span class="line">      min-idle: 1</span><br><span class="line">      max-idle: 20</span><br><span class="line">      max-wait: 60000</span><br><span class="line">      timeBetweenEvictionRunsMillis: 60000</span><br><span class="line">      minEvictableIdleTimeMillis: 30000</span><br><span class="line">      validationQuery: SELECT 1</span><br><span class="line">      testWhileIdle: true</span><br><span class="line">      testOnBorrow: false</span><br><span class="line">      testOnReturn: false</span><br><span class="line">logging:</span><br><span class="line">  file: logs/demo.log</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><code>application-dev.yml</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8080</span><br></pre></td></tr></table></figure></p>
<p><code>application-prod.yml</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 443</span><br><span class="line">  ssl:</span><br><span class="line">    key-store: classpath:xxx.jks</span><br><span class="line">    key-store-password: xxx</span><br><span class="line">    keyStoreType: JKS</span><br><span class="line">    keyAlias: xxx</span><br></pre></td></tr></table></figure></p>
<ol>
<li>然后按照我的<code>SpringBootDemo</code>仓库来建controller什么的，就好了。</li>
<li>好吧，前面好多别人写了很多遍的东西，需要的话看我参考的博客就好了。<br><code>Thymeleaf</code>之前只撇过几眼，好像跟<code>JSTL</code>有点像，就没注意</li>
</ol>
<p><code>Thymeleaf</code>它是一个XML/XHTML/HTML5模板引擎，使用各种包含<code>th:*</code>属性的标签，格式其实和HTML有点不一样，head、body什么的都不一样。</p>
<p>Thymeleaf的url，因为模板里好像不能用<code>&amp;</code>符号，需要<code>&amp;amp;</code>替换，但是官方有对应的标签的<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;a href="/test?id=1&amp;name=2"&gt;a&lt;/a&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/test(id=1, name=2)&#125;"</span>&gt;</span>a<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<ol>
<li>配置启动设置，添加<code>SpringBoot</code>启动配置，集成了Tomcat的，不用想<code>SpringMVC</code>等等以前的配置Tomcat的配置，<code>Main class</code>就是<code>XxxApplication</code>，选上<code>Use classpath of module</code>和<code>JRE</code>，就可以启动了。</li>
<li>为了开发看起来舒服点，在<code>Project Structure</code>的<code>Modules</code>中设置一下对应文件目录作用，设置一下<code>Main class</code>为Spirng配置文件</li>
</ol>
<h3 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h3><p>框架用起来越来越简单了，但是框架解决的还是那些问题，只是省去了很多复杂的配置，写东西越来越简便，让我这样的“搬砖工”，写逻辑什么的更专注一点吧，或许有一天AI可以写逻辑了，大概就失业了:)</p>
]]></content>
      
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL安装]]></title>
      <url>/post/8b39915a.html</url>
      <content type="html"><![CDATA[<p>下了个<code>mysql-5.7.20-winx64</code>，以为是msi文件在压缩了一下呢。- -||</p>
<ol>
<li>解压到要安装的目录，如：<code>D:\Program Files\mysql-5.7.20-winx64</code></li>
<li><p>在bin下新建<code>my.ini</code>，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set=utf8 </span><br><span class="line">[mysqld]</span><br><span class="line">#设置3306端口</span><br><span class="line">port = 3306 </span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir=&quot;D:\Program Files\mysql-5.7.20-winx64&quot;</span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir=&quot;D:\Program Files\mysql-5.7.20-winx64\data&quot;</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections=200</span><br><span class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="line">character-set-server=utf8</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine=INNODB</span><br></pre></td></tr></table></figure>
</li>
<li><p>cmd，cd进入<code>D:\Program Files\mysql-5.7.20-winx64\bin</code>目录，执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;mysqld install</span><br><span class="line">Service successfully installed.</span><br><span class="line">&gt;mysqld --initialize-insecure --user=mysql</span><br><span class="line"></span><br><span class="line">&gt;net start mysql</span><br><span class="line"> MySQL 服务正在启动 .</span><br><span class="line"> MySQL 服务已经启动成功。</span><br></pre></td></tr></table></figure>
<p>这时候MySQL已经启动了，端口什么的如<code>my.ini</code>配置</p>
</li>
<li>但是为了全局使用，需要在环境变量<code>Path</code>添加<code>D:\Program Files\mysql-5.7.20-winx64\bin</code></li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[随笔-2017-11-01]]></title>
      <url>/post/433774cf.html</url>
      <content type="html"><![CDATA[<p>重装折腾win7，没关闭更新，更新100+补丁还失败还原，各种dll丢失。报错大致如下：</p>
<blockquote>
<p>D3DCompiler_47.dll、api-ms-win-core-libraryloader-l1-2-1.dll、gfx.dll……丢失</p>
</blockquote>
<p>启动Word2016、SS和MSSQL Server MS的时候(依赖都比较新的软件)报错，缺少<code>net46</code>。报错大致如下:</p>
<blockquote>
<p>“<module>“的类型初始值设定项引发异常<br>缺少”.Net Framework 4.6”</module></p>
</blockquote>
<p>原因：<br><code>D3DCompiler_47.dll</code>丢失，因为更新补丁失败还原的缘故<br>其他的是卸载了或者本来就缺新的<code>.Net Framework</code></p>
<p>解决方法：</p>
<ol>
<li><p>打补丁<code>Windows6.1-KB4019990-x64.msu</code>，应该是补上<code>D3DCompiler_47.dll</code>一系列的库的。<br><a href="http://blog.csdn.net/sxf359/article/details/78217247?locationNum=2&amp;fps=1" target="_blank" rel="noopener">Win32Exception (0x80004005): 找不到指定的模块</a></p>
</li>
<li><p>重装电脑里版本需要的.Net框架，打完补丁就可以装了，一般运行的话装个比较高版本的就好，我装的是<code>.Net Framework4.7</code>，会修复版本.Net框架“缺少”之类的问题。</p>
</li>
</ol>
<p>注：<code>.Net Fx</code>出现无法安装之类的问题见本文最后<br>以上。结果弄了好几天。(╯‵□′)╯︵┻━┻</p>
<h3 id="插曲1-2017-11-2-15-00-26"><a href="#插曲1-2017-11-2-15-00-26" class="headerlink" title="插曲1 2017-11-2 15:00:26"></a>插曲1 2017-11-2 15:00:26</h3><p>今天本来以为已经搞定了，结果发现VS2015里没有.Net Framework 4.5，于是又开始折腾。。。目前更糟糕了，VS起不来了，报没有.Net Fx4.6，然而卸载程序里面明明有的。<br>未完待续，好烦。</p>
<h3 id="插曲2-2017-11-2-16-49-13"><a href="#插曲2-2017-11-2-16-49-13" class="headerlink" title="插曲2 2017-11-2 16:49:13"></a>插曲2 2017-11-2 16:49:13</h3><ul>
<li>首先，卸载明明安装着的.Net Fx 4.6是不明智的</li>
<li>其次，修复VS更是浪费青春</li>
<li>然后，重装电脑里最新的.Net Fx，我的是4.7，然后4.6的问题就解决了。<br>但是并不能解决.Net Fx 4.5没有的问题，正在去官网下载4.5.2的Dev-Pack，328M，感觉装完有应该就会有4.5了</li>
<li>最后，吐槽一下，公司网真烂，太烂了，下载页好久才打开，加上电脑也烂，不然早弄好了</li>
</ul>
<h3 id="插曲终-2017-11-3-14-03-10"><a href="#插曲终-2017-11-3-14-03-10" class="headerlink" title="插曲终 2017-11-3 14:03:10"></a>插曲终 2017-11-3 14:03:10</h3><p>问题原因：<br>本机上有 <code>net45</code> 的文件没删干净，所以安装不了，但是肯定缺少文件了<br>解决办法：<br><code>.net framework</code> 的安装目录在 <code>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5</code><br>清理干净，或者直接从其他电脑拷一份过来就好了。</p>
<p>完结撒花。</p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> DotNet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【C#】预编译SQL]]></title>
      <url>/post/9dae95bf.html</url>
      <content type="html"><![CDATA[<p>C#中预编译SQL方法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// System.Data.Entity.Database</span><br><span class="line">int ExecuteSqlCommand(string sql, params object[] parameters);</span><br></pre></td></tr></table></figure></p>
<p>使用EF6框架，仓库使用生成的数据库上下文：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private EFDbContext dbctx = new EFDbContext();</span><br></pre></td></tr></table></figure></p>
<p>使用示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 删除tableA中，name以&quot;$&quot;结尾的数据</span><br><span class="line">string sql = &quot;DELETE FROM tableA WHRER name like \&quot;%@sign\&quot;&quot;;</span><br><span class="line">int result = dbctx.Database.ExecuteSqlCommand(sql,</span><br><span class="line">               new SqlParameter(&quot;sign&quot;, &quot;$&quot;)</span><br><span class="line">             );</span><br></pre></td></tr></table></figure></p>
<p>查询方法，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var db = new MSSqlDBContext();</span><br><span class="line">var name = &quot;tom&quot;;</span><br><span class="line">var list = db.Set&lt;Person&gt;().FromSql($&quot;select * from &#123;nameof(Person)&#125; where &#123;nameof(name)&#125;=@&#123;nameof(name)&#125; &quot;, </span><br><span class="line">new SqlParameter(nameof(name), name)).ToList();</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> CSharp </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> CSharp </tag>
            
            <tag> SQL </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[随笔-2017-10-26]]></title>
      <url>/post/57d9e48b.html</url>
      <content type="html"><![CDATA[<p>这两天稍微有点时间，简单看了看设计模式，感觉比上次理解多了，或许是要自己实际解决的问题更多了吧。</p>
<p>除了工厂模式、单例模式、MVC模式等等很经常使用的模式以外，享元、适配器等等各种模式也都有了自己理解的应用场景，我想，下次再看应该会更有感触吧。</p>
<p>回想很多大学里学的知识，也都是慢慢的觉得很有用处，当然这里也没有得后悔当初为什么没有好好学了，只能叹息有时间再补吧。</p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sublime记录]]></title>
      <url>/post/f04b92fe.html</url>
      <content type="html"><![CDATA[<h3 id="设置记录"><a href="#设置记录" class="headerlink" title="设置记录"></a>设置记录</h3><p>sublime.setting-user<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"color_scheme"</span>: <span class="string">"Packages/Theme - Afterglow/Afterglow-markdown.tmTheme"</span>,</span><br><span class="line">    <span class="attr">"expand_tabs_on_save"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"font_size"</span>: <span class="number">13</span>,</span><br><span class="line">    <span class="attr">"ignored_packages"</span>:</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"Markdown"</span>,</span><br><span class="line">        <span class="string">"Vintage"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"tab"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"translate_tabs_to_spaces"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"default_encoding"</span>: <span class="string">"UTF-8"</span>,</span><br><span class="line">    <span class="attr">"update_check"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Sublime </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sublime Terminal]]></title>
      <url>/post/49a0138a.html</url>
      <content type="html"><![CDATA[<p>无论是用Sublime写前端，还是写Markdown，经常要用到终端，每次<code>Win+R</code>再cmd也是麻烦</p>
<ol>
<li><p>Package Control -&gt; Terminal</p>
</li>
<li><p>设置Setting-Default，就是有<code>&quot;termainal&quot;:</code>这个参数的设置文件，改成下面设置，即可<code>Ctrl+Alt+T</code>启动普通cmd了（不改的话，默认为启动Power Shell）</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  // Replace with your own path to cmder.exe</span><br><span class="line">  "terminal": "cmd",</span><br><span class="line">  "parameters": ["/START", "%CWD%"]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><a href="https://github.com/wbond/sublime_terminal" target="_blank" rel="noopener">Sublime插件-Terminal的Github</a></p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Sublime </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[简历]]></title>
      <url>/post/963f9cce.html</url>
      <content type="html"><![CDATA[<h2 id="个人简历"><a href="#个人简历" class="headerlink" title="个人简历"></a>个人简历</h2><p>回头在写吧……</p>
]]></content>
      
        
        <tags>
            
            <tag> resume </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo搭建]]></title>
      <url>/post/57ee7c1d.html</url>
      <content type="html"><![CDATA[<h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><p><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">http://blog.csdn.net/gdutxiaoxu/article/details/53576018</a></p>
<h3 id="主题github地址"><a href="#主题github地址" class="headerlink" title="主题github地址"></a>主题github地址</h3><p><strong>yilia</strong> <code>https://github.com/litten/hexo-theme-yilia.git</code><br><strong>NexT</strong> <code>https://github.com/iissnan/hexo-theme-next.git</code></p>
<h3 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h3><p><a href="http://blog.csdn.net/xuezhisdc/article/details/53130383" target="_blank" rel="noopener">http://blog.csdn.net/xuezhisdc/article/details/53130383</a></p>
<p>新建文章<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"article title"</span></span><br></pre></td></tr></table></figure></p>
<p>生成部署<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g   <span class="comment"># 生成</span></span><br><span class="line">hexo d   <span class="comment"># 部署</span></span><br><span class="line"><span class="comment"># 或直接</span></span><br><span class="line">hexo d -g <span class="comment"># 在部署前先生成</span></span><br></pre></td></tr></table></figure></p>
<h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><ol>
<li><p><strong>部署</strong>：将生成在public文件夹内的文件复制到deploy.git内后，自动推送到git，自动部署需要安装插件，并配置发布地址等</p>
</li>
<li><p>新建文章的 <strong>命名、分类、标签</strong>：不能包含<code>#</code>符号，Github上面会404，其他的<code>\/.?</code>之类的应该也不行，<code>-_</code>以及数字是可以的</p>
</li>
<li><p>自定义页面，不渲染<br><a href="http://e12e.com/2016/06/05/hexo跳过指定文件的渲染/" target="_blank" rel="noopener">hexo跳过指定文件的渲染</a><br>在<code>_config.yml</code>文件中设置<code>skip_render</code>，都是相对<code>source</code>目录的路径：</p>
</li>
</ol>
<ul>
<li><p>跳过<code>source</code>目录下的<code>test.html</code>:</p>
<figure class="highlight plain"><figcaption><span>test.html```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 跳过`source`目录下`test`文件夹内所有文件：</span><br><span class="line">```skip_render: test/*</span><br></pre></td></tr></table></figure>
</li>
<li><p>跳过source目录下<code>test</code>文件夹内所有文件包括子文件夹以及子文件夹内的文件：</p>
<figure class="highlight plain"><figcaption><span>test/**```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* 跳过多个路径：</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>skip_render:</p>
<ul>
<li>test.html</li>
<li>test/*<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4. `_post`文件夹下是可以新建自己的文件夹的</span><br><span class="line"></span><br><span class="line">### [hexo标签插件](https://hexo.io/zh-cn/docs/tag-plugins.html)</span><br><span class="line">__jsFiddle__</span><br><span class="line">在文章中嵌入 jsFiddle。</span><br></pre></td></tr></table></figure>
</li>
</ul>
<iframe scrolling="no" width="[width]" height="[height]" src="//jsfiddle.net/shorttag/embedded/[tabs]/[skin]" frameborder="0" allowfullscreen></iframe>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__Gist__</span><br><span class="line">在文章中嵌入 Gist。</span><br></pre></td></tr></table></figure>
<script src="//gist.github.com/gist_id.js?file=[filename]"></script>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__iframe__</span><br><span class="line">在文章中插入 iframe。</span><br></pre></td></tr></table></figure>
<iframe src="url" width="[width]" height="[height]" frameborder="0" allowfullscreen></iframe>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__Image__</span><br><span class="line">在文章中插入指定大小的图片。</span><br></pre></td></tr></table></figure>
<img src="/path/to/image" class="[class names]" title="[width] [height] [title text [alt text]]">
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__Link__</span><br><span class="line">在文章中插入链接，并自动给外部链接添加 target=&quot;_blank&quot; 属性。</span><br></pre></td></tr></table></figure>
<a>text url [external] [title]</a>
<p>```</p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git命令]]></title>
      <url>/post/b6ef4fe0.html</url>
      <content type="html"><![CDATA[<p>强制更新覆盖本地<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch --all <span class="comment">#下载最新文件（未覆盖）</span></span><br><span class="line">$ git reset --hard origin/master <span class="comment">#定向最新下载版本</span></span><br><span class="line">$ git pull origin master <span class="comment">#更新，已经同步远程最新文件</span></span><br></pre></td></tr></table></figure></p>
<p>删除已纳入版本控制，并后添加到<code>.gitignore</code>的文件（注意<code>.</code>）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rm -r --cached .</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"update .gitignore"</span></span><br></pre></td></tr></table></figure></p>
<p>修改已<code>commit</code>备注</p>
<ol>
<li><p>输入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入最后一次提交的内容（vim编辑器） &gt; <code>a</code>进入插入模式 &gt; 修改 &gt; <code>Esc</code> &gt; 输入<code>:wq</code>，保存退出</p>
</li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<p>回头写点什么。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[categories]]></title>
      <url>/categories/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[tags]]></title>
      <url>/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
