<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[随笔2017-11-9]]></title>
      <url>/post/abffb977.html</url>
      <content type="html"><![CDATA[<h3 id="Vue小记"><a href="#Vue小记" class="headerlink" title="Vue小记"></a>Vue小记</h3><p>使用侦听属性<code>watch</code>时，属性只有新旧值不同时才会触发</p>
<h3 id="Js小记"><a href="#Js小记" class="headerlink" title="Js小记"></a>Js小记</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">0</span> == <span class="string">''</span> -&gt; <span class="literal">true</span></div><div class="line"><span class="number">0</span> === <span class="string">''</span> -&gt; <span class="literal">false</span></div></pre></td></tr></table></figure>
<h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><blockquote>
<p>Session在浏览器关闭后是不会直接自动结束的，重启浏览器重新进入新的会话</p>
</blockquote>
<p>Session ID在浏览器中是保存为Cookie的，只是不使用保存在硬盘上的话，会保存在进程中，即内存中。当浏览器关闭，进程下的Cookie自然丢失，重启也就找不到了，只能重启新的会话。</p>
<p>小记：<br>    为了延长登录有效时间，做了定时器来在每次请求后，定时刷新登录状态，但是一直没想好怎么做好随着Session结束，来结束定时器。原来浏览器关闭，Session还没被回收，那也就不用考虑了。做好定时的单例，以及定时的确定会关闭，以及随登录验证来启用结束更重要。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Vue </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Session </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[VS快捷键]]></title>
      <url>/post/18caccba.html</url>
      <content type="html"><![CDATA[<p>工具 -&gt; 环境 -&gt; 键盘<br>-&gt; 1. 显示命令包含：搜索要修改的快捷键名字</p>
<pre><code>* 修改显示智能提示的快捷键
名字：视图.显示智能标记
* 修改注释快捷键
搜索：注释
</code></pre><ol>
<li>新建快捷键用于 <em>全局</em> -&gt; 按快捷键 -&gt; 选中输入框，按下要设置的快捷键<br>个人习惯，修改为<code>Ctrl + ` </code><br><img src="/assets/images/vs_keys_config/vs-keys-config.png" alt="快捷键设置界面"></li>
</ol>
]]></content>
      
        <categories>
            
            <category> IDE </category>
            
        </categories>
        
        
        <tags>
            
            <tag> VS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[随笔2017-11-8]]></title>
      <url>/post/dcf889e1.html</url>
      <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>今天发现对产品业务不够了解的债，要还了。〒▽〒<br>做的工具对后面一个系统来说是没问题的，但是到再后面的系统，问题就放大了。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>详细的了解别的产品业务也是很有必要的，免得后期做好了再还债。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[NexT标签和分类页面]]></title>
      <url>/post/17076.html</url>
      <content type="html"><![CDATA[<h2 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h2><p>新建一个页面，命名为 tags 。命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page &quot;tags&quot;</div></pre></td></tr></table></figure></p>
<h2 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h2><p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">title: tags</div><div class="line">date: 2017-11-6 22:19:52</div><div class="line">type: &quot;tags&quot;</div><div class="line">layout: &quot;tags&quot;</div><div class="line">---</div></pre></td></tr></table></figure></p>
<p>注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">title: tags</div><div class="line">date: 2017-11-6 22:19:52</div><div class="line">type: &quot;tags&quot;</div><div class="line">layout: &quot;tags&quot;</div><div class="line">comments: false</div><div class="line">---</div></pre></td></tr></table></figure></p>
<h2 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h2><p>在菜单中添加链接。编辑NexT的配置文件 ，添加 tags 到 menu 中，如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  archives: /archives</div><div class="line">  tags: /tags</div></pre></td></tr></table></figure></p>
<h2 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h2><h3 id="分类-categories"><a href="#分类-categories" class="headerlink" title="分类 categories"></a>分类 categories</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page &quot;categories&quot;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: categories</div><div class="line">date: 2017-11-06 22:07:29</div><div class="line">types: &quot;categories&quot;</div><div class="line">layout: &quot;category&quot;</div><div class="line">---</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Maven多模块项目搭建]]></title>
      <url>/post/1ddf75e3.html</url>
      <content type="html"><![CDATA[<p><strong>框架/工具 关键字</strong></p>
<blockquote>
<p>Maven SpringBoot Myatis MySQL Tomcat IDEA</p>
</blockquote>
<h3 id="部分操作"><a href="#部分操作" class="headerlink" title="部分操作"></a>部分操作</h3><ol>
<li>新建父工程，<code>New &gt; Project &gt; Maven</code>，不使用原型（不勾选<code>Create from archetype</code>） -&gt; 填写项目信息</li>
<li>删除父工程下<code>src</code>目录</li>
<li><p>右键项目，新建子模块（New -&gt; Module），填写项目名称，其他默认即可<br>|-&gt; 非web模块，不使用原型新建<code>Maven</code>模块<br>|-&gt; web模块<br>  |-&gt; 使用<code>maven-archetype-webapp</code>构建<br>  |-&gt; <code>Spring Initializr</code>构建<code>Spring</code>相关项目<br>新建模块：<br><img src="/assets/images/multi_module_demo/new-module.png" alt="新建模块"><br>简单MVC项目结构如下所示：<br><img src="/assets/images/multi_module_demo/project-struct.png" alt="项目结构"></p>
</li>
<li><p>在各个子模块的pom文件中添加互相的依赖（父工程在前一步自动添加了对应的子模块<code>&lt;modules&gt;</code>）<br><img src="/assets/images/multi_module_demo/module-dependencies.png" alt="模块依赖"></p>
</li>
<li><p>添加依赖到父工程的pom中（<code>Spring Initializr</code>构建web模块的，把web模块的pom依赖改到父工程<br>然后，父工程pom添加</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- The plugin rewrites your manifest --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span><span class="comment">&lt;!-- 指定该Main Class为全局的唯一入口 --&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.like.DemoWebApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">layout</span>&gt;</span>ZIP<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span><span class="comment">&lt;!--可以把依赖的包都打包到生成的Jar包中--&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">                    <span class="comment">&lt;!--可以生成不含依赖包的不可执行Jar包--&gt;</span></div><div class="line">                    <span class="comment">&lt;!-- configuration&gt;</span></div><div class="line"><span class="comment">                      &lt;classifier&gt;exec&lt;/classifier&gt;</span></div><div class="line"><span class="comment">                    &lt;/configuration&gt; --&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>web模块pom添加<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 为jar包取名 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>demo-start<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure></p>
<ol>
<li>右键父项目 &gt; <code>Open Module Settings</code>进入<code>Project Structure</code> &gt; 子模块 &gt; <code>Dependencies</code> &gt; <code>+</code> &gt; <code>Module Dependency</code>，添加子模块需要引用的其他子模块</li>
<li>maven打包</li>
<li>配置启动设置，配置为启动web子模块的配置即可<br><img src="/assets/images/multi_module_demo/run-config.png" alt="模块依赖"></li>
</ol>
<h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><ol>
<li><p>maven统一打包命令(跳过测试)</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn package —Dmaven.test.skip=true</div></pre></td></tr></table></figure>
</li>
<li><p>编译/打包报错程序包xxx.xxx.xxx不存在，尝试</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn clean</div></pre></td></tr></table></figure>
</li>
<li><p>子模块间的引用要写在各自的pom文件里的 <code>&lt;dependencies&gt;</code>中，父工程配置<code>&lt;modules&gt;</code>即可</p>
</li>
<li><p>引用的jar包写在父工程pom的 <code>&lt;dependencies&gt;</code>中</p>
</li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Maven </tag>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SpringBoot搭建体验]]></title>
      <url>/post/5998cfba.html</url>
      <content type="html"><![CDATA[<p>虽然现在不在用Java开发，但是决定了解一下Java Web开发在用的比较新的东西<br>在这记录一下，SpringBoot搭建一个小型项目框架</p>
<h3 id="工具清单"><a href="#工具清单" class="headerlink" title="工具清单"></a>工具清单</h3><p>JDK IDEA MySQL</p>
<h3 id="框架工具组成"><a href="#框架工具组成" class="headerlink" title="框架工具组成"></a>框架工具组成</h3><p>SpringBoot + Mybatis + Thymeleaf + Maven</p>
<h3 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h3><ol>
<li>新建工程 -&gt; 选择<code>Spring Initializr</code> -&gt; 选好JDK -&gt; 填好项目信息</li>
<li>选择要集成的框架，这里选基本的<code>SpringBoot</code>项目需要的<br>  Web -&gt; Web<br>  Template Engines -&gt; Thymeleaf<br>  SQL -&gt; MyBatis JDBC MySQL</li>
<li>IDEA搭建好基本框架，Maven添加依赖包</li>
<li>删除<code>application.properties</code>，新建<code>application.yml</code>、<code>application-dev.yml</code>和<code>application-prod.yml</code>，分别作为主配置、开发配置、生成配置文件<br><code>application.yml</code>:<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">spring:</div><div class="line">  thymeleaf:</div><div class="line">    mode: HTML5</div><div class="line">    encoding: utf-8</div><div class="line">    content-type: text/html</div><div class="line">    cache: false</div><div class="line">  profiles:</div><div class="line">    active: dev # 表示使用application-dev.yml</div><div class="line">  datasource:</div><div class="line">    driver-class-name: com.mysql.jdbc.Driver</div><div class="line">    url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8</div><div class="line">    username: root</div><div class="line">    password:</div><div class="line">    tomcat:</div><div class="line">      initialSize: 1</div><div class="line">      min-idle: 1</div><div class="line">      max-idle: 20</div><div class="line">      max-wait: 60000</div><div class="line">      timeBetweenEvictionRunsMillis: 60000</div><div class="line">      minEvictableIdleTimeMillis: 30000</div><div class="line">      validationQuery: SELECT 1</div><div class="line">      testWhileIdle: true</div><div class="line">      testOnBorrow: false</div><div class="line">      testOnReturn: false</div><div class="line">logging:</div><div class="line">  file: logs/demo.log</div></pre></td></tr></table></figure>
</li>
</ol>
<p><code>application-dev.yml</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">server:</div><div class="line">  port: 8080</div></pre></td></tr></table></figure></p>
<p><code>application-prod.yml</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">server:</div><div class="line">  port: 443</div><div class="line">  ssl:</div><div class="line">    key-store: classpath:xxx.jks</div><div class="line">    key-store-password: xxx</div><div class="line">    keyStoreType: JKS</div><div class="line">    keyAlias: xxx</div></pre></td></tr></table></figure></p>
<ol>
<li>然后按照我的<code>SpringBootDemo</code>仓库来建controller什么的，就好了。</li>
<li>好吧，前面好多别人写了很多遍的东西，需要的话看我参考的博客就好了。<br><code>Thymeleaf</code>之前只撇过几眼，好像跟<code>JSTL</code>有点像，就没注意</li>
</ol>
<p><code>Thymeleaf</code>它是一个XML/XHTML/HTML5模板引擎，使用各种包含<code>th:*</code>属性的标签，格式其实和HTML有点不一样，head、body什么的都不一样。</p>
<p>Thymeleaf的url，因为模板里好像不能用<code>&amp;</code>符号，需要<code>&amp;amp;</code>替换，但是官方有对应的标签的<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- &lt;a href="/test?id=1&amp;name=2"&gt;a&lt;/a&gt; --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/test(id=1, name=2)&#125;"</span>&gt;</span>a<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<ol>
<li>配置启动设置，添加<code>SpringBoot</code>启动配置，集成了Tomcat的，不用想<code>SpringMVC</code>等等以前的配置Tomcat的配置，<code>Main class</code>就是<code>XxxApplication</code>，选上<code>Use classpath of module</code>和<code>JRE</code>，就可以启动了。</li>
<li>为了开发看起来舒服点，在<code>Project Structure</code>的<code>Modules</code>中设置一下对应文件目录作用，设置一下<code>Main class</code>为Spirng配置文件</li>
</ol>
<h3 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h3><p>框架用起来越来越简单了，但是框架解决的还是那些问题，只是省去了很多复杂的配置，写东西越来越简便，让我这样的“搬砖工”，写逻辑什么的更专注一点吧，或许有一天AI可以写逻辑了，大概就失业了:)</p>
]]></content>
      
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL安装]]></title>
      <url>/post/8b39915a.html</url>
      <content type="html"><![CDATA[<p>下了个<code>mysql-5.7.20-winx64</code>，以为是msi文件在压缩了一下呢。- -||</p>
<ol>
<li>解压到要安装的目录，如：<code>D:\Program Files\mysql-5.7.20-winx64</code></li>
<li><p>在bin下新建<code>my.ini</code>，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[mysql]</div><div class="line"># 设置mysql客户端默认字符集</div><div class="line">default-character-set=utf8 </div><div class="line">[mysqld]</div><div class="line">#设置3306端口</div><div class="line">port = 3306 </div><div class="line"># 设置mysql的安装目录</div><div class="line">basedir=&quot;D:\Program Files\mysql-5.7.20-winx64&quot;</div><div class="line"># 设置mysql数据库的数据的存放目录</div><div class="line">datadir=&quot;D:\Program Files\mysql-5.7.20-winx64\data&quot;</div><div class="line"># 允许最大连接数</div><div class="line">max_connections=200</div><div class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集</div><div class="line">character-set-server=utf8</div><div class="line"># 创建新表时将使用的默认存储引擎</div><div class="line">default-storage-engine=INNODB</div></pre></td></tr></table></figure>
</li>
<li><p>cmd，cd进入<code>D:\Program Files\mysql-5.7.20-winx64\bin</code>目录，执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt;mysqld install</div><div class="line">Service successfully installed.</div><div class="line">&gt;mysqld --initialize-insecure --user=mysql</div><div class="line"></div><div class="line">&gt;net start mysql</div><div class="line"> MySQL 服务正在启动 .</div><div class="line"> MySQL 服务已经启动成功。</div></pre></td></tr></table></figure>
<p>这时候MySQL已经启动了，端口什么的如<code>my.ini</code>配置</p>
</li>
<li>但是为了全局使用，需要在环境变量<code>Path</code>添加<code>D:\Program Files\mysql-5.7.20-winx64\bin</code></li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[随笔-2017-11-01]]></title>
      <url>/post/433774cf.html</url>
      <content type="html"><![CDATA[<p>重装折腾win7，没关闭更新，更新100+补丁还失败还原，各种dll丢失。报错大致如下：</p>
<blockquote>
<p>D3DCompiler_47.dll、api-ms-win-core-libraryloader-l1-2-1.dll、gfx.dll……丢失</p>
</blockquote>
<p>启动Word2016、SS和MSSQL Server MS的时候(依赖都比较新的软件)报错，缺少<code>net46</code>。报错大致如下:</p>
<blockquote>
<p>“<module>“的类型初始值设定项引发异常<br>缺少”.Net Framework 4.6”</module></p>
</blockquote>
<p>原因：<br><code>D3DCompiler_47.dll</code>丢失，因为更新补丁失败还原的缘故<br>其他的是卸载了或者本来就缺新的<code>.Net Framework</code></p>
<p>解决方法：</p>
<ol>
<li><p>打补丁<code>Windows6.1-KB4019990-x64.msu</code>，应该是补上<code>D3DCompiler_47.dll</code>一系列的库的。<br><a href="http://blog.csdn.net/sxf359/article/details/78217247?locationNum=2&amp;fps=1" target="_blank" rel="external">Win32Exception (0x80004005): 找不到指定的模块</a></p>
</li>
<li><p>重装电脑里版本需要的.Net框架，打完补丁就可以装了，一般运行的话装个比较高版本的就好，我装的是<code>.Net Framework4.7</code>，会修复版本.Net框架“缺少”之类的问题。</p>
</li>
</ol>
<p>注：<code>.Net Fx</code>出现无法安装之类的问题见本文最后<br>以上。结果弄了好几天。(╯‵□′)╯︵┻━┻</p>
<h3 id="插曲1-2017-11-2-15-00-26"><a href="#插曲1-2017-11-2-15-00-26" class="headerlink" title="插曲1 2017-11-2 15:00:26"></a>插曲1 2017-11-2 15:00:26</h3><p>今天本来以为已经搞定了，结果发现VS2015里没有.Net Framework 4.5，于是又开始折腾。。。目前更糟糕了，VS起不来了，报没有.Net Fx4.6，然而卸载程序里面明明有的。<br>未完待续，好烦。</p>
<h3 id="插曲2-2017-11-2-16-49-13"><a href="#插曲2-2017-11-2-16-49-13" class="headerlink" title="插曲2 2017-11-2 16:49:13"></a>插曲2 2017-11-2 16:49:13</h3><ul>
<li>首先，卸载明明安装着的.Net Fx 4.6是不明智的</li>
<li>其次，修复VS更是浪费青春</li>
<li>然后，重装电脑里最新的.Net Fx，我的是4.7，然后4.6的问题就解决了。<br>但是并不能解决.Net Fx 4.5没有的问题，正在去官网下载4.5.2的Dev-Pack，328M，感觉装完有应该就会有4.5了</li>
<li>最后，吐槽一下，公司网真烂，太烂了，下载页好久才打开，加上电脑也烂，不然早弄好了</li>
</ul>
<h3 id="插曲终-2017-11-3-14-03-10"><a href="#插曲终-2017-11-3-14-03-10" class="headerlink" title="插曲终 2017-11-3 14:03:10"></a>插曲终 2017-11-3 14:03:10</h3><p>问题原因：<br>本机上有 <code>net45</code> 的文件没删干净，所以安装不了，但是肯定缺少文件了<br>解决办法：<br><code>.net framework</code> 的安装目录在 <code>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5</code><br>清理干净，或者直接从其他电脑拷一份过来就好了。</p>
<p>完结撒花。</p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> DotNet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C#预编译SQL]]></title>
      <url>/post/9dae95bf.html</url>
      <content type="html"><![CDATA[<p>C#中预编译SQL方法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">int System.Data.Entity.Database.ExecuteSqlCommand(string sql, params object[] parameters);</div></pre></td></tr></table></figure></p>
<p>使用EF6框架，仓库使用生成的数据库上下文：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">private EFDbContext dbctx = new EFDbContext();</div></pre></td></tr></table></figure></p>
<p>使用示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// 删除tableA中，name以&quot;$&quot;结尾的数据</div><div class="line">string sql = &quot;DELETE FROM tableA WHRER name like \&quot;%@sign\&quot;&quot;;</div><div class="line">int result = dbctx.Database.ExecuteSqlCommand(sql,</div><div class="line">               new SqlParameter(&quot;sign&quot;, &quot;$&quot;)</div><div class="line">             );</div></pre></td></tr></table></figure></p>
<p>查询方法，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var db = new MSSqlDBContext();</div><div class="line">var name = &quot;tom&quot;;</div><div class="line">var list = db.Set&lt;Person&gt;().FromSql($&quot;select * from &#123;nameof(Person)&#125; where &#123;nameof(name)&#125;=@&#123;nameof(name)&#125; &quot;, </div><div class="line">new SqlParameter(nameof(name), name)).ToList();</div></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C#预编译SQL]]></title>
      <url>/post/9dae95bf.html</url>
      <content type="html"><![CDATA[<p>C#中预编译SQL方法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// System.Data.Entity.Database</div><div class="line">int ExecuteSqlCommand(string sql, params object[] parameters);</div></pre></td></tr></table></figure></p>
<p>使用EF6框架，仓库使用生成的数据库上下文：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">private EFDbContext dbctx = new EFDbContext();</div></pre></td></tr></table></figure></p>
<p>使用示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// 删除tableA中，name以&quot;$&quot;结尾的数据</div><div class="line">string sql = &quot;DELETE FROM tableA WHRER name like \&quot;%@sign\&quot;&quot;;</div><div class="line">int result = dbctx.Database.ExecuteSqlCommand(sql,</div><div class="line">               new SqlParameter(&quot;sign&quot;, &quot;$&quot;)</div><div class="line">             );</div></pre></td></tr></table></figure></p>
<p>查询方法，好像如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var db = new MSSqlDBContext();</div><div class="line">var name = &quot;tom&quot;;</div><div class="line">var list = db.Set&lt;Person&gt;().FromSql($&quot;select * from &#123;nameof(Person)&#125; where &#123;nameof(name)&#125;=@&#123;nameof(name)&#125; &quot;, </div><div class="line">new SqlParameter(nameof(name), name)).ToList();</div></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[随笔-2017-10-26]]></title>
      <url>/post/57d9e48b.html</url>
      <content type="html"><![CDATA[<p>这两天稍微有点时间，简单看了看设计模式，感觉比上次理解多了，或许是要自己实际解决的问题更多了吧。</p>
<p>除了工厂模式、单例模式、MVC模式等等很经常使用的模式以外，享元、适配器等等各种模式也都有了自己理解的应用场景，我想，下次再看应该会更有感触吧。</p>
<p>回想很多大学里学的知识，也都是慢慢的觉得很有用处，当然这里也没有得后悔当初为什么没有好好学了，只能叹息有时间再补吧。</p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sublime记录]]></title>
      <url>/post/f04b92fe.html</url>
      <content type="html"><![CDATA[<h3 id="设置记录"><a href="#设置记录" class="headerlink" title="设置记录"></a>设置记录</h3><p>sublime.setting-user<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"color_scheme"</span>: <span class="string">"Packages/Theme - Afterglow/Afterglow-markdown.tmTheme"</span>,</div><div class="line">    <span class="attr">"expand_tabs_on_save"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"font_size"</span>: <span class="number">13</span>,</div><div class="line">    <span class="attr">"ignored_packages"</span>:</div><div class="line">    [</div><div class="line">        <span class="string">"Markdown"</span>,</div><div class="line">        <span class="string">"Vintage"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"tab"</span>: <span class="number">2</span>,</div><div class="line">    <span class="attr">"translate_tabs_to_spaces"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"default_encoding"</span>: <span class="string">"UTF-8"</span>,</div><div class="line">    <span class="attr">"update_check"</span>: <span class="literal">false</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Sublime </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sublime Terminal]]></title>
      <url>/post/49a0138a.html</url>
      <content type="html"><![CDATA[<p>无论是用Sublime写前端，还是写Markdown，经常要用到终端，每次<code>Win+R</code>再cmd也是麻烦</p>
<ol>
<li><p>Package Control -&gt; Terminal</p>
</li>
<li><p>设置Setting-Default，就是有<code>&quot;termainal&quot;:</code>这个参数的设置文件，改成下面设置，即可<code>Ctrl+Alt+T</code>启动普通cmd了（不改的话，默认为启动Power Shell）</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  // Replace with your own path to cmder.exe</div><div class="line">  "terminal": "cmd",</div><div class="line">  "parameters": ["/START", "%CWD%"]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p><a href="https://github.com/wbond/sublime_terminal" target="_blank" rel="external">Sublime插件-Terminal的Github</a></p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Sublime </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[简历]]></title>
      <url>/post/963f9cce.html</url>
      <content type="html"><![CDATA[<h2 id="个人简历"><a href="#个人简历" class="headerlink" title="个人简历"></a>个人简历</h2><p>回头在写吧……</p>
]]></content>
      
        
        <tags>
            
            <tag> resume </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo搭建]]></title>
      <url>/post/57ee7c1d.html</url>
      <content type="html"><![CDATA[<h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><p><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">http://blog.csdn.net/gdutxiaoxu/article/details/53576018</a></p>
<h3 id="主题github地址"><a href="#主题github地址" class="headerlink" title="主题github地址"></a>主题github地址</h3><p><strong>yilia</strong> <code>https://github.com/litten/hexo-theme-yilia.git</code><br><strong>NexT</strong> <code>https://github.com/iissnan/hexo-theme-next.git</code></p>
<h3 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h3><p><a href="http://blog.csdn.net/xuezhisdc/article/details/53130383" target="_blank" rel="external">http://blog.csdn.net/xuezhisdc/article/details/53130383</a></p>
<p>新建文章<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new post <span class="string">"article title"</span></div></pre></td></tr></table></figure></p>
<p>生成部署<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo g   <span class="comment"># 生成</span></div><div class="line">hexo d   <span class="comment"># 部署</span></div><div class="line"><span class="comment"># 或直接</span></div><div class="line">hexo d -g <span class="comment"># 在部署前先生成</span></div></pre></td></tr></table></figure></p>
<h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><ol>
<li><p><strong>部署</strong>：将生成在public文件夹内的文件复制到deploy.git内后，自动推送到git，自动部署需要安装插件，并配置发布地址等</p>
</li>
<li><p>新建文章的 <strong>命名</strong>：不能包含<code>#</code>符号，Github上面会404，其他的<code>\/.?</code>之类的应该也不行<code>-_</code>以及数字是可以的</p>
</li>
<li><p>自定义页面，不渲染<br><a href="http://e12e.com/2016/06/05/hexo跳过指定文件的渲染/" target="_blank" rel="external">hexo跳过指定文件的渲染</a><br>在<code>_config.yml</code>文件中设置<code>skip_render</code>，都是相对<code>source</code>目录的路径：</p>
</li>
</ol>
<ul>
<li><p>跳过<code>source</code>目录下的<code>test.html</code>:</p>
<figure class="highlight plain"><figcaption><span>test.html```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">* 跳过`source`目录下`test`文件夹内所有文件：</div><div class="line">```skip_render: test/*</div></pre></td></tr></table></figure>
</li>
<li><p>跳过source目录下<code>test</code>文件夹内所有文件包括子文件夹以及子文件夹内的文件：</p>
<figure class="highlight plain"><figcaption><span>test/**```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">* 跳过多个路径：</div></pre></td></tr></table></figure>
</li>
</ul>
<p>skip_render:</p>
<ul>
<li>test.html</li>
<li>test/*<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">### [hexo标签插件](https://hexo.io/zh-cn/docs/tag-plugins.html)</div><div class="line">__jsFiddle__</div><div class="line">在文章中嵌入 jsFiddle。</div></pre></td></tr></table></figure>
</li>
</ul>
<iframe scrolling="no" width="[width]" height="[height]" src="//jsfiddle.net/shorttag/embedded/[tabs]/[skin]" frameborder="0" allowfullscreen></iframe>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">__Gist__</div><div class="line">在文章中嵌入 Gist。</div></pre></td></tr></table></figure>
<script src="//gist.github.com/gist_id.js?file=[filename]"></script>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">__iframe__</div><div class="line">在文章中插入 iframe。</div></pre></td></tr></table></figure>
<iframe src="url" width="[width]" height="[height]" frameborder="0" allowfullscreen></iframe>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">__Image__</div><div class="line">在文章中插入指定大小的图片。</div></pre></td></tr></table></figure>
<img src="/path/to/image" class="[class names]" title="[width] [height] [title text [alt text]]">
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">__Link__</div><div class="line">在文章中插入链接，并自动给外部链接添加 target=&quot;_blank&quot; 属性。</div></pre></td></tr></table></figure>
<a>text url [external] [title]</a>
<p>```</p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git命令]]></title>
      <url>/post/b6ef4fe0.html</url>
      <content type="html"><![CDATA[<p>强制更新覆盖本地<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git fetch --all <span class="comment">#下载最新文件（未覆盖）</span></div><div class="line">$ git reset --hard origin/master <span class="comment">#定向最新下载版本</span></div><div class="line">$ git pull <span class="comment">#更新，已经同步远程最新文件</span></div></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[categories]]></title>
      <url>/categories/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[tags]]></title>
      <url>/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<p>回头写点什么。</p>
]]></content>
    </entry>
    
  
</search>
