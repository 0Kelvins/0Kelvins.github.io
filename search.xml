<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SpringBoot对String类型返回值的处理</title>
      <link href="2021/08/20/Java/SpringBoot%E5%AF%B9String%E7%B1%BB%E5%9E%8B%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E5%A4%84%E7%90%86/"/>
      <url>2021/08/20/Java/SpringBoot%E5%AF%B9String%E7%B1%BB%E5%9E%8B%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><strong>问题：</strong></p><p>有类似如下返回值接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;test&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请求返回 <code>json</code> 格式数据，返回值应为：<code>&quot;hello&quot;</code>，但实际收到的数据为：<code>hello</code></p><p><strong>原因：</strong></p><ol><li><p>SpringBoot的Message响应处理流程</p><p> a. <code>test() </code>接口执行并返回<code>String</code>值</p><p> b. </p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HandlerMethodReturnValueHandlerComposite.handleReturnValue(Object returnValue,  MethodParameter returnType, …)  &#123;</span><br><span class="line">    selectHandler（）</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> c. </p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RequestResponseBodyMethodProcessor.handleReturnValue() &#123;</span><br><span class="line">    writeWithMessageConverters()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <code>writeWithMessageConverters()</code>在<code>RequestResponseBodyMethodProcessor</code>的父类<code>AbstractMessageConverterMethodProcessor</code>中，其中第一个部分</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">writeWithMessageConverters</span><span class="params">(<span class="meta">@Nullable</span> T value, MethodParameter returnType, ...)</span> <span class="keyword">throws</span> IOException ... </span>&#123;</span><br><span class="line"></span><br><span class="line">    Object body;</span><br><span class="line">    Class&lt;?&gt; valueType;</span><br><span class="line">    Type targetType;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里直接对字符序列类型数据写入body</span></span><br><span class="line">    <span class="keyword">if</span> (value <span class="keyword">instanceof</span> CharSequence) &#123;</span><br><span class="line">        body = value.toString();</span><br><span class="line">        valueType = String.class;</span><br><span class="line">        targetType = String.class;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        body = value;</span><br><span class="line">        valueType = getReturnValueType(body, returnType);</span><br><span class="line">        targetType = GenericTypeResolver.resolveType(getGenericType(returnType), returnType.getContainingClass());</span><br><span class="line">    &#125;</span><br><span class="line">    ... ...</span><br></pre></td></tr></table></figure><p> 对于字符序列的返回值做了特殊处理，直接将值toString()写入body中</p><p> 第二个部分</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (HttpMessageConverter&lt;?&gt; converter : <span class="keyword">this</span>.messageConverters) &#123;</span><br><span class="line">    ... ...</span><br><span class="line">    <span class="keyword">if</span> (... converter.canWrite(...)) &#123;</span><br><span class="line">        body = getAdvice().beforeBodyWrite(...);</span><br><span class="line">        <span class="keyword">if</span> (body != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ... ...</span><br><span class="line">            <span class="keyword">if</span> (genericConverter != <span class="keyword">null</span>) &#123;</span><br><span class="line">                genericConverter.write(body, targetType, selectedMediaType, outputMessage);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                ((HttpMessageConverter) converter).write(body, selectedMediaType, outputMessage);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            logger ... ...</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>; <span class="comment">// 直接返回终止遍历</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 进行HttpMessageConverters的遍历调用，messageConverters如下：</p><p> <img src="/assets/images/springboot_string_process/HttpMessageConverters.png" alt="HttpMessageConverters"></p><p> 对当前返回值进行类型对应Converter适配并在能够处理时，进行处理并返回值。</p><p> 两个<code>StringHttpMessageConverters</code>：</p><p> <img src="/assets/images/springboot_string_process/StringHttpMessageConverters.png" alt="StringHttpMessageConverters"></p></li><li><p>问题分析</p><p> writeWithMessageConverters() 这个方法对字符串的默认处理，以及 HttpMessageConverters 的默认顺序，以及处理返回机制，导致了String类型返回值不能呗 Jackson 的 MessageConverter 处理</p></li></ol><p><strong>解决方案：</strong></p><ol><li><p>对返回String类型值的接口，在返回的时候进行特殊处理，例如使用fastJson:</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> JSON.toJSONString(returnValue)</span><br></pre></td></tr></table></figure></li><li><p>【推荐】对返回值进行封装成对象就不会出现问题了，如下</p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;code&quot;</span>: <span class="number">200</span>, </span><br><span class="line">    <span class="attr">&quot;msg&quot;</span>: <span class="string">&quot;ok&quot;</span>, </span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: <span class="string">&quot;hello&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2020-10-28</title>
      <link href="2020/10/28/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942020-10-28/"/>
      <url>2020/10/28/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942020-10-28/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>win环境下，jupyter使用如 <code>!dir</code> 执行DOS命令乱码问题</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>修改编码：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span> 换成UTF-<span class="number">8</span>代码页</span><br><span class="line"></span><br><span class="line"><span class="built_in">chcp</span> <span class="number">936</span> 可以换回默认的GBK</span><br><span class="line"></span><br><span class="line"><span class="built_in">chcp</span> <span class="number">437</span> 是美国英语</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> DOS </tag>
            
            <tag> CMD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加虚拟环境到jupyter的kernel</title>
      <link href="2020/10/11/Python/%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E5%88%B0jupyter%E7%9A%84kernel/"/>
      <url>2020/10/11/Python/%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E5%88%B0jupyter%E7%9A%84kernel/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>使用conda创建的虚拟环境，使用pycharm在该环境下启动jupyter无法检测到GPU</p><a id="more"></a><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>添加虚拟环境到jupyter的kernel</p><p>1.使用conda install ipykernel安装ipykernel包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install ipykernel</span><br></pre></td></tr></table></figure><p>2.此步骤非常重要，使用ipython kernel install –user –name=tensorflow （tensorflow为你虚拟环境名称），添加虚拟环境kernel</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m ipykernel install --user --name=tensorflow</span><br></pre></td></tr></table></figure><p>3.再次打开jupyter就可以看到虚拟环境变量配置好了，可以切换kernel</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">print(tf.config.list_physical_devices(<span class="string">&#x27;GPU&#x27;</span>))</span><br></pre></td></tr></table></figure><p>可以看到自己的GPU了！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Tools </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【SQL】历史表及历史查询</title>
      <link href="2018/09/12/SQL/%E3%80%90SQL%E3%80%91%E5%8E%86%E5%8F%B2%E8%A1%A8%E5%8F%8A%E5%8E%86%E5%8F%B2%E6%9F%A5%E8%AF%A2/"/>
      <url>2018/09/12/SQL/%E3%80%90SQL%E3%80%91%E5%8E%86%E5%8F%B2%E8%A1%A8%E5%8F%8A%E5%8E%86%E5%8F%B2%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<p>存在原子记录表，数据量月累计最大千万，不能使用分区，不至于分布式存储，于是使用历史记录转存历史表方案<br><a id="more"></a></p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ol><li>动态创建历史表，并转存历史数据的存储过程</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> [dbo].[P_W_QuestionHisRedeposit]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> @tableMonth DATETIME, @tableDate <span class="keyword">NVARCHAR</span>(<span class="number">10</span>), @tableName <span class="keyword">NVARCHAR</span>(<span class="number">50</span>), @<span class="keyword">sql</span> <span class="keyword">NVARCHAR</span>(<span class="number">2000</span>), @<span class="keyword">error</span> <span class="built_in">INT</span>;</span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">error</span> = <span class="number">0</span>; <span class="comment">-- 是否有错</span></span><br><span class="line"><span class="keyword">DECLARE</span> @monthSpan <span class="built_in">INT</span>; <span class="comment">-- 最早数据的距今的月数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> @tableMonth = <span class="keyword">MIN</span>([RecordTime]) <span class="keyword">FROM</span> [dbo].[Question_His];</span><br><span class="line"><span class="keyword">SET</span> @monthSpan = <span class="keyword">DATEDIFF</span>(<span class="keyword">MONTH</span>, @tableMonth, <span class="keyword">GETDATE</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> @i <span class="built_in">INT</span>, @ErrMsg <span class="keyword">nvarchar</span>(<span class="number">4000</span>), @ErrSeverity <span class="built_in">int</span>;</span><br><span class="line"><span class="keyword">SET</span> @i = <span class="number">1</span>;</span><br><span class="line">WHILE @i &lt;= @monthSpan-- 遍历转存每月历史数据</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SET</span> @tableMonth = <span class="keyword">DATEADD</span>(<span class="keyword">MONTH</span>, -@i, <span class="keyword">GETDATE</span>());</span><br><span class="line"><span class="keyword">SET</span> @tableDate = <span class="keyword">CONVERT</span>(<span class="built_in">VARCHAR</span>(<span class="number">10</span>), <span class="keyword">DATEADD</span>(<span class="keyword">MONTH</span>, <span class="keyword">DATEDIFF</span>(<span class="keyword">MONTH</span>, <span class="number">0</span>, @tableMonth), <span class="number">0</span>), <span class="number">120</span>);</span><br><span class="line"><span class="keyword">SET</span> @tableName = <span class="string">'[dbo].[Question_His_'</span> + @tableDate + <span class="string">']'</span>; <span class="comment">-- 历史表名</span></span><br><span class="line"></span><br><span class="line">IF NOT EXISTS (<span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> [dbo].[Question_His] <span class="keyword">WHERE</span> <span class="keyword">DATEDIFF</span>(<span class="keyword">MONTH</span>, [RecordTime], <span class="keyword">GETDATE</span>()) = @i)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SET</span> @i = @i + <span class="number">1</span>;</span><br><span class="line">CONTINUE;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检查历史表是否已存在，月定时作业执行，应不会重复</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> sys.objects <span class="keyword">WHERE</span> object_id = OBJECT_ID(@tableName) <span class="keyword">AND</span> <span class="keyword">type</span> <span class="keyword">IN</span> (N<span class="string">'U'</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">BEGIN</span> TRY</span><br><span class="line"><span class="keyword">BEGIN</span> <span class="keyword">TRANSACTION</span></span><br><span class="line"><span class="comment">-- 建表</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="string">'CREATE TABLE '</span> + @tableName + <span class="string">' (</span></span><br><span class="line"><span class="string">[Id] [INT],</span></span><br><span class="line"><span class="string">[QuestionID] [VARCHAR](500),</span></span><br><span class="line"><span class="string">[Answers] [VARCHAR](MAX),</span></span><br><span class="line"><span class="string">[Result] [FLOAT],</span></span><br><span class="line"><span class="string">[UserID] [VARCHAR](100),</span></span><br><span class="line"><span class="string">[RecordTime] [DATETIME]</span></span><br><span class="line"><span class="string">)'</span>;</span><br><span class="line"><span class="keyword">EXECUTE</span>(@<span class="keyword">sql</span>);</span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">error</span> = @<span class="keyword">error</span> + @@<span class="keyword">ERROR</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 转存该月的历史数据</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="string">'INSERT INTO '</span>+ @tableName +<span class="string">' SELECT * FROM [dbo].[Question_His]'</span></span><br><span class="line">+ <span class="string">' WHERE DATEDIFF(MONTH, [RecordTime], GETDATE()) = '</span>+ <span class="keyword">CAST</span>(@i <span class="keyword">AS</span> <span class="keyword">NVARCHAR</span>(<span class="number">10</span>));</span><br><span class="line"><span class="keyword">EXECUTE</span>(@<span class="keyword">sql</span>);</span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">error</span> = @<span class="keyword">error</span> + @@<span class="keyword">ERROR</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除历史表该月数据</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="string">'DELETE FROM [dbo].[Question_His] WHERE DATEDIFF(MONTH, [RecordTime], GETDATE()) = '</span>+ <span class="keyword">CAST</span>(@i <span class="keyword">AS</span> <span class="keyword">NVARCHAR</span>(<span class="number">10</span>));</span><br><span class="line"><span class="keyword">EXECUTE</span>(@<span class="keyword">sql</span>);</span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">error</span> = @<span class="keyword">error</span> + @@<span class="keyword">ERROR</span>;</span><br><span class="line"><span class="keyword">COMMIT</span></span><br><span class="line"><span class="keyword">END</span> TRY</span><br><span class="line"><span class="keyword">BEGIN</span> CATCH</span><br><span class="line"><span class="keyword">IF</span> @@TRANCOUNT &gt; <span class="number">0</span> <span class="comment">-- 失败回滚</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> @ErrMsg = ERROR_MESSAGE(),</span><br><span class="line">@ErrSeverity = ERROR_SEVERITY()</span><br><span class="line"></span><br><span class="line">RAISERROR(@ErrMsg, @ErrSeverity, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">END</span> CATCH</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">SET</span> @i = @i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><ol><li><p>创建每月作业，创建执行转存历史的存储过程，建议使用DBMS操作，简单方便</p><p> 入口：SQL Server 代理 -&gt; 新建作业</p><p> 关键的地方：</p><p> 2.1 新建步骤【选择T-SQL; 选择执行数据库; 命令如下;】</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC [dbo].[P_W_LP_QuestionHisRedeposit]</span><br></pre></td></tr></table></figure><p> 2.2 新建计划 -&gt; 频率，执行：天 <code>1</code> 每 <code>1</code> 个月，</p></li></ol><ol><li>历史数据查询存储过程，使用时间筛选查询表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> PROC [dbo].[P_HisTableQuery]</span><br><span class="line">(</span><br><span class="line">@TableNamePrefix <span class="keyword">NVARCHAR</span>(<span class="number">100</span>),  <span class="comment">-- 历史表名</span></span><br><span class="line">@TimeColumnName <span class="keyword">NVARCHAR</span>(<span class="number">100</span>),   <span class="comment">-- 时间列</span></span><br><span class="line">@FromTime DATETIME,              <span class="comment">-- 开始时间</span></span><br><span class="line">@ToTime DATETIME,                <span class="comment">-- 截止时间</span></span><br><span class="line">@QueryCondition <span class="keyword">NVARCHAR</span>(<span class="keyword">MAX</span>) = <span class="string">''</span> <span class="comment">-- 其他查询条件，要格外注意字符串的引号转义问题</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> @tableName <span class="keyword">NVARCHAR</span>(<span class="number">100</span>), @<span class="keyword">sql</span> <span class="keyword">NVARCHAR</span>(<span class="keyword">max</span>)</span><br><span class="line"><span class="keyword">SET</span> @tableName = <span class="string">''</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 查出时间内所有历史表名</span></span><br><span class="line"><span class="keyword">DECLARE</span> t_cursor <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> <span class="keyword">name</span> <span class="keyword">FROM</span> sys.tables <span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">IN</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span> <span class="keyword">FROM</span> sys.tables</span><br><span class="line"> <span class="keyword">WHERE</span> <span class="keyword">name</span> = @TableNamePrefix </span><br><span class="line"> <span class="keyword">UNION</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span> <span class="keyword">FROM</span> sys.tables</span><br><span class="line"> <span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">LIKE</span> @TableNamePrefix+<span class="string">'_%'</span> <span class="keyword">AND</span> <span class="keyword">ISDATE</span>(<span class="keyword">RIGHT</span>(<span class="keyword">name</span>, <span class="number">10</span>)) = <span class="number">1</span></span><br><span class="line">   <span class="keyword">AND</span> <span class="keyword">CONVERT</span>(DATETIME, <span class="keyword">CAST</span>(<span class="keyword">RIGHT</span>(<span class="keyword">name</span>, <span class="number">10</span>) <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>)), <span class="number">120</span>) &gt;= @FromTime </span><br><span class="line">   <span class="keyword">AND</span> <span class="keyword">CONVERT</span>(DATETIME, <span class="keyword">CAST</span>(<span class="keyword">RIGHT</span>(<span class="keyword">name</span>, <span class="number">10</span>) <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>)), <span class="number">120</span>) &lt;= @ToTime</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 拼接各历史表查询结果</span></span><br><span class="line"><span class="keyword">OPEN</span> t_cursor</span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> t_cursor <span class="keyword">INTO</span> @tableName</span><br><span class="line"><span class="keyword">WHILE</span> @@FETCH_STATUS = <span class="number">0</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sql</span> += + <span class="string">' UNION SELECT * FROM ['</span> + @tableName + <span class="string">']'</span></span><br><span class="line">+ <span class="string">' WHERE ['</span> + @TimeColumnName + <span class="string">'] &gt;= '''</span> + <span class="keyword">CONVERT</span>(<span class="built_in">VARCHAR</span>(<span class="number">20</span>), @FromTime, <span class="number">120</span>) + <span class="string">''''</span></span><br><span class="line">+ <span class="string">' AND ['</span> + @TimeColumnName + <span class="string">'] &lt;= '''</span> + <span class="keyword">CONVERT</span>(<span class="built_in">VARCHAR</span>(<span class="number">20</span>), @ToTime, <span class="number">120</span>) + <span class="string">''''</span></span><br><span class="line">+ @QueryCondition</span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span>  t_cursor <span class="keyword">INTO</span> @tableName</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">CLOSE</span> t_cursor</span><br><span class="line"><span class="keyword">DEALLOCATE</span> t_cursor</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="keyword">SUBSTRING</span>(@<span class="keyword">sql</span>, <span class="number">7</span>, <span class="keyword">LEN</span>(@<span class="keyword">sql</span>)); <span class="comment">-- 截掉最开始的UNION，可以重复使用UNION ALL</span></span><br><span class="line"></span><br><span class="line">EXEC(@sql)</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>有条件（可以分区or搞分布式）就不要这样搞，开发维护起来太麻烦了(╯‵□′)╯︵┻━┻</p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 分表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【SQL】批量建库分区</title>
      <link href="2018/08/30/SQL/%E3%80%90SQL%E3%80%91%E6%89%B9%E9%87%8F%E5%BB%BA%E5%BA%93%E5%88%86%E5%8C%BA/"/>
      <url>2018/08/30/SQL/%E3%80%90SQL%E3%80%91%E6%89%B9%E9%87%8F%E5%BB%BA%E5%BA%93%E5%88%86%E5%8C%BA/</url>
      
        <content type="html"><![CDATA[<p>表分区过程是为单个数据库建立多个 <code>文件组（夹）</code> 及里面的 <code>文件</code> ，然后把表内数据按照 <code>分区函数</code> 和 <code>方案</code> ，放到不同的数据库文件里。通过这样的处理，使得表的数据、索引等分成多个部分，缓解单表过大导致检索太慢等问题。<br><a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>SQL Server 2008 R2</p><h2 id="流程及脚本"><a href="#流程及脚本" class="headerlink" title="流程及脚本"></a>流程及脚本</h2><h3 id="1-建库、文件组及文件"><a href="#1-建库、文件组及文件" class="headerlink" title="1. 建库、文件组及文件"></a>1. 建库、文件组及文件</h3><p>建库前要求先建好目录，然后修改下面脚本建立自己的库（注意下面脚本反斜杠替换为单个）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> <span class="keyword">master</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> @DbName <span class="built_in">VARCHAR</span>(<span class="keyword">max</span>), @<span class="keyword">Path</span> <span class="keyword">NVARCHAR</span>(<span class="number">1000</span>), @InitSize <span class="built_in">VARCHAR</span>(<span class="number">50</span>), @FileGrowth <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="keyword">Path</span> = <span class="string">'D:\\PulicDataBase\\'</span>,<span class="comment">-- 指定根路径(\\, hight light fix, 请自行替换为单反斜杠，下同)</span></span><br><span class="line">   @InitSize = <span class="string">'5MB'</span>, @FileGrowth = <span class="string">'10%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 指定数据库名称，多个用逗号隔开</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> @DbName= <span class="string">'DBTest, DBTest2'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="comment">-- 定义数据库名称临时表@temp</span></span><br><span class="line"><span class="keyword">DECLARE</span> @temp <span class="keyword">TABLE</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">ID</span> <span class="built_in">INT</span> <span class="keyword">IDENTITY</span>(<span class="number">1</span>,<span class="number">1</span>),<span class="comment">--自动编号（获知顺序）</span></span><br><span class="line"><span class="keyword">Result</span> <span class="built_in">VARCHAR</span>(<span class="keyword">MAX</span>)<span class="comment">--拆分后结果</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">DECLARE</span> @i <span class="built_in">INT</span>, @SourceSql <span class="built_in">VARCHAR</span>(<span class="keyword">max</span>), @target <span class="keyword">NVARCHAR</span>(<span class="keyword">MAX</span>), @StrSeprate <span class="built_in">VARCHAR</span>(<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">SELECT</span> @SourceSql = <span class="keyword">LTRIM</span>(<span class="keyword">RTRIM</span>(@DbName)), @StrSeprate=<span class="string">','</span><span class="comment">--指定源字符串、分隔符</span></span><br><span class="line">    <span class="keyword">IF</span> <span class="keyword">RIGHT</span>(@SourceSql, <span class="keyword">LEN</span>(@StrSeprate)) &lt;&gt; @StrSeprate<span class="keyword">SET</span> @SourceSql= @SourceSql + @StrSeprate</span><br><span class="line">    <span class="keyword">SET</span> @i = <span class="keyword">CHARINDEX</span>(@StrSeprate,@SourceSql)</span><br><span class="line">    <span class="keyword">WHILE</span> @i &gt;= <span class="number">1</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">SET</span> @target = <span class="keyword">LTRIM</span>(<span class="keyword">RTRIM</span>(<span class="keyword">left</span>(@SourceSql, @i<span class="number">-1</span>)))</span><br><span class="line">        <span class="keyword">IF</span> @target <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">AND</span> @target &lt;&gt; <span class="string">''</span><span class="keyword">INSERT</span> @temp <span class="keyword">VALUES</span>(@target)</span><br><span class="line"><span class="keyword">ELSE</span>  <span class="keyword">INSERT</span> @temp <span class="keyword">VALUES</span>(<span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">SET</span> @SourceSql = <span class="keyword">SUBSTRING</span>(@SourceSql, @i+<span class="number">1</span>, <span class="keyword">LEN</span>(@SourceSql)-@i)</span><br><span class="line">        <span class="keyword">SET</span> @i = <span class="keyword">CHARINDEX</span>(@StrSeprate,@SourceSql)</span><br><span class="line">    <span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--开始遍历@temp建库</span></span><br><span class="line"><span class="keyword">DECLARE</span> @DataBaseName <span class="keyword">NVARCHAR</span>(<span class="number">50</span>), @<span class="keyword">sql</span> <span class="keyword">NVARCHAR</span>(<span class="keyword">MAX</span>), @DBPath <span class="keyword">NVARCHAR</span>(<span class="number">500</span>)</span><br><span class="line"><span class="keyword">DECLARE</span> @i_Group <span class="built_in">INT</span><span class="comment">--文件组个数</span></span><br><span class="line"><span class="keyword">DECLARE</span> @Flag <span class="built_in">VARCHAR</span>(<span class="number">10</span>)<span class="comment">--数据库标识</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">RTRIM</span>(<span class="keyword">LTRIM</span>(<span class="keyword">ISNULL</span>(@<span class="keyword">Path</span>, <span class="string">''</span>))) = <span class="string">''</span><span class="keyword">SET</span> @<span class="keyword">Path</span> = <span class="string">'D:\\PulicDataBase\\'</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">Path</span> = <span class="keyword">RTRIM</span>(<span class="keyword">LTRIM</span>(@<span class="keyword">Path</span>))</span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">RIGHT</span>(@<span class="keyword">Path</span>, <span class="number">1</span>) &lt;&gt; <span class="string">'\\'</span><span class="keyword">SET</span> @<span class="keyword">Path</span> = @<span class="keyword">Path</span> + <span class="string">'\\'</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> @temp</span><br><span class="line"><span class="keyword">DECLARE</span> db_cursor <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> <span class="keyword">Result</span> <span class="keyword">FROM</span> @temp <span class="keyword">WHERE</span> <span class="keyword">ISNULL</span>(<span class="keyword">Result</span>, <span class="string">''</span>) &lt;&gt; <span class="string">''</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">ID</span></span><br><span class="line"><span class="comment">--开始游标</span></span><br><span class="line"><span class="keyword">OPEN</span> db_cursor  </span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> db_cursor <span class="keyword">INTO</span> @DataBaseName</span><br><span class="line"><span class="keyword">WHILE</span> @@fetch_status = <span class="number">0</span> </span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">BEGIN</span> TRY</span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">CHARINDEX</span>(<span class="string">'DBTest'</span>, @DataBaseName) &gt; <span class="number">0</span> <span class="keyword">SET</span> @DBPath = @<span class="keyword">Path</span> + <span class="string">'DBTest'</span> + <span class="string">'\\'</span><span class="comment">--数据库目录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> sysdatabases <span class="keyword">WHERE</span> <span class="keyword">name</span> = @DataBaseName) </span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">'【创建数据库】'</span>+ @DataBaseName +<span class="string">'已存在，不必重复创建！'</span>  </span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> db_cursor <span class="keyword">INTO</span> @DataBaseName</span><br><span class="line">CONTINUE;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sql</span>=<span class="string">'create database ['</span>+ @DataBaseName + <span class="string">'] on primary</span></span><br><span class="line"><span class="string">(</span></span><br><span class="line"><span class="string">name=N'''</span>+ @DataBaseName +<span class="string">''',</span></span><br><span class="line"><span class="string">filename=N'''</span>+ @DBPath + @DataBaseName +<span class="string">'.mdf'',</span></span><br><span class="line"><span class="string">size='</span>+ @InitSize +<span class="string">',</span></span><br><span class="line"><span class="string">filegrowth='</span>+ @FileGrowth +<span class="string">'</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">log on</span></span><br><span class="line"><span class="string">(</span></span><br><span class="line"><span class="string">name=N'''</span>+ @DataBaseName +<span class="string">'_Log'',</span></span><br><span class="line"><span class="string">filename=N'''</span>+ @DBPath + @DataBaseName +<span class="string">'_Log.ldf'',</span></span><br><span class="line"><span class="string">size='</span>+ @InitSize +<span class="string">',</span></span><br><span class="line"><span class="string">filegrowth='</span>+ @FileGrowth +<span class="string">'</span></span><br><span class="line"><span class="string">)'</span></span><br><span class="line"><span class="keyword">EXECUTE</span> (@<span class="keyword">sql</span>)</span><br><span class="line">PRINT <span class="string">'【创建数据库】'</span>+ @DataBaseName +<span class="string">'创建成功！'</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建指定数据库文件组及文件</span></span><br><span class="line"><span class="keyword">SELECT</span> @i_Group = <span class="number">1</span>, @Flag = <span class="string">'1'</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">CHARINDEX</span>(<span class="string">','</span>+ @DataBaseName +<span class="string">','</span>,<span class="string">','</span>+ <span class="string">'DBTest, DBTest2'</span> +<span class="string">','</span>) &gt; <span class="number">0</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">WHILE</span> @i_Group&lt;=<span class="number">11</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="string">'IF NOT EXISTS(SELECT * FROM sysfilegroups sp_helpfilegroup WHERE groupname = ''FileGroup_'</span> + @Flag + <span class="string">'_'</span> + <span class="keyword">CAST</span>(@i_Group <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>)) +<span class="string">''') '</span></span><br><span class="line">+ <span class="string">'ALTER DATABASE ['</span>+ @DataBaseName +<span class="string">'] ADD FILEGROUP FileGroup_'</span> + @Flag + <span class="string">'_'</span> + <span class="keyword">CAST</span>(@i_Group <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>)) + <span class="string">' '</span></span><br><span class="line">+ <span class="string">'IF NOT EXISTS(SELECT * FROM sys.database_files WHERE name = '''</span> + @DataBaseName + <span class="string">'_File_'</span> + <span class="keyword">CAST</span>(@i_Group <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>)) +<span class="string">''') '</span></span><br><span class="line">+ <span class="string">'ALTER DATABASE ['</span>+ @DataBaseName +<span class="string">'] ADD FILE (name = '''</span> + @DataBaseName + <span class="string">'_File_'</span> + <span class="keyword">CAST</span>(@i_Group <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>)) +<span class="string">''', filename = '''</span> + @DBPath + @DataBaseName + <span class="string">'_File_'</span> + <span class="keyword">CAST</span>(@i_Group <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>)) + <span class="string">'.mdf'', maxsize = UNLIMITED, filegrowth = 10%) to filegroup [FileGroup_'</span> + @Flag + <span class="string">'_'</span> + <span class="keyword">CAST</span>(@i_Group <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>)) +<span class="string">']'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXECUTE</span> (@<span class="keyword">sql</span>)</span><br><span class="line"><span class="keyword">SET</span> @i_Group = @i_Group + <span class="number">1</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">END</span> TRY</span><br><span class="line"><span class="keyword">BEGIN</span> CATCH</span><br><span class="line">PRINT <span class="string">'【创建数据库】'</span>+ @DataBaseName + <span class="string">'创建时出错：'</span> + ERROR_MESSAGE()</span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> db_cursor <span class="keyword">INTO</span> @DataBaseName</span><br><span class="line">CONTINUE</span><br><span class="line"><span class="keyword">END</span> CATCH</span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> db_cursor <span class="keyword">INTO</span> @DataBaseName</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">CLOSE</span> db_cursor</span><br><span class="line"><span class="keyword">DEALLOCATE</span> db_cursor</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><h3 id="2-创建分区函数及方案"><a href="#2-创建分区函数及方案" class="headerlink" title="2. 创建分区函数及方案"></a>2. 创建分区函数及方案</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> DBTest</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 表分区函数</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> sys.partition_functions <span class="keyword">WHERE</span> <span class="keyword">name</span>=<span class="string">'PF_PRE_FIVEMILLOIN'</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PARTITION</span> <span class="keyword">FUNCTION</span> PF_PRE_FIVEMILLOIN(<span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">AS</span> <span class="keyword">RANGE</span> <span class="keyword">LEFT</span></span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">VALUES</span>(<span class="number">5000000</span>, <span class="number">10000000</span>, <span class="number">15000000</span>, <span class="number">20000000</span>, <span class="number">25000000</span>, <span class="number">30000000</span>, <span class="number">35000000</span>, <span class="number">40000000</span>, <span class="number">45000000</span>, <span class="number">50000000</span>)</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="comment">--表分区方案</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> sys.partition_schemes <span class="keyword">WHERE</span> <span class="keyword">name</span>=<span class="string">'PS_ALL_GROUP'</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PARTITION</span> SCHEME PS_ALL_GROUP</span><br><span class="line"><span class="keyword">AS</span> <span class="keyword">PARTITION</span> PF_PRE_FIVEMILLOIN</span><br><span class="line"><span class="keyword">TO</span> (FileGroup_843_1, FileGroup_843_2, FileGroup_843_3, FileGroup_843_4, FileGroup_843_5, FileGroup_843_6, FileGroup_843_7, FileGroup_843_8, FileGroup_843_9, FileGroup_843_10, FileGroup_843_11)</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><h3 id="3-建表，使用分区索引"><a href="#3-建表，使用分区索引" class="headerlink" title="3. 建表，使用分区索引"></a>3. 建表，使用分区索引</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--建表</span></span><br><span class="line">IF NOT EXISTS (<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> sys.objects <span class="keyword">WHERE</span> object_id = OBJECT_ID(N<span class="string">'[dbo].[T_Test]'</span>) <span class="keyword">AND</span> <span class="keyword">type</span> <span class="keyword">IN</span> (N<span class="string">'U'</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [dbo].T_Test(</span><br><span class="line">[<span class="keyword">Id</span>] [<span class="built_in">INT</span>] <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">[<span class="keyword">No</span>] [<span class="built_in">VARCHAR</span>](<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">[<span class="keyword">Name</span>] [<span class="built_in">VARCHAR</span>](<span class="number">1000</span>) <span class="literal">NULL</span>,</span><br><span class="line">[RecordTime] [DATETIME] <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="keyword">CONSTRAINT</span> [PK_T_Test] PRIMARY <span class="keyword">KEY</span> CLUSTERED </span><br><span class="line">(</span><br><span class="line">[<span class="keyword">Id</span>] <span class="keyword">ASC</span></span><br><span class="line">) <span class="keyword">WITH</span> (PAD_INDEX = <span class="keyword">OFF</span>, STATISTICS_NORECOMPUTE = <span class="keyword">OFF</span>, IGNORE_DUP_KEY = <span class="keyword">OFF</span>, ALLOW_ROW_LOCKS = <span class="keyword">ON</span>, ALLOW_PAGE_LOCKS = <span class="keyword">ON</span>) <span class="keyword">ON</span> [PS_ALL_GROUP]([<span class="keyword">Id</span>])</span><br><span class="line"> )</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">-- 索引</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> SYSINDEXES <span class="keyword">WHERE</span> <span class="keyword">NAME</span>=<span class="string">'IX_T_Test_No_Time'</span>)</span><br><span class="line"><span class="keyword">CREATE</span> NONCLUSTERED <span class="keyword">INDEX</span> IX_T_Test_No_Time <span class="keyword">ON</span> [dbo].[T_Test ]</span><br><span class="line">(</span><br><span class="line">    [<span class="keyword">No</span>] <span class="keyword">ASC</span>,</span><br><span class="line">    [RecordTime] <span class="keyword">DESC</span></span><br><span class="line">)<span class="keyword">WITH</span> (PAD_INDEX  = <span class="keyword">OFF</span>, STATISTICS_NORECOMPUTE  = <span class="keyword">OFF</span>, SORT_IN_TEMPDB = <span class="keyword">OFF</span>, IGNORE_DUP_KEY = <span class="keyword">OFF</span>, DROP_EXISTING = <span class="keyword">OFF</span>, <span class="keyword">ONLINE</span> = <span class="keyword">OFF</span>, ALLOW_ROW_LOCKS  = <span class="keyword">ON</span>, ALLOW_PAGE_LOCKS  = <span class="keyword">ON</span>) <span class="keyword">ON</span> [PS_ALL_GROUP]([<span class="keyword">Id</span>])</span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><h3 id="4-查看表各分区记录情况"><a href="#4-查看表各分区记录情况" class="headerlink" title="4. 查看表各分区记录情况"></a>4. 查看表各分区记录情况</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> $partition.PF_PRE_FIVEMILLOIN(<span class="keyword">Id</span>) <span class="keyword">AS</span> PartitionNumber, <span class="keyword">count</span>(*) <span class="keyword">AS</span> RecordCount</span><br><span class="line"><span class="keyword">FROM</span> T_Test</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> $partition.PF_PRE_FIVEMILLOIN(<span class="keyword">Id</span>)</span><br></pre></td></tr></table></figure><h2 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h2><p>在目前项目中，某些数据会存在积累速度快，但是需要长时间保存的情况，所以为对应表进行分区。如果所有的表都有大数据的压力，那就考虑数据库集群吧。</p><p>考虑到单表数据量还是不会减少，所以这并不能满足大数据量的单表做到用户是实时交互体验，如果有必要，需要做部分数据缓存，如果要统计需要做定时统计结果缓存等等。</p><p>分区数量最好考虑到服务器的CPU核数，考虑索引和分区函数方案的效果等等。</p><p>如果数据不能清理，始终会增加，考虑按月按年分区，可以使用作业计划调用动态建立文件（组）及表分区的存储过程来实现。</p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 分区 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Jmeter】4.0的安装</title>
      <link href="2018/07/02/Test/%E3%80%90Jmeter%E3%80%914%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>2018/07/02/Test/%E3%80%90Jmeter%E3%80%914%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p>Jmeter4.0与前面的版本有所不一样，所有的插件由新的插件管理器下载，收集服务器性能信息的包也有点难找，远程脚本调试的配置也有点小坑<br><a id="more"></a></p><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><ol><li><p><a href="https://jmeter.apache.org/" target="_blank" rel="noopener">官网</a>下载，解压到自己的目录（最好没空格的路径），将bin目录添加至环境变量（可选）</p></li><li><p>修改配置文件 <code>jmeter.properties</code> ，搜索配置项进行修改</p></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">language=zh_CN</span> <span class="comment"># 默认UI语言</span></span><br><span class="line"><span class="string">remote_hosts=172.16.41.34:1099</span> <span class="comment"># 一定是正在运行的所有服务，如果有没启动的服务会报错，坑。</span></span><br><span class="line"><span class="string">server_port=1099</span> <span class="comment"># RMI通信端口，被远程的服务器需要换端口改这个</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#server.rmi.localport=1089 # 服务器端用于指定本地端口，默认随机可用端口，不是上面remote的端口！</span></span><br></pre></td></tr></table></figure><ol><li><p>插件安装：<a href="https://jmeter-plugins.org/downloads/all/" target="_blank" rel="noopener">https://jmeter-plugins.org/downloads/all/</a></p><blockquote><p>Download plugins-manager.jar and put it into lib/ext directory, then restart JMeter. </p></blockquote><p> 3.1 将下载的 <code>plugins-manager.jar</code> 放到jmeter的 <code>lib/ext</code> 目录下，重启后</p><p> 3.2 选项-&gt;Plugins Manager-&gt;Available Plugins-&gt;PerfMon (Servers Performance Monitoring)(勾选)-&gt;Apply…</p></li></ol><ol><li><p>安装PerfMon服务器端客户端，根据插件说明文档：<a href="https://jmeter-plugins.org/wiki/PerfMon/" target="_blank" rel="noopener">https://jmeter-plugins.org/wiki/PerfMon/</a></p><blockquote><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Server Agent tool detailed description is placed <a href="https://github.com/undera/perfmon-agent/blob/master/README.md" target="_blank" rel="noopener">here</a>.</p></blockquote><p> 找到服务器收集性能数据的包 <code>Server Agent</code>，下载并安装到服务器</p></li><li><p>服务器端安装jmeter，用于远程脚本执行，配置注意 <code>server_port</code> 要于你客户端配置的 <code>remote_hosts</code> 里一样，客户端要注意如果出现</p><blockquote><p>java.rmi.ConnectException: Connection refused to host: (your server ip); nested exception is:<br>java.net.ConnectException: Connection timed out: connect</p></blockquote><p> 那么你的 <code>remote_hosts</code> 配置中的一个服务器端jmeter可能没有启动</p></li></ol><h3 id="记"><a href="#记" class="headerlink" title="记"></a>记</h3><p>搭环境什么的最坑了Orz。</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jemeter </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Vue】模块化项目构建</title>
      <link href="2018/06/13/Front/%E3%80%90Vue%E3%80%91%E6%A8%A1%E5%9D%97%E5%8C%96%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/"/>
      <url>2018/06/13/Front/%E3%80%90Vue%E3%80%91%E6%A8%A1%E5%9D%97%E5%8C%96%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="Vue-Typescript-模块化项目的构建"><a href="#Vue-Typescript-模块化项目的构建" class="headerlink" title="Vue + Typescript 模块化项目的构建"></a>Vue + Typescript 模块化项目的构建</h2><p>得益于 <code>vue-cli 3.0</code> 多了 <code>create</code>，项目构建变得非常的简单了</p><h3 id="构建主要步骤"><a href="#构建主要步骤" class="headerlink" title="构建主要步骤"></a>构建主要步骤</h3><ol><li><p>默认已经有 <code>node.js</code> 环境，最好8+版本</p></li><li><p>安装 <code>vue-cli 3.0</code></p><p> 1.0 卸载旧版2.x版本，如果有的话</p><p> 1.1 <code>npm i -g @vue/cli</code>，（chromedriver可能安装失败，需要从taobao镜像安装缓存，然后再安装cli）</p><p> 1.2 <code>vue -V</code> 确认版本为 3.x（目前为3.0.0-beta.16）</p></li><li><p>使用 <code>vue-cli</code> 构建框架</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> vue create vue</span></span><br><span class="line"></span><br><span class="line">Vue CLI v3.0.0-beta.16</span><br><span class="line">? Please pick a preset: Manually select features</span><br><span class="line"></span><br><span class="line">? Check the features needed for your project:</span><br><span class="line"> (*) Babel</span><br><span class="line"> (*) TypeScript</span><br><span class="line"> ( ) Progressive Web App (PWA) Support # 网页App</span><br><span class="line"> (*) Router</span><br><span class="line"> (*) Vuex</span><br><span class="line"> (*) CSS Pre-processors</span><br><span class="line"> (*) Linter / Formatter</span><br><span class="line"> (*) Unit Testing</span><br><span class="line"> ( ) E2E Testing # 端到端调试</span><br><span class="line"></span><br><span class="line">? Use class-style component syntax? Yes</span><br><span class="line"></span><br><span class="line">? Use Babel alongside TypeScript for auto-detected polyfills? Yes</span><br><span class="line"></span><br><span class="line">? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): LESS</span><br><span class="line"></span><br><span class="line">? Pick a linter / formatter config: TSLint</span><br><span class="line"></span><br><span class="line">? Pick additional lint features: Lint on save</span><br><span class="line"></span><br><span class="line">? Pick a unit testing solution: Mocha</span><br><span class="line"></span><br><span class="line">? Where do you prefer placing config for Babel, PostCSS, ESLint, etc.? In dedicated config files # 分离配置文件</span><br></pre></td></tr></table></figure><p>以上为我的具体框架选择</p><ol><li><p><code>npm/yarn serve</code>运行即可</p></li><li><p>需要修改 <code>webpack</code> 等设置，新建 <code>vue.config.js</code> 可以自定义配置，具体配置见官方 <code>vue-cli</code> 仓库-&gt; docs -&gt; config</p><p> 注：支持Jsx，内置webpack、babel、ts等，基本无需多余配置，开箱即用，相对2.x自己构建已经非常精简了</p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"vue"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.1.0"</span>,</span><br><span class="line">    <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"serve"</span>: <span class="string">"vue-cli-service serve"</span>,</span><br><span class="line">        <span class="attr">"build"</span>: <span class="string">"vue-cli-service build"</span>,</span><br><span class="line">        <span class="attr">"lint"</span>: <span class="string">"vue-cli-service lint"</span>,</span><br><span class="line">        <span class="attr">"test:unit"</span>: <span class="string">"vue-cli-service test:unit"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">        <span class="attr">"bootstrap-vue"</span>: <span class="string">"^2.0.0-rc.11"</span>,</span><br><span class="line">        <span class="attr">"vue"</span>: <span class="string">"^2.5.16"</span>,</span><br><span class="line">        <span class="attr">"vue-class-component"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">        <span class="attr">"vue-property-decorator"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">        <span class="attr">"vue-router"</span>: <span class="string">"^3.0.1"</span>,</span><br><span class="line">        <span class="attr">"vuex"</span>: <span class="string">"^3.0.1"</span>,</span><br><span class="line">        <span class="attr">"vuex-class"</span>: <span class="string">"^0.3.1"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">        <span class="attr">"@types/chai"</span>: <span class="string">"^4.1.0"</span>,</span><br><span class="line">        <span class="attr">"@types/mocha"</span>: <span class="string">"^2.2.46"</span>,</span><br><span class="line">        <span class="attr">"@vue/cli-plugin-babel"</span>: <span class="string">"^3.0.0-beta.15"</span>,</span><br><span class="line">        <span class="attr">"@vue/cli-plugin-typescript"</span>: <span class="string">"^3.0.0-beta.15"</span>,</span><br><span class="line">        <span class="attr">"@vue/cli-plugin-unit-mocha"</span>: <span class="string">"^3.0.0-beta.15"</span>,</span><br><span class="line">        <span class="attr">"@vue/cli-service"</span>: <span class="string">"^3.0.0-beta.15"</span>,</span><br><span class="line">        <span class="attr">"@vue/test-utils"</span>: <span class="string">"^1.0.0-beta.16"</span>,</span><br><span class="line">        <span class="attr">"chai"</span>: <span class="string">"^4.1.2"</span>,</span><br><span class="line">        <span class="attr">"less"</span>: <span class="string">"^3.0.4"</span>,</span><br><span class="line">        <span class="attr">"less-loader"</span>: <span class="string">"^4.1.0"</span>,</span><br><span class="line">        <span class="attr">"vue-template-compiler"</span>: <span class="string">"^2.5.16"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"browserslist"</span>: [</span><br><span class="line">        <span class="string">"&gt; 1%"</span>,</span><br><span class="line">        <span class="string">"last 2 versions"</span>,</span><br><span class="line">        <span class="string">"not ie &lt;= 8"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>VSCode调试断点，安装Debugger插件，这里用的是 <code>Debugger for FireFox</code>，配置：</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// launch.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"Launch localhost"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"firefox"</span>,</span><br><span class="line">            <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">            <span class="attr">"reAttach"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">"url"</span>: <span class="string">"http://localhost:8080/#/"</span>,</span><br><span class="line">            <span class="attr">"webRoot"</span>: <span class="string">"$&#123;workspaceFolder&#125;"</span>,</span><br><span class="line">            <span class="attr">"firefoxExecutable"</span>: <span class="string">"C:/Program Files/Mozilla Firefox/firefox.exe"</span>,</span><br><span class="line">            <span class="attr">"firefoxArgs"</span>: [<span class="string">"-start-debugger-server"</span>, <span class="string">"-no-remote"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务还是要先命令行运行<code>yarn serve</code>的</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://cli.vuejs.org/" target="_blank" rel="noopener">vue-cli官网</a>：有介绍及教程等（瞎折腾好久才发现）</p><p><a href="https://github.com/vuejs/vue-cli" target="_blank" rel="noopener">官方仓库vue-cli</a></p><p><a href="https://cnodejs.org/topic/589330c17274550b057a5cbf" target="_blank" rel="noopener">VSCode调试运行在Chrome, Firefox与Edge内的JS程序</a></p><h3 id="记"><a href="#记" class="headerlink" title="记"></a>记</h3><p>一开始不知道有<code>vue-cli 3.0</code>，用的2.9.6，各种包一个个装，ts也要自己配置，搞了一两天，终于能跑了，但是VSCode就是提示找不到模块，想想应该是包装的太乱太杂了。3.0中间不需要按2.x一样装配ts、jsx等等，省的自己装的乱七八糟的，终于能安心看vue和ts了。</p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【MSMQ】微软消息队列使用记录</title>
      <link href="2018/05/15/DotNet/%E3%80%90MSMQ%E3%80%91%E5%BE%AE%E8%BD%AF%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>2018/05/15/DotNet/%E3%80%90MSMQ%E3%80%91%E5%BE%AE%E8%BD%AF%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>MSMQ（Microsoft Message Queue），消息队列是用于消息传输的中间存储容器，主要可以用于 <strong>异步处理、应用解耦、流量削峰、日志处理及消息通讯等等</strong></p><h3 id="使用记录"><a href="#使用记录" class="headerlink" title="使用记录"></a>使用记录</h3><ol><li><p><code>Peek</code> 、 <code>Recieve</code></p><p> 两者都是获取队列消息的方法，区别的是，<code>Peek</code> 获取后不删除队列内消息，<code>Recieve</code> 则是获取后删除对应消息</p></li><li><p>异步接收消息</p><p> 异步接收消息需要先提供异步事件处理方法，然后初始化一个异步接收操作，直到接收到消息，或超时。</p> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 异步接收消息</span></span><br><span class="line">queue.PeekCompleted += <span class="keyword">new</span> PeekCompletedEventHandler(method);</span><br><span class="line">queue.BeginPeek();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步接收并删除队列内对应消息</span></span><br><span class="line">queue.ReceiveCompleted += <span class="keyword">new</span> ReceiveCompletedEventHandler(method);</span><br><span class="line">queue.BeginReceive();</span><br><span class="line">queue.BeginReceive(TimeSpan.FromMilliseconds(<span class="number">100</span>));</span><br></pre></td></tr></table></figure></li><li><p>简单封装类，如需要更多方法，根据情况自行封装或者选择不封装</p> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Messaging;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Utils</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MessageQueueHelper</span> : <span class="title">IDisposable</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">protected</span> MessageQueueTransactionType transactionType = MessageQueueTransactionType.Automatic;</span><br><span class="line">        <span class="keyword">protected</span> MessageQueue queue; <span class="comment">// 消息队列</span></span><br><span class="line">        <span class="keyword">protected</span> TimeSpan timeout; <span class="comment">// 接收监听超时时间</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MessageQueueHelper</span>(<span class="params"><span class="keyword">string</span> queuePath, <span class="keyword">int</span> timeoutSeconds</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            Createqueue(queuePath);</span><br><span class="line">            queue = <span class="keyword">new</span> MessageQueue(queuePath);</span><br><span class="line">            timeout = TimeSpan.FromSeconds(Convert.ToDouble(timeoutSeconds));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//设置当应用程序向消息对列发送消息时默认情况下使用的消息属性值</span></span><br><span class="line">            <span class="comment">//queue.DefaultPropertiesToSend.AttachSenderId = false;</span></span><br><span class="line">            <span class="comment">//queue.DefaultPropertiesToSend.UseAuthentication = false;</span></span><br><span class="line">            <span class="comment">//queue.DefaultPropertiesToSend.UseEncryption = false;</span></span><br><span class="line">            <span class="comment">//queue.DefaultPropertiesToSend.AcknowledgeType = AcknowledgeTypes.None;</span></span><br><span class="line">            <span class="comment">//queue.DefaultPropertiesToSend.UseJournalQueue = false;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 消息接收</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">object</span> <span class="title">Receive</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">using</span> (Message message = queue.Receive(timeout, transactionType))</span><br><span class="line">                    <span class="keyword">return</span> message;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (MessageQueueException e)</span><br><span class="line">            &#123;</span><br><span class="line">                LogHelper.ErrorLog(<span class="keyword">typeof</span>(MessageQueueHelper), e, <span class="string">"队列接收消息异常！"</span>);</span><br><span class="line">                <span class="keyword">if</span> (e.MessageQueueErrorCode == MessageQueueErrorCode.IOTimeout)</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> TimeoutException();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">throw</span> e;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 消息发送</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Send</span>(<span class="params"><span class="keyword">object</span> msg</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            queue.Send(msg, transactionType);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 创建使用指定路径的新消息队列</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="queuePath"&gt;</span>队列存储路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Createqueue</span>(<span class="params"><span class="keyword">string</span> queuePath</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!MessageQueue.Exists(queuePath))</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageQueue.Create(queuePath, <span class="literal">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (MessageQueueException e)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> e;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> 实现 IDisposable 接口成员</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            queue.Dispose();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 进一步实现特定队列</p> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Messaging;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> Utils; <span class="comment">// Helper的命名空间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">API.App_Start</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ReceiveProcessQueue</span> : <span class="title">MessageQueueHelper</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取配置文件中有关消息队列路径的参数</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="keyword">string</span> queuePath = <span class="string">@".\private$\rpmsmq"</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> queueTimeout = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ReceiveProcessQueue</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">            : <span class="title">base</span>(<span class="params">queuePath, queueTimeout</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">// 设置消息的序列化方式</span></span><br><span class="line">            queue.Formatter = <span class="keyword">new</span> XmlMessageFormatter(<span class="keyword">new</span> Type[] &#123; <span class="keyword">typeof</span>(<span class="keyword">string</span>) &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 接收消息</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReceiveData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">// 指定消息队列事务的类型，Automatic枚举值允许发送发部事务和从外部事务接收</span></span><br><span class="line">            transactionType = MessageQueueTransactionType.Automatic;</span><br><span class="line">            Message msg = (Message)<span class="keyword">base</span>.Receive();</span><br><span class="line">            Process(msg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 接收消息指定超时时间</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="timeout"&gt;</span>超时时间<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReceiveData</span>(<span class="params"><span class="keyword">int</span> timeout</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">base</span>.timeout = TimeSpan.FromSeconds(Convert.ToDouble(timeout));</span><br><span class="line">            ReceiveData();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 异步消息接收</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="method"&gt;</span>异步处理方法<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReceiveByAsync</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            queue.ReceiveCompleted += <span class="keyword">new</span> ReceiveCompletedEventHandler(ReceiveCompleted);</span><br><span class="line">            <span class="comment">// 指定初始化异步并行处理数量</span></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">if</span> !DEBUG</span></span><br><span class="line">            <span class="keyword">int</span> MAX_THREAD = <span class="number">16</span>;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">            <span class="keyword">int</span> MAX_THREAD = <span class="number">3</span>;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAX_THREAD; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                queue.BeginReceive();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 异步处理方法</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="source"&gt;</span>队列<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="asyncResult"&gt;</span>异步结果<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReceiveCompleted</span>(<span class="params">Object source, ReceiveCompletedEventArgs asyncResult</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            MessageQueue queue = (MessageQueue)source;</span><br><span class="line">            queue.Formatter = <span class="keyword">new</span> XmlMessageFormatter(<span class="keyword">new</span> Type[] &#123; <span class="keyword">typeof</span>(<span class="keyword">string</span>) &#125;);</span><br><span class="line">            <span class="comment">// 完成指定的异步接收操作</span></span><br><span class="line">            Message msg = queue.EndReceive(asyncResult.AsyncResult);</span><br><span class="line">            Process(msg);</span><br><span class="line">            <span class="comment">// 消息处理完成后，初始化新的异步接收操作</span></span><br><span class="line">            queue.BeginReceive();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 发送消息</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="msg"&gt;</span>消息<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SendData</span>(<span class="params"><span class="keyword">string</span> msg</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">// 指定消息队列事务的类型，Single枚举值用于单个内部事务的事务类型</span></span><br><span class="line">            <span class="keyword">base</span>.transactionType = MessageQueueTransactionType.Single;</span><br><span class="line">            <span class="keyword">base</span>.Send(msg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Process</span>(<span class="params">Message msg</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">string</span> msgStr = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (ReferenceEquals(msg.Body, <span class="literal">null</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">"null"</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                msgStr = (<span class="keyword">string</span>)msg.Body;</span><br><span class="line">                Console.WriteLine(msgStr);</span><br><span class="line">                Thread.Sleep(<span class="number">100</span>);  <span class="comment">// 睡眠随机时间可以看到多线程异步效果</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> ex;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>经过单元测试，测试正常，后面就要根据业务来做调整了，考虑如何提升并行处理的效率，且不会爆栈。</p><p>解决方案有：</p><ol><li><p>异步 + 多线程（现在的）</p></li><li><p>轮询动态增减消费者（使用定时任务，定时检查队列消息数量，动态增减消费者）</p></li></ol><p>需要主要对系统开销，以及应对峰值等场景的效果，进行权衡</p><p>之前写过 <code>RabbitMQ</code> 的demo，现在发现不实际使用真的是很多问题都不知道。</p>]]></content>
      
      
      <categories>
          
          <category> DotNet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSharp </tag>
            
            <tag> DotNet </tag>
            
            <tag> middleware </tag>
            
            <tag> Message Queue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【SQL】GROUP BY分组统计</title>
      <link href="2018/05/04/SQL/%E3%80%90SQL%E3%80%91GROUP-BY%E5%88%86%E7%BB%84%E7%BB%9F%E8%AE%A1/"/>
      <url>2018/05/04/SQL/%E3%80%90SQL%E3%80%91GROUP-BY%E5%88%86%E7%BB%84%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>有一张学生表，包含学生、班级、性别（男、女）等信息，要求查询出全是男生或全是女生的班级<br><a id="more"></a></p><h3 id="分组统计"><a href="#分组统计" class="headerlink" title="分组统计"></a>分组统计</h3><p>一般要查询的字段不是表格的主要信息的时候，需要按照需要的字段分组。如在学生表查班级信息。</p><p>当需要根据分组后的数据统计筛选时，需要使用 <code>HAVING</code> 来进行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ClassID</span><br><span class="line"><span class="keyword">FROM</span> Students</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> ClassID</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span> Gender) = <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="记"><a href="#记" class="headerlink" title="记"></a>记</h3><p>好久没写过什么复杂查询了，看到这个问题，一时还没想对，如果使用 <code>GROUP BY ClassID, Gender</code> 进行分组的话，会最终以 <strong>班级 * 性别</strong> 的分组返回</p><table><thead><tr><th>ClassID</th><th>Gender</th><th>COUNT(Gender)</th></tr></thead><tbody><tr><td>class01</td><td>男</td><td>12</td></tr><tr><td>class01</td><td>女</td><td>20</td></tr><tr><td>……</td></tr></tbody></table><p>这样就无法对性别进行筛选了，所以分组时要注意分组统计的条件，是否应该加入分组</p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【SQL Server】发布订阅配置失败处理方法</title>
      <link href="2018/03/20/SQL/%E3%80%90SQL-Server%E3%80%91%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E9%85%8D%E7%BD%AE%E5%A4%B1%E8%B4%A5%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
      <url>2018/03/20/SQL/%E3%80%90SQL-Server%E3%80%91%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E9%85%8D%E7%BD%AE%E5%A4%B1%E8%B4%A5%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>因为业务需求，需要“实时”的同步基础平台的一些信息，公司使用的又是 <code>SQL Server</code> ，简单稳定起见，选择使用 <strong>发布订阅</strong> 功能来实现数据的同步。<br><a id="more"></a></p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>OS：Windows Server 2008 R2</p><p>DB：SQL Server 2008 R2</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/DBArtist/p/5803271.html" target="_blank" rel="noopener">Sql Server 2008R2 数据库发布与订阅——DBArtist，博客园</a></p><h3 id="配置失败处理"><a href="#配置失败处理" class="headerlink" title="配置失败处理"></a>配置失败处理</h3><ul><li><p>发布服务器，删除本地发布失败：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp_removedbreplication 'DBName'  <span class="comment">-- 强制删除被发布数据库的所有发布</span></span><br></pre></td></tr></table></figure></li><li><p><code>订阅服务器连接根目录</code> -&gt; <code>复制</code> -&gt; <code>本地订阅</code> 内没有新建的订阅的情况下，删除多余的订阅服务器：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sp_helpserver <span class="comment">-- 查看服务器</span></span><br><span class="line">sp_dropserver '[name]', 'droplogins' <span class="comment">-- 删除服务器</span></span><br></pre></td></tr></table></figure></li><li><p><code>SQL Server代理</code> 重启，这个估计改名字的时候就要重启，不然会有报错</p></li></ul><h3 id="主要流程"><a href="#主要流程" class="headerlink" title="主要流程"></a>主要流程</h3><ol><li><p>确认数据库的服务名和服务器的机器名一致</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 检查SQL Server 的服务器名称</span></span><br><span class="line"><span class="keyword">use</span> <span class="keyword">master</span></span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"><span class="keyword">select</span> @@servername</span><br><span class="line"><span class="keyword">select</span> serverproperty(<span class="string">'servername'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除所有之前配置的publishers</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> msdb.dbo.MSdistpublishers</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> msdb.dbo.MSdistpublishers</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> msdb.dbo.MSdistpublishers</span><br><span class="line">exec sp_droplinkedsrvlogin <span class="string">'old_server_name'</span>,<span class="literal">null</span></span><br><span class="line">exec sp_dropserver <span class="string">'old_server_name'</span>, <span class="string">'droplogins'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 配置计算机名与服务名一致</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">master</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">if</span> serverproperty(<span class="string">'servername'</span>) &lt;&gt; @@servername  </span><br><span class="line"><span class="keyword">begin</span>  </span><br><span class="line">    <span class="keyword">declare</span> @<span class="keyword">server</span> sysname  </span><br><span class="line">    <span class="keyword">set</span>   @<span class="keyword">server</span> = @@servername  </span><br><span class="line">    exec sp_dropserver @<span class="keyword">server</span> = @<span class="keyword">server</span>  </span><br><span class="line">    <span class="keyword">set</span>   @<span class="keyword">server</span> = <span class="keyword">cast</span>(serverproperty(<span class="string">'servername'</span>) <span class="keyword">as</span> sysname)  </span><br><span class="line">    exec sp_addserver @<span class="keyword">server</span> = @<span class="keyword">server</span> , @<span class="keyword">local</span> = <span class="string">'LOCAL'</span>  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p> <strong>重启SQL Server服务、SQL Server代理服务</strong></p><p> 然后 <code>sp_helpserver</code> 可以查看到当前的服务器名称，没有配置过应该只有 <code>dbv32</code> 和一个当前机器名一样的服务器，</p></li><li><p>配置别名</p><p> 打开发布服务器和订阅服务器的 <code>SQL Server 配置管理器</code> 在 <strong>[SQL Native Client 10.0配置(32位)]</strong> 和 <strong>[SQL Native Client 10.0配置]</strong> 中配置别名</p><blockquote><p>别名：[第一步确认的机器名]</p><p>端口号：1433</p><p>服务器：对应的服务器机器的IP地址</p><p>协议：TCP/IP</p></blockquote><p> <strong>发布服务器需要配置自己和所有订阅服务器的别名，订阅服务器需要配置自己和发布服务器的别名</strong></p></li><li><p>发布服务器建立发布</p><ul><li><code>发布服务器连接根目录</code> -&gt; <code>复制</code> -&gt; <code>本地发布</code></li><li>右键 <code>新建发布</code>，然后根据提示选择性Next</li><li>不行了看一下配置一下 <code>安全设置</code> ，上面选第二个 <code>在SQL Server 代理账户下运行</code>，然后下面选第二个配置 <code>SQL Server 登录名</code></li><li>然后Next到完成，没报错就搞定了</li></ul></li><li><p>订阅服务器建立订阅</p><ul><li><code>订阅服务器连接根目录</code> -&gt; <code>复制</code> -&gt; <code>本地订阅</code></li><li>右键 <code>新建订阅</code>，发布服务器选择：查找，添加你的发布服务器，用之前配的别名</li><li>需要实时同步的话，分发代理位置选第一个，在发布服务器上运行分发服务，发布服务器主动推送。根据需要也可以选第二个</li><li>订阅服务器和数据库，数据库可以点下拉然后拉到最上面自己新建</li><li>分发服务器安全连接，配置之前 <code>发布服务器</code> 的 <code>安全设置</code></li><li>然后根据提示选择性Next到完成，没报错就搞定了所有配置</li></ul></li><li><p>右键发布服务器的发布， <code>启动复制监视器</code> ，查看状态，没报错，然后快照完成，在订阅看到数据就可以了</p></li></ol><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>一开始配置不知道哪里出问题了，快照不生成，快照代理启动就挂掉，订阅服务器的数据库也没看到数据，发布也不给删，报错发布下面还有订阅</p><p>就找了半天删除的方法，后来发布订阅的服务器删干净， <code>SQL Server代理</code> 重启，重新配置了一遍就好了，也是心累╮(╯_╰)╭</p><p>现在想想估计是代理服务没有重启导致的。总之，以后配置的话，记着顺手把这个也重启了吧。</p>]]></content>
      
      
      <categories>
          
          <category> SQL-Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL-Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2018-3-14</title>
      <link href="2018/03/14/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942018-3-14/"/>
      <url>2018/03/14/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942018-3-14/</url>
      
        <content type="html"><![CDATA[<p>过年回来有段时间没记点什么了，工作虽然没之前那么忙，还是没想清楚到底去积累点什么好吧，主要可能也是懒←_←</p><p>看了两个星期的 <strong>《数据挖掘概念与技术》</strong> 和 <strong>《机器学习实战》</strong> （ <code>PRML</code> 实在是…太数学了… ，也理解了一下数据仓库、数据立方体、上卷、下钻等等…一些名词，明白了kNN、SMO、SVM等等算法的全称…（kNN、决策树还是看懂了的，就是后面朴素贝叶斯开始就慢慢有点模糊了…什么支持向量机啊就来回看了好几遍，查了不少东西才理解了些 =_= ，哎，觉得实在无法在脑海里跟实际问题映射上关系，也就难以应用了。于是，就没继续看了，虽然看一半放弃了，但是也算大致了解了 数据挖掘 相关的一系列东西吧，不亏！（强行</p><p>为了休息下我可怜的脑袋，上星期弄了下 <code>Unity3D</code> 玩，emmm，感觉没有找到适合我节奏的学习资料啊，官方文档太细太慢，各种博客又太粗略，待我闲时再把官方的几个工程改改修修，估计就能自己做个自己想的小游戏玩了(<em>^▽^</em>)</p><p>这两天算是没什么闲时了，今天趁刚有空回忆一下，免得回头感觉前面几个星期就白过了一样╮(╯_╰)╭</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【SQL】循环游标遍历</title>
      <link href="2018/02/01/SQL/%E3%80%90SQL%E3%80%91%E5%BE%AA%E7%8E%AF%E6%B8%B8%E6%A0%87%E9%81%8D%E5%8E%86/"/>
      <url>2018/02/01/SQL/%E3%80%90SQL%E3%80%91%E5%BE%AA%E7%8E%AF%E6%B8%B8%E6%A0%87%E9%81%8D%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><p>用循环（ <code>WHILE</code> ）游标（ <code>CURSOR</code> ）实现，遍历系统视图，取出（ <code>FETCH</code> ）每条数据并计数+1（这里只是用来记下怎么用，查数量肯定还是用 <code>COUNT()</code> 。<a id="more"></a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> P_CHECK_DB_NUM</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> @<span class="keyword">num</span> <span class="built_in">INT</span>, @<span class="keyword">error</span> <span class="built_in">INT</span></span><br><span class="line">    <span class="keyword">DECLARE</span> @temp <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">    <span class="keyword">SET</span> @<span class="keyword">num</span> = <span class="number">1</span></span><br><span class="line">    <span class="keyword">SET</span> @<span class="keyword">error</span> = <span class="number">0</span></span><br><span class="line">    <span class="comment">--申明游标为db_cursor</span></span><br><span class="line">    <span class="keyword">DECLARE</span> db_cursor <span class="keyword">CURSOR</span></span><br><span class="line"><span class="keyword">FOR</span> (<span class="keyword">SELECT</span> [<span class="keyword">name</span>] <span class="keyword">FROM</span> [<span class="keyword">master</span>].[<span class="keyword">sys</span>].[<span class="keyword">databases</span>])</span><br><span class="line">    <span class="comment">--打开游标--</span></span><br><span class="line">    <span class="keyword">OPEN</span> db_cursor</span><br><span class="line">    <span class="comment">--开始循环游标变量--</span></span><br><span class="line">    <span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> db_cursor <span class="keyword">INTO</span> @temp</span><br><span class="line">    <span class="keyword">WHILE</span> @@FETCH_STATUS = <span class="number">0</span>    <span class="comment">--返回被 FETCH语句执行的最后游标的状态--</span></span><br><span class="line">        <span class="keyword">BEGIN</span>            </span><br><span class="line">            <span class="keyword">SET</span> @<span class="keyword">num</span> = @<span class="keyword">num</span> + <span class="number">1</span></span><br><span class="line">            <span class="keyword">SET</span> @<span class="keyword">error</span> = @<span class="keyword">error</span> + @@<span class="keyword">ERROR</span>   <span class="comment">--记录每次运行sql后是否正确，0正确</span></span><br><span class="line">            <span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> db_cursor <span class="keyword">INTO</span> @temp   <span class="comment">--转到下一个游标，没有会死循环</span></span><br><span class="line">        <span class="keyword">END</span>   </span><br><span class="line">    <span class="keyword">CLOSE</span> db_cursor  <span class="comment">--关闭游标</span></span><br><span class="line">    <span class="keyword">DEALLOCATE</span> db_cursor   <span class="comment">--释放游标</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RETURN</span> @<span class="keyword">num</span>;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h3><p>自从当初学完以后就好像没再用过了，今天偶然想起来，记录一下用法。</p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> SQL Server </tag>
            
            <tag> T-SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Js】使用小记</title>
      <link href="2018/02/01/Front/%E3%80%90Js%E3%80%91%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%AE%B0/"/>
      <url>2018/02/01/Front/%E3%80%90Js%E3%80%91%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>记一下<code>Js</code>的一些知识点<br><a id="more"></a></p><h3 id="和-的区别"><a href="#和-的区别" class="headerlink" title="==和===的区别"></a><code>==</code>和<code>===</code>的区别</h3><p><code>==</code>是值相等比较（会做类型转换后比较），<code>===</code>是严格相等比较（还要比较类型）</p><ol><li>对于 <code>string</code> ，<code>number</code> 等基础类型， <code>==</code> 和 <code>===</code> 是有区别的<ol><li>不同类型间比较，<code>==</code>之比较“转化成同一类型后的值”看“值”是否相等，<code>===</code> 如果类型不同，其结果就是不等</li><li>同类型比较，直接进行“值”比较，两者结果一样</li></ol></li><li>对于 <code>Array</code> ， <code>Object</code> 等高级类型， <code>==</code> 和 <code>===</code> 是没有区别的进行“指针地址”比较</li><li>基础类型与高级类型， <code>==</code> 和 <code>===</code> 是有区别的<ol><li>对于 <code>==</code> ，将高级转化为基础类型，进行“值”比较</li><li>因为类型不同， <code>===</code> 结果为 <code>false</code></li></ol></li></ol><p>我的一篇随笔里有记过一个例子，这里再放一下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> == <span class="string">''</span> -&gt; <span class="literal">true</span></span><br><span class="line"><span class="number">0</span> === <span class="string">''</span> -&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h3 id="没有块级作用域"><a href="#没有块级作用域" class="headerlink" title="没有块级作用域"></a>没有块级作用域</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = <span class="string">''</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (data != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> tips = <span class="string">'data not null'</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(tips);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> tips = <span class="string">'data is null'</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(tips);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">test(data);</span><br></pre></td></tr></table></figure><p>上面的代码浏览器可以运行的，但是Js语法检查的话会报错吧，<code>tips</code> 变量在 <code>test()</code> 内被定义在两个代码块内，但是js没有块级作用域，函数作为Js内的最小作用域，所以 <code>tips</code> 变量这里重复定义了。</p><p>记：Js中没有用 <code>var</code> 声明的变量都是全局变量，而且是顶层对象的属性</p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【SQL】SQL-Server递归查询</title>
      <link href="2018/01/30/SQL/%E3%80%90SQL%E3%80%91SQL-Server%E9%80%92%E5%BD%92%E6%9F%A5%E8%AF%A2/"/>
      <url>2018/01/30/SQL/%E3%80%90SQL%E3%80%91SQL-Server%E9%80%92%E5%BD%92%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>有一张国内区域表，要查询一个区域及其子区域的区域编码<br><a id="more"></a></p><p>效果：<br><img src="/assets/images/sql_recursive_query_region/sql_recursive_query_region.png" alt="区域表查询效果"></p><p>表结构：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [dbo].[Region](</span><br><span class="line">[REGION_ID] [<span class="built_in">int</span>] PRIMARY <span class="keyword">KEY</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">[REGION_CODE] [<span class="built_in">varchar</span>](<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">[REGION_NAME] [<span class="built_in">varchar</span>](<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">[PARENT_ID] [<span class="built_in">int</span>] <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">[REGION_LEVEL] [<span class="built_in">int</span>] <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">[REGION_ORDER] [<span class="built_in">int</span>] <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">[REGION_NAME_EN] [<span class="built_in">varchar</span>](<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">[REGION_SHORTNAME_EN] [<span class="built_in">varchar</span>](<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p><code>PARENT_ID</code>为父区域的<code>REGION_ID</code>，这种结构就让我想能不能递归查询，减少连接数据库进行查询请求的次数。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://technet.microsoft.com/zh-cn/library/ms186243(v=sql.105" target="_blank" rel="noopener">使用公用表表达式的递归查询 —— technet，microsoft</a>.aspx)<br><a href="https://www.cnblogs.com/sheng-jie/p/6347835.html" target="_blank" rel="noopener">SQL递归查询知多少 —— 圣杰，博客园</a></p><h3 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h3><p>使用多次查询虽然可以完成，但是效率不够高，并且代码冗余，<code>SQL Server</code>使用公用表表达式（Common Table Expression，CTE）可以实现递归查询<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> [dbo].[P_REGION] @RegionCode <span class="built_in">VARCHAR</span>(<span class="number">50</span>)=<span class="string">''</span> <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WITH</span> CTE_REGION(REGION_ID, REGION_CODE, REGION_NAME, PARENT_ID, REGION_LEVEL, REGION_ORDER, REGION_NAME_EN, REGION_SHORTNAME_EN) <span class="keyword">AS</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">SELECT</span> REGION_ID, REGION_CODE, REGION_NAME, PARENT_ID, REGION_LEVEL, REGION_ORDER, REGION_NAME_EN, REGION_SHORTNAME_EN</span><br><span class="line">  <span class="keyword">FROM</span> [dbo].[Region]</span><br><span class="line"> <span class="keyword">WHERE</span> REGION_LEVEL &lt; <span class="number">3</span> <span class="keyword">AND</span> REGION_CODE = @RegionCode</span><br><span class="line">    <span class="keyword">UNION</span> ALL</span><br><span class="line">    <span class="keyword">SELECT</span> a.REGION_ID, a.REGION_CODE, a.REGION_NAME, a.PARENT_ID, a.REGION_LEVEL, a.REGION_ORDER, a.REGION_NAME_EN, a.REGION_SHORTNAME_EN</span><br><span class="line">  <span class="keyword">FROM</span> [dbo].[Region] a</span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> CTE_REGION b</span><br><span class="line">  <span class="keyword">ON</span> a.PARENT_ID = b.REGION_ID</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> REGION_CODE <span class="keyword">FROM</span> CTE_REGION</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> SQL Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Linq】模糊条件查询</title>
      <link href="2018/01/25/Linq/%E3%80%90Linq%E3%80%91%E6%A8%A1%E7%B3%8A%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/"/>
      <url>2018/01/25/Linq/%E3%80%90Linq%E3%80%91%E6%A8%A1%E7%B3%8A%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h3><p>SQL里字段的模糊匹配可以使用<code>like</code>关键字，使用方式如：<code>like &quot;%search&quot;</code>、<code>like &quot;search%&quot;</code>、<code>like &quot;%search%&quot;</code>，分别对应后缀、前缀、包含三种模糊匹配方式</p><h3 id="Linq对应的模糊查询"><a href="#Linq对应的模糊查询" class="headerlink" title="Linq对应的模糊查询"></a>Linq对应的模糊查询</h3><ol><li><p>前缀匹配搜索</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> l = <span class="keyword">from</span> p <span class="keyword">in</span> Person</span><br><span class="line">        <span class="keyword">where</span> p.name.StartsWith(<span class="string">"jack"</span>)</span><br><span class="line">        <span class="keyword">select</span> p;</span><br></pre></td></tr></table></figure></li><li><p>后缀匹配搜索</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> l = <span class="keyword">from</span> p <span class="keyword">in</span> Person</span><br><span class="line">        <span class="keyword">where</span> p.name.EndsWith(<span class="string">"chen"</span>)</span><br><span class="line">        <span class="keyword">select</span> p;</span><br></pre></td></tr></table></figure></li><li><p>包含匹配搜索</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> l = <span class="keyword">from</span> p <span class="keyword">in</span> Person</span><br><span class="line">        <span class="keyword">where</span> p.name.Contains(<span class="string">"ac"</span>)</span><br><span class="line">        <span class="keyword">select</span> p;</span><br></pre></td></tr></table></figure></li><li><p>条件模糊查询</p></li></ol><p>有时候界面上面，我们在表格前面会有个输入框，提供一些字段的搜索，在不输入的时候，这个搜索条件就不作为限制条件</p><p>而这时传到后端的条件是<code>null</code>，前面三种搜索直接使用的话，会出现结果的错误，<code>null</code>成了限制条件</p><p>所以需要在<code>where</code>里加上对应字段为<code>null</code>的情况，使搜索条件为空时，模糊匹配失效<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> search = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> l = <span class="keyword">from</span> p <span class="keyword">in</span> Person</span><br><span class="line">        <span class="keyword">where</span> p.name.Contains(search) || search == <span class="literal">null</span></span><br><span class="line">        <span class="keyword">select</span> p;</span><br></pre></td></tr></table></figure></p><ol><li>条件中<code>in</code>与<code>not in</code><br>参考：<a href="https://www.cnblogs.com/a-dou/p/5916895.html" target="_blank" rel="noopener">LINQ - 在Where條件式中使用in與not in —— ADOU-V，博客园</a></li></ol><p><code>in</code>的SQL实现：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> ProductID, ProductName, CategoryID <span class="keyword">From</span> dbo.Products  </span><br><span class="line"><span class="keyword">Where</span> CategoryID <span class="keyword">in</span> (<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure></p><p><code>in</code>的Linq实现：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> l = <span class="keyword">from</span> p <span class="keyword">in</span> dbctx.Products </span><br><span class="line">        <span class="keyword">where</span> (<span class="keyword">new</span> <span class="keyword">int</span>?[] &#123;<span class="number">1</span>, <span class="number">2</span>&#125;).Contains(p.CategoryID) </span><br><span class="line">        <span class="keyword">select</span> p;</span><br></pre></td></tr></table></figure></p><p><code>not in</code>的SQL实现：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> ProductID, ProductName, CategoryID <span class="keyword">From</span> dbo.Products  </span><br><span class="line"><span class="keyword">Where</span> CategoryID <span class="keyword">not</span> <span class="keyword">in</span> (<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure></p><p><code>not in</code>的Linq实现：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> l = <span class="keyword">from</span> p <span class="keyword">in</span> dbctx.Products </span><br><span class="line">        <span class="keyword">where</span> !(<span class="keyword">new</span> <span class="keyword">int</span>?[] &#123;<span class="number">1</span>, <span class="number">2</span>&#125;).Contains(p.CategoryID) </span><br><span class="line">        <span class="keyword">select</span> p;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Linq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> Linq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Shell/Bat】脚本记录</title>
      <link href="2018/01/21/Shell/%E3%80%90Shell-Bat%E3%80%91%E8%84%9A%E6%9C%AC%E8%AE%B0%E5%BD%95/"/>
      <url>2018/01/21/Shell/%E3%80%90Shell-Bat%E3%80%91%E8%84%9A%E6%9C%AC%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>shell里可以使用<code>#</code>号，bat里可以使用<code>rem</code>、<code>::</code>，还有很多其他注释的方法</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ol><li><p>shell 变量定义与重定义</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">$ var=<span class="string">"变量"</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">变量</span><br><span class="line">$ var=<span class="string">"重定义变量"</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">重定义变量</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入变量</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"是否更新Blog(y/n) :"</span> updateOp</span><br></pre></td></tr></table></figure></li><li><p>bat 变量定义与重定义</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 定义变量</span></span><br><span class="line"><span class="built_in">set</span> var=变量</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line">变量</span><br><span class="line"><span class="built_in">set</span> var=重定义变量</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line">重定义变量</span><br><span class="line"></span><br><span class="line"><span class="comment">REM 输入变量</span></span><br><span class="line"><span class="built_in">set</span> /p updateOp = "是否更新（y/n）："</span><br></pre></td></tr></table></figure></li></ol><h3 id="if…else…"><a href="#if…else…" class="headerlink" title="if…else…"></a>if…else…</h3><ol><li><p>shell的条件语句</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入变量</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"输入var:"</span> var</span><br><span class="line"><span class="comment"># 判断变量是否等于 y （x为了避免比变量为空异常）</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$var</span>"</span>x = <span class="string">"y"</span>x ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"if内"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"else内"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>bat的条件语句</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM /p 从输入赋值变量</span></span><br><span class="line"><span class="built_in">set</span> /p updateOp="是否更新（y/n）："</span><br><span class="line"><span class="comment">REM 判断输入（Y/N），/i 忽略大小写</span></span><br><span class="line"><span class="keyword">if</span> /i "<span class="variable">%updateOp%</span>"=="y" (</span><br><span class="line">git pull origin master</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li></ol><h3 id="端口占用查看"><a href="#端口占用查看" class="headerlink" title="端口占用查看"></a>端口占用查看</h3><ol><li><p>shell的语句</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lsof -i:端口号 用于查看某一端口的占用情况，比如查看8000端口使用情况</span></span><br><span class="line">lsof -i:8000</span><br><span class="line">netstat -tunlp | grep 8000</span><br></pre></td></tr></table></figure></li><li><p>bat的语句</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 查询443相关端口占用（查询结果里有 443 的</span></span><br><span class="line">&gt;netstat -ano | <span class="built_in">findstr</span> <span class="number">443</span></span><br><span class="line">  TCP    <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>:<span class="number">443</span>             <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>:<span class="number">0</span>              LISTENING       <span class="number">1480</span></span><br><span class="line">                            ... ...</span><br><span class="line"></span><br><span class="line"><span class="comment">REM 查询1480进程</span></span><br><span class="line">&gt;tasklist | <span class="built_in">findstr</span> <span class="number">1480</span></span><br><span class="line">httpd.exe                     <span class="number">1480</span> Services                   <span class="number">0</span>      <span class="number">4</span>,<span class="number">652</span> K</span><br></pre></td></tr></table></figure></li></ol><h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><ol><li>注意空格的使用，脚本里空格往往是分隔命令和参数的，不像Java什么的里面可以用很多空格来分隔变量和运算符，让代码看起来更清晰。</li><li>脚本如果写的不对，经常没有异常代码什么的，所以要仔细看输出，自己也多写点echo，好辨别执行情况</li></ol><h3 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h3><ol><li>这里只记录了一些我自己想记的东西哦</li><li>记得当初上Linux的时候，我还自己安装Ubuntu练习使用了一阵子的命令行，这门课成绩也还行，只是考完试以后就没怎么碰过了，后来就自己折腾centos的时候用过一点，然后就是开始用github以后了，最近弄点小脚本来给自己省点事，顺便记录一些</li></ol>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【EntityFramework】分页查询无主键视图数据重复异常</title>
      <link href="2018/01/17/DotNet/%E3%80%90EntityFramework%E3%80%91%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E6%97%A0%E4%B8%BB%E9%94%AE%E8%A7%86%E5%9B%BE%E6%95%B0%E6%8D%AE%E9%87%8D%E5%A4%8D%E5%BC%82%E5%B8%B8/"/>
      <url>2018/01/17/DotNet/%E3%80%90EntityFramework%E3%80%91%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E6%97%A0%E4%B8%BB%E9%94%AE%E8%A7%86%E5%9B%BE%E6%95%B0%E6%8D%AE%E9%87%8D%E5%A4%8D%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在做<a href="https://0kelvins.github.io/post/41b37696.html">统计的查询视图</a>之后，发现EF查询的结果第一条覆盖了第二条，两条数据只有一个时间字段不一样</p><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>EF默认有缓存，视图没有建立主键，EF的缓存机制认为这两条除了时间不同的数据一致，就没有再从数据库取，然后出现<code>SQL Server Profiler</code>里面的SQL正常，但是拿到的数据死活都不对。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>对视图使用<code>.AsNoTracking()</code>，取消EF对这个视图的缓存（然后可以使用<code>Entity Framework Plus</code>调用<code>MemoryCache</code>或<code>Redis</code>来做缓存）<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> l = <span class="keyword">from</span> s <span class="keyword">in</span> statView.AsNoTracking()</span><br><span class="line">        <span class="keyword">select</span> s;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> DotNet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSharp </tag>
            
            <tag> DotNet </tag>
            
            <tag> Entity Framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【SQL】一次查询统计多张表</title>
      <link href="2018/01/11/SQL/%E3%80%90SQL%E3%80%91%E4%B8%80%E6%AC%A1%E6%9F%A5%E8%AF%A2%E7%BB%9F%E8%AE%A1%E5%A4%9A%E5%BC%A0%E8%A1%A8/"/>
      <url>2018/01/11/SQL/%E3%80%90SQL%E3%80%91%E4%B8%80%E6%AC%A1%E6%9F%A5%E8%AF%A2%E7%BB%9F%E8%AE%A1%E5%A4%9A%E5%BC%A0%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><blockquote><p>一次查询统计所有用户每天的事件A（表A）、事件B（表B）和事件C（表C）的数量以及三种事件的总量<br><a id="more"></a></p></blockquote><p>环境：SQL Server</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p><strong>思路：</strong> 三种子查询后联表</p><p><strong>问题：</strong> 没有一个的日期表来作为联表的基准表，以A表为基准表会缺失A表内没有的日期，如何补全</p><p><strong>解决方法：</strong> 没有的就用其他表的补上，需要知道<code>ISNULL()</code>方法或着使用条件判断语句<code>case when 条件1 then 结果1 when 条件2 then 结果2 else 结果N end</code>来判断A表是否没有对应列数据，然后补全B或C表对应列</p><p><strong>实现：</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> temp.[UserID],</span><br><span class="line">   <span class="keyword">CONVERT</span>(<span class="built_in">DATE</span>, temp.[DateTime]) <span class="keyword">AS</span> [DateTime],</span><br><span class="line">   temp.[AEventNumber],</span><br><span class="line">   temp.[BEventNumber],</span><br><span class="line">   temp.[CEventNumber],</span><br><span class="line">   temp.[TotalNumber]</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span>  <span class="keyword">ISNULL</span>(abe.[UserID], ce.[UserID]) <span class="keyword">AS</span> [UserID],</span><br><span class="line"><span class="keyword">ISNULL</span>(abe.[DateTime], ce.[DateTime]) <span class="keyword">AS</span> [DateTime],</span><br><span class="line">abe.[AEventNumber],</span><br><span class="line">abe.[BEventNumber],</span><br><span class="line">ce.[CEventNumber],</span><br><span class="line"><span class="keyword">ISNULL</span>(abe.[AEventNumber], <span class="number">0</span>) + <span class="keyword">ISNULL</span>(abe.[BEventNumber], <span class="number">0</span>) + <span class="keyword">ISNULL</span>(ce.[CEventNumber], <span class="number">0</span>) <span class="keyword">as</span> TotalNumber</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="keyword">ISNULL</span>(ae.[UserID], re.[UserID]) <span class="keyword">AS</span> [UserID],</span><br><span class="line"><span class="keyword">ISNULL</span>(ae.[DateTime], re.[DateTime]) <span class="keyword">AS</span> [DateTime],</span><br><span class="line"><span class="keyword">ISNULL</span>([AEventNumber], <span class="number">0</span>) <span class="keyword">AS</span> [AEventNumber],</span><br><span class="line"><span class="keyword">ISNULL</span>([BEventNumber], <span class="number">0</span>) <span class="keyword">AS</span> [BEventNumber],</span><br><span class="line"><span class="keyword">ISNULL</span>([AEventNumber], <span class="number">0</span>) + <span class="keyword">ISNULL</span>([BEventNumber], <span class="number">0</span>) <span class="keyword">as</span> TotalNumber</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(<span class="keyword">SELECT</span> a.[UserID],</span><br><span class="line">a.[DateTime],</span><br><span class="line">a.[<span class="built_in">Number</span>] <span class="keyword">AS</span> [AEventNumber]</span><br><span class="line"><span class="keyword">FROM</span> AEvent <span class="keyword">AS</span> a) <span class="keyword">AS</span> ae</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">JOIN</span></span><br><span class="line">(<span class="keyword">SELECT</span> b.[UserID],</span><br><span class="line">b.[DateTime],</span><br><span class="line">b.[<span class="built_in">Number</span>] <span class="keyword">AS</span> [BEventNumber]</span><br><span class="line"><span class="keyword">FROM</span> BEvent <span class="keyword">AS</span> b) <span class="keyword">AS</span> re</span><br><span class="line"><span class="keyword">ON</span> ae.[UserID] = re.[UserID] <span class="keyword">and</span> ae.[DateTime] = re.[DateTime]) <span class="keyword">AS</span> abe</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">JOIN</span></span><br><span class="line">(<span class="keyword">SELECT</span> c.[UserID],</span><br><span class="line">c.[DateTime],</span><br><span class="line">    c.[<span class="built_in">Number</span>] <span class="keyword">AS</span> [CEventNumber]</span><br><span class="line"><span class="keyword">FROM</span> CEvent <span class="keyword">AS</span> c) <span class="keyword">AS</span> te</span><br><span class="line"><span class="keyword">ON</span> abe.[UserID] = ce.[UserID] <span class="keyword">and</span> abe.[DateTime] = ce.[DateTime]</span><br><span class="line">) <span class="keyword">AS</span> temp</span><br></pre></td></tr></table></figure></p><p>当A表没有B内的用户编号或者统计时间时，使用B的代替，两张表先联接查询然后在和第三张表联接，否则A没有数据时，B的信息不能与C比较，导致B、C没有联接到一条内</p><h3 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h3><ol><li><code>ISNULL()</code>可以判断字段是否为空，并使用后面的值补全</li><li>按天统计可以将转化为天的时间字段用于<code>GROUP BY</code>，可以使用<code>CONVERT(date, [dt])</code>转换，每天可以用<code>date</code>类型；<code>SQL Server</code>也可以使用<code>GROUP BY year([dt]), month([dt]), day([dt])</code>作为分组条件，实现按每天分组，可推出按年、按月分组；其他需求分组可以考虑使用字符串截取作为分组条件</li></ol>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2018-1-10</title>
      <link href="2018/01/10/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942018-1-10/"/>
      <url>2018/01/10/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942018-1-10/</url>
      
        <content type="html"><![CDATA[<p>最近两天接触了下<code>Entity Framework Plus</code>的缓存和<code>Future</code>（就是懒执行批量SQL的感觉）、SQL多表统计汇总、SQL Server查系统存储、用Axure设计网页等等，复习了创建视图、存储过程什么的，<code>RESTClient</code>发<code>Post</code>请求的时候记着加<code>Header</code>。</p><p>东西有点多，后面事情也多（年终么(╯‵□′)╯︵┻━┻），抽空记录一下重要的吧。</p><p>有点累，熬过去应该就会好了吧。嗯。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2017-12-26</title>
      <link href="2017/12/26/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-12-26/"/>
      <url>2017/12/26/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-12-26/</url>
      
        <content type="html"><![CDATA[<blockquote><p>工作了没有了期末，但是多了个年终。</p></blockquote><p>12月末。前些天忙得不行，就忽然来了一堆乱七八糟的事情，不过好在都还算顺利解决了。这两天比较清闲了，可以稍微休息休息，要好好思考一下，毕竟这样的时间现在已经很难得了。</p><p>这两天工作在把之前的代码重构，虽说重构，也只是把结构整理了一遍，毕竟各种原因也是想弄也不能弄。不过，能同意我不少观点已经感到很欣慰了，与人相处，需要耐心，事情慢慢来就好了。</p><blockquote><p>2017的小结吧</p></blockquote><p>毕业这就算半年了，这段时间要说学到点什么，好像也没什么特别的。不过很多以前未曾想过的开发的相关问题，都仔细的去思考参与了，也算是收获吧。虽然没能接触到分布式、Hadoop什么的，但是自己学习了解的很多知识，也越发觉得现在的大部分技术使用起来其实并不太难，都有很多前人铺路了，难点在与像大数据的很多算法、数据结构等等，越了解技术越觉得这些理论知识显得重要了。</p><blockquote><p>时间很快，但是想要没站稳就跳远，往往会摔得很惨，一步一步继续前进吧，我想目标也不会太过遥远的</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Ninject】WebApi项目使用Ninject</title>
      <link href="2017/12/18/DotNet/%E3%80%90Ninject%E3%80%91WebApi%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8Ninject/"/>
      <url>2017/12/18/DotNet/%E3%80%90Ninject%E3%80%91WebApi%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8Ninject/</url>
      
        <content type="html"><![CDATA[<p>WebApi项目的依赖注入需要使用<code>System.Web.Http.Dependencies</code>里的<code>IDependencyResolver</code>来实现，和Mvc的<code>IDependencyResolver</code>是不一样的，所以需要实现的<code>Resolver</code>不一样。虽然了解了大概怎么写，但是始终没能让自己重写的<code>Resolver</code>启动，并且看别人写好的还解决了其他的一些注入问题。于是，决定还是用<code>Ninject</code>下面fork的<a href="https://github.com/ninject/Ninject.Web.WebApi" target="_blank" rel="noopener">remogloor/Ninject.Web.WebApi</a>，免得浪费时间折腾轮子了。</p><p><a href="http://www.cnblogs.com/Locked-J/p/7722864.html" target="_blank" rel="noopener">Mvc的配置</a></p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p><code>WebApi2</code>、<code>.Net Framework 4.5</code>、<code>VS2015</code></p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ol><li>添加引用，使用NuGet安装以下两个包</li></ol><ul><li>Ninject</li><li>Ninject.Web.WebApi</li></ul><p>查看引用会发现附赠了 <code>Ninject.Web.Common</code>、<code>Ninject.Web.Common.WebHost</code>、<code>Ninject.Web.WebApi.WebHost</code> 三个包。</p><ol><li>然后修改在App_Start下<code>NinjectWebCommon</code>的<code>RegisterServices()</code>，在里面后面加上自己的注入bind，如：<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RegisterServices</span>(<span class="params">IKernel kernel</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    kernel.Load(Assembly.GetExecutingAssembly());</span><br><span class="line">    kernel.Bind&lt;IUserRepository&gt;().To&lt;UserRepository&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>以上。使用起来很简单。就是封了一层，有些东西需要自己看源码理解了。</p>]]></content>
      
      
      <categories>
          
          <category> DotNet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DotNet </tag>
            
            <tag> Ninject </tag>
            
            <tag> WebApi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【log4net】代码配置记录</title>
      <link href="2017/12/18/DotNet/%E3%80%90log4net%E3%80%91%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"/>
      <url>2017/12/18/DotNet/%E3%80%90log4net%E3%80%91%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>为了通过代码动态设置<code>log4net</code>的配置，于是检索了相关的资料，踩了一些手贱的坑╮(╯_╰)╭<br><a id="more"></a></p></blockquote><h3 id="配置代码"><a href="#配置代码" class="headerlink" title="配置代码"></a>配置代码</h3><ul><li><p>log4net配置类</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> log4net;</span><br><span class="line"><span class="keyword">using</span> log4net.Appender;</span><br><span class="line"><span class="keyword">using</span> log4net.Config;</span><br><span class="line"><span class="keyword">using</span> log4net.Core;</span><br><span class="line"><span class="keyword">using</span> log4net.Layout;</span><br><span class="line"><span class="keyword">using</span> log4net.Repository.Hierarchy;</span><br><span class="line"><span class="keyword">using</span> System.Configuration;</span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Utils.LogUtils</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LogConfig</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">string</span> LOG_PATTERN = <span class="string">"[%date] %level [%thread][%c&#123;1&#125;:%line] - %m%n"</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">string</span> DATE_PATTERN = <span class="string">"yyyy-MM-dd'.log'"</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">string</span> LOG_FILE_PATH = <span class="string">"Log/"</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">string</span> connectionType = <span class="string">"System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">string</span> commandText = <span class="string">@"INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 本地日志设置</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">LocalConfig</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            Hierarchy hierarchy = (Hierarchy)LogManager.GetRepository();</span><br><span class="line"></span><br><span class="line">            PatternLayout patternLayout = <span class="keyword">new</span> PatternLayout();</span><br><span class="line">            patternLayout.ConversionPattern = LOG_PATTERN;</span><br><span class="line">            patternLayout.ActivateOptions();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 控制台输出的日志</span></span><br><span class="line">            TraceAppender tracer = <span class="keyword">new</span> TraceAppender();</span><br><span class="line">            tracer.Layout = patternLayout;</span><br><span class="line">            tracer.ActivateOptions();</span><br><span class="line">            hierarchy.Root.AddAppender(tracer);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 滚动文件日志</span></span><br><span class="line">            RollingFileAppender roller = <span class="keyword">new</span> RollingFileAppender();</span><br><span class="line">            roller.Layout = patternLayout;</span><br><span class="line">            roller.AppendToFile = <span class="literal">true</span>;</span><br><span class="line">            roller.RollingStyle = RollingFileAppender.RollingMode.Date;</span><br><span class="line">            roller.MaxSizeRollBackups = <span class="number">4</span>;</span><br><span class="line">            roller.MaximumFileSize = <span class="string">"1MB"</span>;</span><br><span class="line">            roller.StaticLogFileName = <span class="literal">false</span>;</span><br><span class="line">            roller.File = LOG_FILE_PATH;</span><br><span class="line">            roller.DatePattern = DATE_PATTERN;</span><br><span class="line">            roller.Encoding = Encoding.UTF8;</span><br><span class="line">            roller.ActivateOptions();</span><br><span class="line">            hierarchy.Root.AddAppender(roller);</span><br><span class="line">            </span><br><span class="line">            hierarchy.Root.Level = log4net.Core.Level.All;</span><br><span class="line">            hierarchy.Configured = <span class="literal">true</span>;</span><br><span class="line">            </span><br><span class="line">            BasicConfigurator.Configure(roller);</span><br><span class="line"></span><br><span class="line">            LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType).Info(<span class="string">"本地日志启动"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据库日志设置</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DataBaseConfig</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">// 从web.config的appSetting节点获取配置的数据库连接</span></span><br><span class="line">            <span class="keyword">string</span> connectionString = ConfigurationManager.AppSettings[<span class="string">"DBConnection"</span>].ToString();</span><br><span class="line"></span><br><span class="line">            Hierarchy hierarchy = (Hierarchy)LogManager.GetRepository();</span><br><span class="line"></span><br><span class="line">            PatternLayout patternLayout = <span class="keyword">new</span> PatternLayout();</span><br><span class="line">            patternLayout.ConversionPattern = LOG_PATTERN;</span><br><span class="line">            patternLayout.ActivateOptions();</span><br><span class="line"></span><br><span class="line">            TraceAppender tracer = <span class="keyword">new</span> TraceAppender();</span><br><span class="line">            tracer.Layout = patternLayout;</span><br><span class="line">            tracer.ActivateOptions();</span><br><span class="line">            hierarchy.Root.AddAppender(tracer);</span><br><span class="line">                        </span><br><span class="line">            <span class="comment">// ado.net数据库日志</span></span><br><span class="line">            AdoNetAppender appender = <span class="keyword">new</span> AdoNetAppender();</span><br><span class="line">            appender.Name = <span class="string">"adoNetAppender"</span>;</span><br><span class="line"></span><br><span class="line">            appender.ConnectionType = connectionType;</span><br><span class="line">            appender.ConnectionString = connectionString;</span><br><span class="line">            appender.CommandText = commandText;</span><br><span class="line">            appender.CommandType = System.Data.CommandType.Text;</span><br><span class="line">            appender.BufferSize = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            AdoNetAppenderParameter parameter = <span class="keyword">new</span> AdoNetAppenderParameter();</span><br><span class="line">            parameter.DbType = System.Data.DbType.Date;</span><br><span class="line">            parameter.ParameterName = <span class="string">"@log_date"</span>;</span><br><span class="line">            parameter.Size = <span class="number">255</span>;</span><br><span class="line">            parameter.Layout = <span class="keyword">new</span> RawTimeStampLayout();</span><br><span class="line">            appender.AddParameter(parameter);</span><br><span class="line">            </span><br><span class="line">            parameter = <span class="keyword">new</span> AdoNetAppenderParameter();</span><br><span class="line">            parameter.DbType = System.Data.DbType.String;</span><br><span class="line">            parameter.ParameterName = <span class="string">"@thread"</span>;</span><br><span class="line">            parameter.Size = <span class="number">50</span>;</span><br><span class="line">            patternLayout = <span class="keyword">new</span> PatternLayout(<span class="string">"%thread"</span>);</span><br><span class="line">            parameter.Layout = <span class="keyword">new</span> Layout2RawLayoutAdapter(patternLayout);</span><br><span class="line">            appender.AddParameter(parameter);</span><br><span class="line">            </span><br><span class="line">            parameter = <span class="keyword">new</span> AdoNetAppenderParameter();</span><br><span class="line">            parameter.DbType = System.Data.DbType.String;</span><br><span class="line">            parameter.Size = <span class="number">50</span>;</span><br><span class="line">            parameter.ParameterName = <span class="string">"@log_level"</span>;</span><br><span class="line">            patternLayout = <span class="keyword">new</span> PatternLayout(<span class="string">"%level"</span>);</span><br><span class="line">            parameter.Layout = <span class="keyword">new</span> Layout2RawLayoutAdapter(patternLayout);</span><br><span class="line">            appender.AddParameter(parameter);</span><br><span class="line"></span><br><span class="line">            parameter = <span class="keyword">new</span> AdoNetAppenderParameter();</span><br><span class="line">            parameter.DbType = System.Data.DbType.String;</span><br><span class="line">            parameter.ParameterName = <span class="string">"@logger"</span>;</span><br><span class="line">            parameter.Size = <span class="number">255</span>;</span><br><span class="line">            patternLayout = <span class="keyword">new</span> PatternLayout(<span class="string">"%logger"</span>);</span><br><span class="line">            parameter.Layout = <span class="keyword">new</span> Layout2RawLayoutAdapter(patternLayout);</span><br><span class="line">            appender.AddParameter(parameter);</span><br><span class="line"></span><br><span class="line">            parameter = <span class="keyword">new</span> AdoNetAppenderParameter();</span><br><span class="line">            parameter.DbType = System.Data.DbType.String;</span><br><span class="line">            parameter.ParameterName = <span class="string">"@message"</span>;</span><br><span class="line">            parameter.Size = <span class="number">4000</span>;</span><br><span class="line">            patternLayout = <span class="keyword">new</span> PatternLayout(<span class="string">"%message"</span>);</span><br><span class="line">            parameter.Layout = <span class="keyword">new</span> Layout2RawLayoutAdapter(patternLayout);</span><br><span class="line">            appender.AddParameter(parameter);</span><br><span class="line">            </span><br><span class="line">            parameter = <span class="keyword">new</span> AdoNetAppenderParameter();</span><br><span class="line">            parameter.DbType = System.Data.DbType.String;</span><br><span class="line">            parameter.ParameterName = <span class="string">"@exception"</span>;</span><br><span class="line">            parameter.Size = <span class="number">2000</span>;</span><br><span class="line">            parameter.Layout = <span class="keyword">new</span> Layout2RawLayoutAdapter(<span class="keyword">new</span> ExceptionLayout());</span><br><span class="line">            appender.AddParameter(parameter);</span><br><span class="line">            </span><br><span class="line">            appender.ActivateOptions();</span><br><span class="line">            hierarchy.Root.AddAppender(appender);</span><br><span class="line">            </span><br><span class="line">            hierarchy.Root.Level = Level.All;</span><br><span class="line">            hierarchy.Configured = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            BasicConfigurator.Configure(appender);</span><br><span class="line">            LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType).Info(<span class="string">"数据库日志启动"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>日志工具类</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> log4net;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Utils.LogUtils</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 日志工具</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LogHelper</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 类型使用typeof(classname)或者MethodBase.GetCurrentMethod().DeclaringType之类的</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 输出异常日志</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="type"&gt;</span>类型<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="message"&gt;</span>信息<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="ex"&gt;</span>异常<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ErrorLog</span>(<span class="params">Type type, <span class="keyword">string</span> message, Exception ex</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            ILog log = LogManager.GetLogger(type);</span><br><span class="line">            log.Error(message, ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 输出调试日志</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="type"&gt;</span>类型<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="message"&gt;</span>信息<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DebugLog</span>(<span class="params">Type type, <span class="keyword">string</span> message</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            ILog log = LogManager.GetLogger(type);</span><br><span class="line">            log.Debug(message);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 输出信息日志</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="type"&gt;</span>类型<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="message"&gt;</span>信息<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">InfoLog</span>(<span class="params">Type type, <span class="keyword">string</span> message</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            ILog log = LogManager.GetLogger(type);</span><br><span class="line">            log.Info(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h3><ol><li>配置的时候要严格遵守顺序，<code>hierarchy</code>要在最前面声明，不然怎么配置都无效</li><li>可以通过log4net的调试日志来找问题<br> 在<code>Web.config</code>添加如下配置，来启动log4net的调试日志 <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">appSettings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">"log4net.Internal.Debug"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">appSettings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">system.diagnostics</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">trace</span> <span class="attr">autoflush</span>=<span class="string">"true"</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">listeners</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">add</span>   </span></span><br><span class="line"><span class="tag">                <span class="attr">name</span>=<span class="string">"textWriterTraceListener"</span>   </span></span><br><span class="line"><span class="tag">                <span class="attr">type</span>=<span class="string">"System.Diagnostics.TextWriterTraceListener"</span>   </span></span><br><span class="line"><span class="tag">                <span class="attr">initializeData</span>=<span class="string">"D:\log4net.txt"</span> /&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">listeners</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">trace</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">system.diagnostics</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> DotNet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DotNet </tag>
            
            <tag> Log </tag>
            
            <tag> Config </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【SQL】SQL Server里的锁</title>
      <link href="2017/12/12/SQL/%E3%80%90SQL%E3%80%91SQL-Server%E9%87%8C%E7%9A%84%E9%94%81/"/>
      <url>2017/12/12/SQL/%E3%80%90SQL%E3%80%91SQL-Server%E9%87%8C%E7%9A%84%E9%94%81/</url>
      
        <content type="html"><![CDATA[<p>记录一下 <code>SQL Server</code> 里的锁相关知识<br><a id="more"></a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/chillsrc/archive/2013/04/13/3018386.html" target="_blank" rel="noopener">SQL SERVER的锁机制</a><br><a href="http://blog.csdn.net/huwei2003/article/details/4047191" target="_blank" rel="noopener">sql server锁知识及锁应用</a></p><h2 id="锁类型"><a href="#锁类型" class="headerlink" title="锁类型"></a>锁类型</h2><table><thead><tr><th>锁类型</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td>共享 (S)</td><td style="text-align:center">用于不更改或不更新数据的读取操作，如 SELECT 语句。</td></tr><tr><td>更新 (U)</td><td style="text-align:center">用于可更新的资源中。 防止当多个会话在读取、锁定以及随后可能进行的资源更新时发生常见形式的死锁。</td></tr><tr><td>独占(也可称排他)(X)</td><td style="text-align:center">用于数据修改操作，例如 INSERT、UPDATE 或 DELETE。 确保不会同时对同一资源进行多重更新。</td></tr><tr><td>意向</td><td style="text-align:center">用于建立锁的层次结构。 意向锁包含三种类型：意向共享 (IS)、意向排他 (IX) 和意向排他共享 (SIX)。</td></tr><tr><td>架构</td><td style="text-align:center">在执行依赖于表架构的操作时使用。 架构锁包含两种类型：架构修改 (Sch-M) 和架构稳定性 (Sch-S)。</td></tr><tr><td>大容量更新 (BU)</td><td style="text-align:center">在向表进行大容量数据复制且指定了 TABLOCK 提示时使用。</td></tr><tr><td>键范围</td><td style="text-align:center">当使用可序列化事务隔离级别时保护查询读取的行的范围。 确保再次运行查询时其他事务无法插入符合可序列化事务的查询的行。</td></tr></tbody></table><h2 id="锁查询"><a href="#锁查询" class="headerlink" title="锁查询"></a>锁查询</h2><ul><li><p>查询目前锁的表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> request_session_id spid, OBJECT_NAME(resource_associated_entity_id) tablename, request_status, request_type, request_mode</span><br><span class="line">    <span class="keyword">from</span> sys.dm_tran_locks <span class="keyword">where</span> resource_type=<span class="string">'OBJECT'</span></span><br></pre></td></tr></table></figure></li><li><p>查询目前死锁的进程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> spid, blocked, loginame, last_batch, <span class="keyword">status</span>, cmd, hostname, program_name  </span><br><span class="line"><span class="keyword">from</span> sys.sysprocesses  </span><br><span class="line"><span class="keyword">where</span> spid <span class="keyword">in</span>  </span><br><span class="line">( <span class="keyword">select</span> blocked <span class="keyword">from</span> sys.sysprocesses <span class="keyword">where</span> blocked &lt;&gt; <span class="number">0</span> ) <span class="keyword">or</span> (blocked &lt;&gt;<span class="number">0</span>)</span><br></pre></td></tr></table></figure></li><li><p>查询锁信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> req_spid  </span><br><span class="line">,<span class="keyword">case</span> req_status <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">'已授予'</span> <span class="keyword">when</span> <span class="number">2</span> <span class="keyword">then</span> <span class="string">'正在转换'</span> <span class="keyword">when</span> <span class="number">3</span> <span class="keyword">then</span> <span class="string">'正在等待'</span> <span class="keyword">end</span> <span class="keyword">as</span> req_status  </span><br><span class="line">,<span class="keyword">case</span> rsc_type <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">'NULL 资源（未使用）'</span> <span class="keyword">when</span> <span class="number">2</span> <span class="keyword">then</span> <span class="string">'数据库'</span> <span class="keyword">when</span> <span class="number">3</span> <span class="keyword">then</span> <span class="string">'文件'</span>  </span><br><span class="line">    <span class="keyword">when</span> <span class="number">4</span> <span class="keyword">then</span> <span class="string">'索引'</span> <span class="keyword">when</span> <span class="number">5</span> <span class="keyword">then</span> <span class="string">'表'</span> <span class="keyword">when</span> <span class="number">6</span> <span class="keyword">then</span> <span class="string">'页'</span> <span class="keyword">when</span> <span class="number">7</span> <span class="keyword">then</span> <span class="string">'键'</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="number">8</span> <span class="keyword">then</span> <span class="string">'扩展盘区'</span> <span class="keyword">when</span> <span class="number">9</span> <span class="keyword">then</span> <span class="string">'RID（行 ID)'</span> <span class="keyword">when</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">'应用程序'</span> <span class="keyword">else</span> <span class="string">''</span> <span class="keyword">end</span> rsc_type  </span><br><span class="line">,<span class="keyword">coalesce</span>(OBJECT_NAME(rsc_objid),db_name(rsc_dbid)) <span class="keyword">as</span> [<span class="keyword">object</span>]  </span><br><span class="line">,<span class="keyword">case</span> req_mode <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">'Sch-S'</span> <span class="keyword">when</span> <span class="number">2</span> <span class="keyword">then</span> <span class="string">'Sch-M'</span> <span class="keyword">when</span> <span class="number">3</span> <span class="keyword">then</span> <span class="string">'S'</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="number">4</span> <span class="keyword">then</span> <span class="string">'U'</span> <span class="keyword">when</span> <span class="number">5</span> <span class="keyword">then</span> <span class="string">'X'</span> <span class="keyword">when</span> <span class="number">6</span> <span class="keyword">then</span> <span class="string">'IS'</span> <span class="keyword">when</span> <span class="number">7</span> <span class="keyword">then</span> <span class="string">'IU'</span> <span class="keyword">when</span> <span class="number">8</span> <span class="keyword">then</span> <span class="string">'IX'</span> <span class="keyword">when</span> <span class="number">9</span> <span class="keyword">then</span> <span class="string">'SIU'</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">'SIX'</span> <span class="keyword">when</span> <span class="number">11</span> <span class="keyword">then</span> <span class="string">'UIX'</span> <span class="keyword">when</span> <span class="number">12</span> <span class="keyword">then</span> <span class="string">'BU'</span> <span class="keyword">when</span> <span class="number">13</span> <span class="keyword">then</span> <span class="string">'RangeS_S'</span> <span class="keyword">when</span> <span class="number">14</span> <span class="keyword">then</span> <span class="string">'RangeS_U'</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="number">15</span> <span class="keyword">then</span> <span class="string">'RangeI_N'</span> <span class="keyword">when</span> <span class="number">16</span> <span class="keyword">then</span> <span class="string">'RangeI_S'</span> <span class="keyword">when</span> <span class="number">17</span> <span class="keyword">then</span> <span class="string">'RangeI_U'</span> <span class="keyword">when</span> <span class="number">18</span> <span class="keyword">then</span> <span class="string">'RangeI_X'</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="number">19</span> <span class="keyword">then</span> <span class="string">'RangeX_S'</span> <span class="keyword">when</span> <span class="number">20</span> <span class="keyword">then</span> <span class="string">'RangeX_U'</span> <span class="keyword">when</span> <span class="number">21</span> <span class="keyword">then</span> <span class="string">'RangeX_X'</span> <span class="keyword">else</span> <span class="string">''</span> <span class="keyword">end</span> req_mode  </span><br><span class="line">,rsc_indid <span class="keyword">as</span> index_id,rsc_text,req_refcnt  </span><br><span class="line">,<span class="keyword">case</span> req_ownertype <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">'事务'</span> <span class="keyword">when</span> <span class="number">2</span> <span class="keyword">then</span> <span class="string">'游标'</span> <span class="keyword">when</span> <span class="number">3</span> <span class="keyword">then</span> <span class="string">'会话'</span> <span class="keyword">when</span> <span class="number">4</span> <span class="keyword">then</span> <span class="string">'ExSession'</span> <span class="keyword">else</span><span class="string">''</span> <span class="keyword">end</span> req_ownertype  </span><br><span class="line"><span class="keyword">from</span> sys.syslockinfo <span class="keyword">WHERE</span> rsc_type&lt;&gt;<span class="number">2</span> ;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> SQL Server </tag>
            
            <tag> lock </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2017-12-12</title>
      <link href="2017/12/12/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-12-12/"/>
      <url>2017/12/12/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-12-12/</url>
      
        <content type="html"><![CDATA[<p>最近项目正式测试，做的工具使用中遇到了问题，静态变量到底怎么用。</p><p>在希望变量可以多次重复使用的时候，会想用静态变量来降低内存消耗，但是这时候也会引入多进程并发使用时的问题。如果使用了静态变量，并且这个变量在每一个进程都应该不一样的话，这样的变量也不是静态的，会出现变量内容覆盖的问题。</p><p><strong>在Web多会话的情况下，静态变量是使用的同一内存地址，所以，在考虑在单线程多个类中重用变量时，还是用传参之类的地址引用吧。</strong></p><p>如果是完全静态不会变（静态字符串什么的），或者所有进程共享的变量（统计访问量什么的），可以使用静态变量来处理，降低内存消耗。</p><p>以前很少经历并发的情况，对相关的思维还是不清晰，以后需要多加留意。以前明明都学过，但是都没注意过。(╯‵□′)╯︵┻━┻</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> static </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2017-12-7</title>
      <link href="2017/12/07/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-12-7/"/>
      <url>2017/12/07/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-12-7/</url>
      
        <content type="html"><![CDATA[<h3 id="javac-“编码GBK的不可映射字符”"><a href="#javac-“编码GBK的不可映射字符”" class="headerlink" title="javac “编码GBK的不可映射字符”"></a>javac “编码GBK的不可映射字符”</h3><p>使用<code>javac -encoding UTF-8 XXX.java</code>，或把文件编码改为<code>ANSI</code></p><h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><p>LeetCode的笔记以后就直接写在对应的代码文件夹下面<code>README.md</code>里，毕竟有些题简单还写post太麻烦了，找起来也不方便</p><p>话说我这么写随笔好像也没嫌弃麻烦呢= =||，嘛，还是看情况吧，大不了回头再迁移过来嘛</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Java </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用位运算操作</title>
      <link href="2017/12/05/Algorithm/%E5%B8%B8%E7%94%A8%E4%BD%8D%E8%BF%90%E7%AE%97%E6%93%8D%E4%BD%9C/"/>
      <url>2017/12/05/Algorithm/%E5%B8%B8%E7%94%A8%E4%BD%8D%E8%BF%90%E7%AE%97%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>在进行一些计算时，可以使用位运算代替，从而提升代码执行速度。</p><p>以下为常用提升效率的操作</p><h3 id="求奇偶数："><a href="#求奇偶数：" class="headerlink" title="求奇偶数："></a>求奇偶数：</h3><p>奇数(Odd)：<code>11 &amp; 1 = 1</code><br>偶数(Even)：<code>24 &amp; 1 = 0</code></p><h3 id="乘2的幂"><a href="#乘2的幂" class="headerlink" title="乘2的幂"></a>乘2的幂</h3><p><code>1 * 2</code>: <code>1 &lt;&lt; 1 = 2</code><br><code>1 * 4</code>: <code>1 &lt;&lt; 2 = 4</code></p><h3 id="除2的幂"><a href="#除2的幂" class="headerlink" title="除2的幂"></a>除2的幂</h3><p><code>8 / 2</code>: <code>8 &gt;&gt; 1 = 4</code><br><code>8 / 4</code>: <code>8 &gt;&gt; 2 = 2</code></p><p><strong>注：</strong>上面算式里的<code>*</code>号，在Markdown里用来做 <em>斜体</em> 、 <strong>加粗</strong> 什么的，直接用记着转义（ * ），还有其他特殊符号什么的以后写的时候要注意一下。</p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Bitwise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2017-12-1</title>
      <link href="2017/12/01/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-12-1/"/>
      <url>2017/12/01/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-12-1/</url>
      
        <content type="html"><![CDATA[<p>把博客里的代码块高亮整理了一下，没高亮看着真是不好看。(ｰ̀дｰ́) 改完了感觉好多了，嗯( • ̀ω•́ )✧。</p><p>最近还是很迷茫(=_=)，不知道有时间的时候，该拿什么充实自己的技术栈，web开发相关的东西，在公司这环境实在不好再往更复杂的方向发展，即使自己去学了Redis、RabbitMQ也无处可用。(╯︵╰)</p><p>现在机器学习很火，但是要学习的东西太多了，不能盲目的去追，有在看数据挖掘的东西，先学着，至少概念和一些技术词汇了解了，再看情况是否一步步的加深了解。(￣.￣)</p><p>卖卖萌调整一下心情(￣ω￣)</p><p>还要准备科目一，事情还是很多的(´･_･`)路还很长，时间很快，接着走吧</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Entity Framework】自定义读取配置数据库连接</title>
      <link href="2017/12/01/DotNet/%E3%80%90Entity-Framework%E3%80%91%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/"/>
      <url>2017/12/01/DotNet/%E3%80%90Entity-Framework%E3%80%91%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>打包的人反馈<code>EF DBFirst</code>的数据库连接配置里面的<code>&amp;quot</code>(“<code>&quot;</code>”)，处理不好，沟通起来又不在一个地方，很麻烦，连接配置也的确不太好看，于是搜了下，看到了可以自定义。</p><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p>Entity Framework v6.1.3</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li><p>写个获取连接的类</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Utils</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EFConfig</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">DataBaseConnectionString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">string</span> DataBaseConnection = ConfigurationManager.AppSettings[<span class="string">"Connection"</span>].ToString();</span><br><span class="line">            <span class="keyword">return</span> ConnectionString(DataBaseConnection);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">ConnectionString</span>(<span class="params"><span class="keyword">string</span> DataBaseConnection</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"metadata=res://*/EFData.csdl|res://*/EFData.ssdl|res://*/EFData.msl;provider=System.Data.SqlClient;provider connection string =\""</span></span><br><span class="line">                    + DataBaseConnection + <span class="string">"persist security info=True;multipleactiveresultsets=True;application name=EntityFramework\""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>重写一下<code>edmx</code>-&gt;<code>*.Context.tt</code>-&gt;<code>*.Context.cs</code>的构造函数，可以直接修改<code>*.Context.tt</code>文件内的模板，避免下次更新数据库时，代码需要重新修改，搜索<code>base</code>即可，修改后面的<code>&quot;name=xxx&quot;</code>为你获取自定义连接的方法。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">EFDbContext</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    : <span class="title">base</span>(<span class="params">Utils.EFConfig.DataBaseConnectionString(</span>))</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在<code>Web.config</code>的<code>&lt;appSettings&gt;</code>节点配置，删除不使用了的<code>&lt;connectionStrings&gt;</code>节点</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">appSettings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">"Connection"</span> <span class="attr">value</span>=<span class="string">"data source=127.0.0.1;initial catalog=DBName;user id=User;password=Pwd;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appSettings</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>其实这主要是构造函数本来的方法就支持直接配置连接字符串</p><p><img src="/assets/images/ef_connect_string/ef-construct.png" alt="EF的构造函数"></p>]]></content>
      
      
      <categories>
          
          <category> DotNet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSharp </tag>
            
            <tag> DotNet </tag>
            
            <tag> Entity Framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Vue】自定义radio组</title>
      <link href="2017/12/01/Vue/%E3%80%90Vue%E3%80%91%E8%87%AA%E5%AE%9A%E4%B9%89radio%E7%BB%84/"/>
      <url>2017/12/01/Vue/%E3%80%90Vue%E3%80%91%E8%87%AA%E5%AE%9A%E4%B9%89radio%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>做出多组<code>radio</code>组，来作为选择条件的UI组件，比<code>select</code>更方便好看。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ol><li>使用了<code>bootstrap</code>和<code>vue</code>，两者存在冲突，将<code>bootstrap</code>的js去掉。除了要实现<code>Vue</code>的<code>radio</code>组件外，因为<code>bootstrap</code>的js删除了，所以<code>radio</code>选中的效果没有了，需要自己用<code>Vue</code>来实现绑定点击效果。（不换掉<code>bootstrap</code>的js的话Vue的<code>radio</code>组件事件绑定就会和冲突，进而没反应）</li><li>自定义组件的<code>v-model</code>，没能实现出想要的效果。待实验。</li></ol><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="1-bootstrap和vue冲突"><a href="#1-bootstrap和vue冲突" class="headerlink" title="1. bootstrap和vue冲突"></a>1. <code>bootstrap</code>和<code>vue</code>冲突</h3><p>本来想换成<code>bootstrap-vue</code>的js来用，发现radio的效果不一样了，最后还是要自己写选中效果，索性就把<code>bootstrap</code>的js去掉了，只用个css。</p><h3 id="2-Vue的radio组件相关实现"><a href="#2-Vue的radio组件相关实现" class="headerlink" title="2. Vue的radio组件相关实现"></a>2. <code>Vue</code>的<code>radio</code>组件相关实现</h3><p><code>demo</code>的js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// radio组件</span></span><br><span class="line"><span class="keyword">var</span> temp = <span class="string">'&lt;label class="btn btn-default" :class="&#123;active:checked&#125;" :for="id"&gt;&#123;&#123; label &#125;&#125;'</span></span><br><span class="line">    + <span class="string">'&lt;input :name="name" :id="id" type="radio" :value="value" :checked.sync="checked" v-on:click="update" ref="input"&gt;&lt;/label&gt;'</span>;</span><br><span class="line">Vue.component(<span class="string">'radio-tag'</span>, &#123;</span><br><span class="line">    template: temp,</span><br><span class="line">    props: &#123;</span><br><span class="line">        id: <span class="built_in">String</span>,</span><br><span class="line">        name: <span class="built_in">String</span>,</span><br><span class="line">        label: <span class="built_in">String</span>,</span><br><span class="line">        value: <span class="built_in">String</span>,</span><br><span class="line">        checked: <span class="built_in">Boolean</span>    <span class="comment">// 用来绑定初始值</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        update() &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'update'</span>);</span><br><span class="line">            <span class="comment">// ref获取dom</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.$refs[<span class="string">'input'</span>].checked) &#123;</span><br><span class="line">                <span class="keyword">this</span>.$emit(<span class="string">'update'</span>, <span class="keyword">this</span>.value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#condition'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        schools: [&#123; <span class="string">'id'</span>: <span class="string">'a'</span>, <span class="string">'name'</span>: <span class="string">'a校'</span> &#125;,</span><br><span class="line">                  &#123; <span class="string">'id'</span>: <span class="string">'b'</span>, <span class="string">'name'</span>: <span class="string">'b校'</span> &#125;],</span><br><span class="line">        grades: [&#123; <span class="string">'id'</span>: <span class="string">'a1'</span>, <span class="string">'name'</span>: <span class="string">'初一'</span> &#125;,</span><br><span class="line">                 &#123; <span class="string">'id'</span>: <span class="string">'a2'</span>, <span class="string">'name'</span>: <span class="string">'初二'</span> &#125;,</span><br><span class="line">                 &#123; <span class="string">'id'</span>: <span class="string">'a3'</span>, <span class="string">'name'</span>: <span class="string">'初三'</span> &#125;],</span><br><span class="line">        school: <span class="string">'a'</span>,</span><br><span class="line">        grade: <span class="string">'a1'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        updateGrades(value) &#123;   <span class="comment">// 回调函数</span></span><br><span class="line">            <span class="keyword">this</span>.school = value</span><br><span class="line">        &#125;,</span><br><span class="line">        updateClazzes(value) &#123;</span><br><span class="line">            <span class="keyword">this</span>.grade = value</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><code>demo</code>页面<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"condition"</span> <span class="attr">class</span>=<span class="string">"row clearfix "</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12 column"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group form-inline"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"School"</span> <span class="attr">class</span>=<span class="string">"col-md-4 control-label"</span>&gt;</span>学校<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">data-toggle</span>=<span class="string">"buttons"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">radio-tag</span> <span class="attr">v-for</span>=<span class="string">"item in schools"</span> <span class="attr">:id</span>=<span class="string">"item.id"</span> <span class="attr">:name</span>=<span class="string">"item.id"</span> <span class="attr">:label</span>=<span class="string">"item.name"</span> <span class="attr">:value</span>=<span class="string">"item.id"</span> <span class="attr">:checked</span>=<span class="string">"school === item.id"</span> <span class="attr">v-on:update</span>=<span class="string">"updateGrades"</span>&gt;</span><span class="tag">&lt;/<span class="name">radio-tag</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;school&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group form-inline"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"Grade"</span> <span class="attr">class</span>=<span class="string">"col-md-4 control-label"</span>&gt;</span>年级<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">data-toggle</span>=<span class="string">"buttons"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">radio-tag</span> <span class="attr">v-for</span>=<span class="string">"item in grades"</span> <span class="attr">:id</span>=<span class="string">"item.id"</span> <span class="attr">:name</span>=<span class="string">"item.id"</span> <span class="attr">:label</span>=<span class="string">"item.name"</span> <span class="attr">:value</span>=<span class="string">"item.id"</span> <span class="attr">:checked</span>=<span class="string">"grade === item.id"</span> <span class="attr">v-on:update</span>=<span class="string">"updateClazzes"</span>&gt;</span><span class="tag">&lt;/<span class="name">radio-tag</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;grade&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ol><li>vue的语法缩写</li></ol><ul><li><code>v-bind</code>缩写<code>:</code>，例：<code>v-bind:id=&quot;id&quot;</code>-&gt;<code>:id=&quot;id&quot;</code></li><li><p><code>v-on</code>缩写<code>@</code>，例：<code>v-on:click=&quot;update&quot;</code>-&gt;<code>@click=&quot;update&quot;</code></p><p>  .net Razor页面中<code>@</code>冲突，可以使用<code>@@</code>，或者就不要缩写</p></li></ul><ol><li>vue中class绑定</li></ol><ul><li><code>:class=&quot;{active:isActive}&quot;</code>，这个是官方例子</li><li><code>:class=&quot;{active:(model==0?true:false)}&quot;</code>，表达式使用</li></ul><ol><li>父子组件传值</li></ol><ul><li><code>props</code>属性用来父往子传值</li><li><code>$emit()</code>方法用来子往父传值</li></ul>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Bootstrap </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【C#】数组操作</title>
      <link href="2017/11/27/DotNet/%E3%80%90CSharp%E3%80%91%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C/"/>
      <url>2017/11/27/DotNet/%E3%80%90CSharp%E3%80%91%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>数组的合并拆分，基本就是利用数组的复制方法来实现</p><p>C#里面使用<code>lambda</code>表达式很方便，数组的各种操作使用<code>lambda</code>就很简洁，但是效率也是自然不如其他的函数了</p><h2 id="数组合并-复制"><a href="#数组合并-复制" class="headerlink" title="数组合并(复制)"></a>数组合并(复制)</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"><span class="keyword">int</span>[] b = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span> &#125;;</span><br><span class="line"><span class="keyword">int</span>[] c = <span class="keyword">new</span> <span class="keyword">int</span>[](a.Length + b.Length);</span><br><span class="line"></span><br><span class="line"><span class="comment">// lambda表达式 Concat 方法</span></span><br><span class="line"><span class="keyword">int</span>[] c = a.Concat(b).ToArray();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Array.Copy 支持所有类型数组，支持装拆箱</span></span><br><span class="line"><span class="comment">public static void Copy(</span></span><br><span class="line"><span class="comment">Array sourceArray,</span></span><br><span class="line"><span class="comment">int sourceIndex,</span></span><br><span class="line"><span class="comment">Array destinationArray,</span></span><br><span class="line"><span class="comment">int destinationIndex,</span></span><br><span class="line"><span class="comment">int length</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Array.Copy(a, <span class="number">0</span>, c, <span class="number">0</span>, a.Length);</span><br><span class="line">Array.Copy(b, <span class="number">0</span>, c, a.Length, b);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Array.ConstrainedCopy 和 Array.Copy 差不多，更严格，不支持装拆箱</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Buffer.BlockCopy 只支持基元类型</span></span><br><span class="line"><span class="comment">sbyte / byte / short / ushort / int / uint / long / ulong / char / float / double / bool</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">public static void BlockCopy (</span></span><br><span class="line"><span class="comment">Array src,</span></span><br><span class="line"><span class="comment">int srcOffset,</span></span><br><span class="line"><span class="comment">Array dst,</span></span><br><span class="line"><span class="comment">int dstOffset,</span></span><br><span class="line"><span class="comment">int count</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Buffer.BlockCopy(a, <span class="number">0</span>, c, <span class="number">0</span>, a.Length);</span><br><span class="line">Buffer.BlockCopy(b, <span class="number">0</span>, c, a.Length, b);</span><br></pre></td></tr></table></figure><p>数据量小的情况下，没有太大差别，大量数据时速度比较如下<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Buffer.BlockCopy &gt; Array.ConstrainedCopy &gt; Array.Copy &gt; Concat</span><br></pre></td></tr></table></figure></p><h2 id="数组拆分"><a href="#数组拆分" class="headerlink" title="数组拆分"></a>数组拆分</h2><p>除了<code>lambda</code>表达式基本，就是使用复制方法，复制子数组到新数组了，如：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"><span class="keyword">int</span>[] b = <span class="keyword">new</span> <span class="keyword">int</span>[](<span class="number">3</span>);</span><br><span class="line">Array.Copy(a, <span class="number">0</span>, b, <span class="number">0</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure></p><h3 id="字符串数组-以指定间隔符-拼接成字符串"><a href="#字符串数组-以指定间隔符-拼接成字符串" class="headerlink" title="字符串数组 以指定间隔符 拼接成字符串"></a>字符串数组 以指定间隔符 拼接成字符串</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span>[] a = <span class="keyword">new</span> <span class="keyword">string</span>[] &#123;<span class="string">"1"</span>, <span class="string">"2"</span>&#125;;</span><br><span class="line"><span class="keyword">string</span> s = <span class="keyword">string</span>.Join(<span class="string">", "</span>, a); <span class="comment">// 1, 2</span></span><br></pre></td></tr></table></figure><h3 id="字符串-以指定间隔符-分割成字符串数组"><a href="#字符串-以指定间隔符-分割成字符串数组" class="headerlink" title="字符串 以指定间隔符 分割成字符串数组"></a>字符串 以指定间隔符 分割成字符串数组</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单字符分割</span></span><br><span class="line"><span class="keyword">string</span> s = <span class="string">"a|b|c|"</span>;</span><br><span class="line"><span class="keyword">string</span>[] a = s.Split(<span class="string">'|'</span>);<span class="comment">// &#123;"a", "b", "c", ""&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 多字符分割</span></span><br><span class="line"><span class="keyword">string</span>[] a = s.Split(<span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">2</span>] &#123;<span class="string">'&amp;'</span>,<span class="string">'|'</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串分割</span></span><br><span class="line"><span class="keyword">string</span>[] a = Regex.Split(s,<span class="string">"ab"</span>,RegexOptions.IgnoreCase);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSharp </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LeetCode】4. Median of Two Sorted Arrays</title>
      <link href="2017/11/23/LeetCode/%E3%80%90LeetCode%E3%80%91MedianOfTwoSortedArrays/"/>
      <url>2017/11/23/LeetCode/%E3%80%90LeetCode%E3%80%91MedianOfTwoSortedArrays/</url>
      
        <content type="html"><![CDATA[<h2 id="两数组的中值"><a href="#两数组的中值" class="headerlink" title="两数组的中值"></a>两数组的中值</h2><p>题目地址：<a href="https://leetcode.com/problems/median-of-two-sorted-arrays/description/" target="_blank" rel="noopener">Go to LeetCode</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>求两个有序数组中间位置的数，两个数组长度和为偶数个时中间数求平均。<br>(哇，这题理解起来还是挺简单的，就是要做到<code>O(m+n)</code>有点麻烦了。)</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><ol><li>归并排序（O(m+n)）<br>两个有序数组合并排序，这是归并排序算法的一部分。</li></ol><p>普 通 思 路。然而我这个想法就一闪而过就没了。Orz，还去用插排了，做了半天看起来判断太多太丑了，后面直接删了。然后看了下题解，自己写了遍。（扶额</p><ol><li>二分查找（O(m,n)）<br>二分查找一个数组还算简单，这两个数组就有点晕了。思路的话 <a href="https://leetcode.com/problems/median-of-two-sorted-arrays/solution/" target="_blank" rel="noopener">LeetCode</a> 上有的，虽然是英文的，但是我没准备汉化一遍。（反正我这也没人看，略略略~</li></ol><h2 id="记"><a href="#记" class="headerlink" title="记"></a>记</h2><p>还是要多做做题，不然都忘光了。脑子已经锈实了。</p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Java </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【HDU-2215】I Love This Game</title>
      <link href="2017/11/22/Algorithm/HDU-2215/"/>
      <url>2017/11/22/Algorithm/HDU-2215/</url>
      
        <content type="html"><![CDATA[<h2 id="I-Love-This-Game"><a href="#I-Love-This-Game" class="headerlink" title="I Love This Game"></a>I Love This Game</h2><p>地址：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2115" target="_blank" rel="noopener">I Love This Game</a></p><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>NBA技巧大赛，给出一组球员及完成时间，求排名，相同时间排名相同，先按时间优先排序然后球员姓名字典序</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>比较优先级<code>mm &gt; ss &gt; name</code>，然后对排序后数组逐个判断时间是否有相同的，相同则打印排名，否则排名等于下标+1</p><h3 id="记"><a href="#记" class="headerlink" title="记"></a>记</h3><p>今天公司网有点烂，LeetCode加载太慢了，就翻了下杭电。看看当初懒懒的就做了那么十几题，还有一题<code>WA</code>的（就这题。），于是重新弄了下环境（VSCode + TDM-GCC），折腾了好久，然后终于可以弄代码了，发现之前代码里少了个+1。=_=，可能是那时候改好了忘提交了吧。</p><p>win下普通<code>g++</code>环境用<code>TDM-GCC</code>就好了，体积比<code>Cygwin</code>、<code>Mingw</code>要小得多。VSCode配置文件见，<a href="https://github.com/0Kelvins/Algorithm" target="_blank" rel="noopener">Algorithm仓库</a>的<code>.vscode</code>文件夹。</p><p>因为不想把这题混到LeetCode的里面，所以新建了分类、仓库</p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LeetCode】3. Longest Substring Without Repeating Characters</title>
      <link href="2017/11/21/LeetCode/%E3%80%90LeetCode%E3%80%91LongestSubstring/"/>
      <url>2017/11/21/LeetCode/%E3%80%90LeetCode%E3%80%91LongestSubstring/</url>
      
        <content type="html"><![CDATA[<h2 id="字符串内无重复字母的最长子串"><a href="#字符串内无重复字母的最长子串" class="headerlink" title="字符串内无重复字母的最长子串"></a>字符串内无重复字母的最长子串</h2><p>题目地址：<a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/description/" target="_blank" rel="noopener">Go to LeetCode</a></p><h3 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h3><p>字符串都是 <strong>“字符”</strong> 串，那就逐个 <strong>字符</strong> 来考虑比较呗。</p><p>定义：</p><ul><li>目标串：字符串内无重复字母的最长子串</li><li>当前最大目标串长度：l</li><li>最大目标串长度:lmax</li></ul><p>解题步骤：</p><ol><li>设定<code>i</code>为目标串第一个字符下标，逐个字符遍历</li><li>比较当前字符在前面是否存在，是则<code>i</code>设置为已存在字符的下标+1（即要包含后面的字符，且不重复，只能舍弃前面的了，后面比较就从这里开始），否则当前最大目标串长度<code>l + 1</code></li><li>直到比较完当前字符前所有字符，若<code>l &gt; lmax</code>，则<code>lmax = l</code></li></ol><h3 id="记"><a href="#记" class="headerlink" title="记"></a>记</h3><p>Java啊什么的，各种框架用多了，总想着整体设计，但在这里这种思维可能会有点碍事。不要总想着从整体的串上来看，这样要找个这样的子串，要怎么比较呢，太麻烦了。</p><p>记得当初上数据结构的时候有一个字符串匹配算法（KMP），然后ACM里有一系列的题，我博客园还有以前的记录，那个记得是要麻烦很多的。</p><p>这题一次Ac，还算简单。倒是写这个记录写了半天= =b。嘛，太久不动脑子了，一次Ac还是蛮开心的ヽ(￣▽￣)ﾉ</p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Java </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NexT修改背景</title>
      <link href="2017/11/20/Hexo/NexT%E4%BF%AE%E6%94%B9%E8%83%8C%E6%99%AF/"/>
      <url>2017/11/20/Hexo/NexT%E4%BF%AE%E6%94%B9%E8%83%8C%E6%99%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="修改背景步骤"><a href="#修改背景步骤" class="headerlink" title="修改背景步骤"></a>修改背景步骤</h2><ul><li>添加背景图片，到路径<code>next-&gt;source-&gt;images</code></li><li>修改NexT自定义样式文件：<code>next-&gt;source-&gt;css-&gt;_custom-&gt;custom.styl</code></li><li>添加样式代码<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"/images/background.png"</span>);</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed; <span class="comment">/*不随页面移动*/</span></span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat; <span class="comment">/*不重复*/</span></span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">50%</span> <span class="number">50%</span>; <span class="comment">/*居中*/</span></span><br><span class="line">    <span class="attribute">background-size</span>:cover;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*内容半透明背景*/</span></span><br><span class="line"><span class="selector-class">.header-inner</span>,</span><br><span class="line"><span class="selector-class">.content-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="built_in">rgba</span>(255,255,255,0.75) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*底部连接颜色*/</span></span><br><span class="line"><span class="selector-id">#footer</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Hexo】标签插件测试</title>
      <link href="2017/11/20/Hexo/%E3%80%90Hexo%E3%80%91%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
      <url>2017/11/20/Hexo/%E3%80%90Hexo%E3%80%91%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>主要是可以自定义一些样式</p><h2 id="Hexo标签插件"><a href="#Hexo标签插件" class="headerlink" title="Hexo标签插件"></a>Hexo标签插件</h2><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>在文章中插入指定大小的图片。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 例 --&gt;</span></span><br><span class="line">&#123;% img img-test /assets/images/avatar/avatar.jpg 150 150 图片测试 %&#125;</span><br></pre></td></tr></table></figure></p><img src="/assets/images/avatar/avatar.jpg" class="img-test" width="150" height="150" title="图片测试"><h2 id="NexT内建标签"><a href="#NexT内建标签" class="headerlink" title="NexT内建标签"></a>NexT内建标签</h2><h3 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 其中 class="blockquote-center" 是必须的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"blockquote-center"</span>&gt;</span>blah blah blah<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span></span><br><span class="line">&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 标签别名 --&gt;</span></span><br><span class="line">&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><p>blah blah blah </p></blockquote><h3 id="突破容器宽度限制的图片"><a href="#突破容器宽度限制的图片" class="headerlink" title="突破容器宽度限制的图片"></a>突破容器宽度限制的图片</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 其中 class="full-image" 是必须的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/image-url"</span> <span class="attr">class</span>=<span class="string">"full-image"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span></span><br><span class="line">&#123;% fullimage /image-url, alt, title %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 别名 --&gt;</span></span><br><span class="line">&#123;% fi /image-url, alt, title %&#125;</span><br></pre></td></tr></table></figure><span itemprop="image" itemscope itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/assets/images/illustration/HallstattAustria.jpg" class="full-image" alt="NexT内建标签fi" title="NexT内建标签fi"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span><h3 id="Bootstrap-Callout"><a href="#Bootstrap-Callout" class="headerlink" title="Bootstrap Callout"></a>Bootstrap Callout</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note class-name %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 例 --&gt;</span></span><br><span class="line">&#123;% note success %&#125; 内容 **加粗** (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>可选<code>class-name</code>为Bootstrap的样式:<br><code>default</code>、<code>primary</code>、<code>success</code>、<code>info</code>、<code>warning</code>、<code>danger</code></p><div class="note default"><p>内容 <strong>加粗</strong> </p></div><div class="note primary"><p>内容 <strong>加粗</strong> </p></div><div class="note success"><p>内容 <strong>加粗</strong> </p></div><div class="note info"><p>内容 <strong>加粗</strong> </p></div><div class="note warning"><p>内容 <strong>加粗</strong> </p></div><div class="note danger"><p>内容 <strong>加粗</strong> </p></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 标签插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VS2015】无法连接FTP服务器</title>
      <link href="2017/11/20/Question/%E3%80%90VS2015%E3%80%91%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5FTP%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>2017/11/20/Question/%E3%80%90VS2015%E3%80%91%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5FTP%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>使用 Visual Studio 2015 时出现的问题</p><p>环境：win7</p><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><ul><li>发布Web项目到FTP时 失败，并提示 <em>无法打开网站”ftp://…”。未安装与 FTP 服务器进行通信所需的组件（或”Unable to open the Web site ‘ftp://…’. The components for communicating with FTP servers are not installed.”）*</em></li><li>可以直接使用文件管理器正常访问<code>ftp</code>地址</li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://social.msdn.microsoft.com/Forums/en-us/338f95b6-19a3-48da-a975-662b4cb1e86c/the-components-for-communicating-with-ftp-servers-are-not-installed?forum=visualstudiogeneral" target="_blank" rel="noopener">The components for communicating with FTP servers are not installed.——<br>paaccess</a></li><li><a href="https://github.com/aspnet/Tooling/issues/748" target="_blank" rel="noopener">Publish with FTP does not work —— kurtdevocht</a></li></ul><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>安装<strong>32位</strong>的 <code>Visual C++ Redistributable Packages for Visual Studio 2013</code> ，然后重启电脑即可</p><p>下载链接：<a href="https://download.microsoft.com/download/F/3/5/F3500770-8A08-488E-94B6-17A1E1DD526F/vcredist_x86.exe" target="_blank" rel="noopener">vcredist_x86</a></p><h3 id="记"><a href="#记" class="headerlink" title="记"></a>记</h3><p>考虑把问题翻译成英文以后查，的确能搜到更多的信息</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LeetCode】TwoSum、AddTwoNumbers</title>
      <link href="2017/11/14/LeetCode/%E3%80%90LeetCode%E3%80%91TwoSum%E3%80%81AddTwoNumbers/"/>
      <url>2017/11/14/LeetCode/%E3%80%90LeetCode%E3%80%91TwoSum%E3%80%81AddTwoNumbers/</url>
      
        <content type="html"><![CDATA[<h2 id="LeetCode小记"><a href="#LeetCode小记" class="headerlink" title="LeetCode小记"></a>LeetCode小记</h2><p>好久没写过题目了，思维都僵化了←_←，所以先找点简单些的题目找找感觉。<br>因为现在基本不会用到C/C++，所以使用Java来做。</p><h2 id="TwoSum系列题目"><a href="#TwoSum系列题目" class="headerlink" title="TwoSum系列题目"></a><code>TwoSum</code>系列题目</h2><p><strong>题意</strong> &gt; 求数组内相加为目标值的两个数的下标</p><h3 id="1-Two-Sum"><a href="#1-Two-Sum" class="headerlink" title="1 Two Sum"></a><code>1</code> Two Sum</h3><p>这题要做出来很简单，但是想优化一下时间复杂度就要思考思考了。第一反应只想到了用<code>Map</code>来存数和下标的键值对，考虑是不是排个序再取个目标值的一半，然后向两边加。但是这样实际上做了层排序，耗费了时间，如果有多个目标值而数组一致的话，可以考虑。当然这里就不是了。</p><p><strong>正解</strong>：使用<code>Map</code>，来逐个存储数组的数，并在存储前检查<code>Map</code>内是否包含<code>a</code>与将要存储的数<code>b</code>，满足<code>b + a = target</code>，满足则返回<code>a</code>的下标和当前数的下标，否则存储<code>b</code>及下标，然后继续下一个数。</p><p><strong>小结</strong>：这样省去了查找下标、查到结果以外的无用计算等等。</p><h3 id="167-Two-Sum-II-——-Input-array-is-sorted"><a href="#167-Two-Sum-II-——-Input-array-is-sorted" class="headerlink" title="167 Two Sum II —— Input array is sorted"></a><code>167</code> Two Sum II —— Input array is sorted</h3><p>刚好就看到有这题，之前从里往外的算法，实现比较不简洁，看到题解什么的都是从外往里算的，当然这样比较好用<code>while</code>来写。</p><h2 id="2-Add-Two-Numbers"><a href="#2-Add-Two-Numbers" class="headerlink" title="2 Add Two Numbers"></a><code>2</code> Add Two Numbers</h2><p><strong>题意</strong> &gt; 两个正整数，用单向链表来倒叙表示，链表的每个节点代表数的一位，求相加后的数对应链表。</p><p><strong>要点</strong>：相加进位，进位的值要加到下一个节点，最高位进位，两个数不同长度的补位</p><p><strong>坑</strong>：<code>1 + 9,9,9 = 0,0,0,1</code>，这里多次进位</p><p><strong>方法</strong>：我一开始用的递归实现，因为更好想一点吧（以前一定直接非递归的Orz），每个节点考虑，计算相加的结果，然后填入<code>new</code>的节点<code>t</code>，<code>t</code>的<code>next</code>递归调用传入两个节点对应的<code>next</code>，中间加上判空以及溢出计算就好了。<br>非递归也没有那么麻烦，只是用<code>while</code>来实现子节点的计算。</p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Java </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2017-11-13</title>
      <link href="2017/11/13/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-11-13/"/>
      <url>2017/11/13/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-11-13/</url>
      
        <content type="html"><![CDATA[<h3 id="Apache、Nginx和Tomcat的不同"><a href="#Apache、Nginx和Tomcat的不同" class="headerlink" title="Apache、Nginx和Tomcat的不同"></a>Apache、Nginx和Tomcat的不同</h3><ol><li>Apache和Nginx都是Http Server，主要代理静态Http资源请求，服务器本身不能动态生成页面（可以通过其他模块），Tomcat则是在Apache后加了一层应用，可以代理“动态”资源请求（Jsp、Servlet…)，即动态生成页面等</li><li>Nginx常用于反向代理服务器，并发非阻塞，Apache并发阻塞，但稳定</li></ol><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><ol><li><p>删除表内所有数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRUNCAT TABLE A;</span><br></pre></td></tr></table></figure></li><li><p>有条件批量删除数据优化</p></li></ol><p>索引可以提高<code>select</code>的速度，但是会减慢<code>delete</code>的速度，所以，需要有条件大量删除数据时，可以考虑在半夜，备份索引，删除索引，建立删除条件的索引，然后批量删除数据</p><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>用于作为各类镜像的容器，提高环境的搭建效率，可以快速便捷的部署到服务器</p><h3 id="日常"><a href="#日常" class="headerlink" title="日常"></a>日常</h3><p>在现在的工作里，越来越觉得以前学的软件工程、算法、计算机网络、Linux什么的都好有用，比那些的框架更有意义。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> SQL </tag>
            
            <tag> Server </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2017-11-9</title>
      <link href="2017/11/09/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-11-9/"/>
      <url>2017/11/09/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-11-9/</url>
      
        <content type="html"><![CDATA[<h3 id="Vue小记"><a href="#Vue小记" class="headerlink" title="Vue小记"></a>Vue小记</h3><p>使用侦听属性<code>watch</code>时，属性只有新旧值不同时才会触发</p><h3 id="Js小记"><a href="#Js小记" class="headerlink" title="Js小记"></a>Js小记</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> == <span class="string">''</span> -&gt; <span class="literal">true</span></span><br><span class="line"><span class="number">0</span> === <span class="string">''</span> -&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><blockquote><p>Session在浏览器关闭后是不会直接自动结束的，重启浏览器重新进入新的会话</p></blockquote><p>Session ID在浏览器中是保存为Cookie的，只是不使用保存在硬盘上的话，会保存在进程中，即内存中。当浏览器关闭，进程下的Cookie自然丢失，重启也就找不到了，只能重启新的会话。</p><p>小记：<br>    为了延长登录有效时间，做了定时器来在每次请求后，定时刷新登录状态，但是一直没想好怎么做好随着Session结束，来结束定时器。原来浏览器关闭，Session还没被回收，那也就不用考虑了。做好定时的单例，以及定时的确定会关闭，以及随登录验证来启用结束更重要。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Vue </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Session </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS快捷键</title>
      <link href="2017/11/08/Record/VS%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>2017/11/08/Record/VS%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<p>工具 -&gt; 环境 -&gt; 键盘<br>-&gt; 1. 显示命令包含：搜索要修改的快捷键名字</p><pre><code>* 修改显示智能提示的快捷键名字：视图.显示智能标记* 修改注释快捷键搜索：注释</code></pre><ol><li>新建快捷键用于 <em>全局</em> -&gt; 按快捷键 -&gt; 选中输入框，按下要设置的快捷键<br>个人习惯，修改为<code>Ctrl + `</code><br><img src="/assets/images/vs_keys_config/vs-keys-config.png" alt="快捷键设置界面"></li></ol>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2017-11-8</title>
      <link href="2017/11/08/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-11-8/"/>
      <url>2017/11/08/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-11-8/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>今天发现对产品业务不够了解的债，要还了。〒▽〒<br>做的工具对后面一个系统来说是没问题的，但是到再后面的系统，问题就放大了。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>详细的了解别的产品业务也是很有必要的，免得后期做好了再还债。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NexT标签和分类页面</title>
      <link href="2017/11/06/Hexo/NexT%E6%A0%87%E7%AD%BE%E5%92%8C%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2/"/>
      <url>2017/11/06/Hexo/NexT%E6%A0%87%E7%AD%BE%E5%92%8C%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h2><p>新建一个页面，命名为 tags 。命令如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">"tags"</span></span><br></pre></td></tr></table></figure></p><h2 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h2><p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="bullet">-11</span><span class="bullet">-6</span> <span class="number">22</span><span class="string">:19:52</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><p>注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="bullet">-11</span><span class="bullet">-6</span> <span class="number">22</span><span class="string">:19:52</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><h2 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h2><p>在菜单中添加链接。编辑NexT的配置文件 ，添加 tags 到 menu 中，如下:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line"><span class="attr">  about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br></pre></td></tr></table></figure></p><h2 id="添加-分类-categories"><a href="#添加-分类-categories" class="headerlink" title="添加 分类 categories"></a>添加 分类 categories</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">"categories"</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="bullet">-11</span><span class="bullet">-06</span> <span class="number">22</span><span class="string">:07:29</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>如果页面显示不正常，一般都是有地方拼写错了，或者需要清理浏览器缓存</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven多模块项目搭建</title>
      <link href="2017/11/06/Java/Maven%E5%A4%9A%E6%A8%A1%E5%9D%97%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/"/>
      <url>2017/11/06/Java/Maven%E5%A4%9A%E6%A8%A1%E5%9D%97%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="框架-工具-关键字"><a href="#框架-工具-关键字" class="headerlink" title="框架/工具 关键字"></a>框架/工具 关键字</h3><blockquote><p>Maven SpringBoot Myatis MySQL Tomcat IDEA</p></blockquote><h3 id="部分操作"><a href="#部分操作" class="headerlink" title="部分操作"></a>部分操作</h3><ol><li><p>新建父工程，<code>New &gt; Project &gt; Maven</code>，不使用原型（不勾选<code>Create from archetype</code>） -&gt; 填写项目信息（GroupID:项目组织唯一标识，ArtifactID:项目唯一标识）</p></li><li><p>删除父工程下<code>src</code>目录</p></li><li><p>右键项目，新建子模块（New -&gt; Module），填写项目名称，其他默认即可<br>|–&gt; 非web模块，不使用原型新建<code>Maven</code>模块<br>|–&gt; web模块<br>  |-&gt; 使用<code>maven-archetype-webapp</code>构建<br>  |-&gt; <code>Spring Initializr</code>构建<code>Spring</code>相关项目</p></li></ol><p>新建模块：<br><img src="/assets/images/multi_module_demo/new-module.png" alt="新建模块"></p><p>简单MVC项目结构如下所示：<br><img src="/assets/images/multi_module_demo/project-struct.png" alt="项目结构"></p><ol><li>在各个子模块的pom文件中添加互相的依赖（父工程在前一步自动添加了对应的子模块<code>&lt;modules&gt;</code>）</li></ol><p><img src="/assets/images/multi_module_demo/module-dependencies.png" alt="模块依赖"></p><ol><li>添加依赖到父工程的pom中（<code>Spring Initializr</code>构建web模块的，把web模块的pom.xml中的依赖改到父工程）</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在父工程pom.xml后添加下面内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- The plugin rewrites your manifest --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span><span class="comment">&lt;!-- 指定该Main Class为全局的唯一入口 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.like.DemoWebApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">layout</span>&gt;</span>ZIP<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span><span class="comment">&lt;!--可以把依赖的包都打包到生成的Jar包中--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--可以生成不含依赖包的不可执行Jar包--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- configuration&gt;</span></span><br><span class="line"><span class="comment">                      &lt;classifier&gt;exec&lt;/classifier&gt;</span></span><br><span class="line"><span class="comment">                    &lt;/configuration&gt; --&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>web模块pom.xml添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 为jar包取名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>demo-start<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><p>右键父项目 &gt; <code>Open Module Settings</code>进入<code>Project Structure</code> &gt; 子模块 &gt; <code>Dependencies</code> &gt; <code>+</code> &gt; <code>Module Dependency</code>，添加子模块需要引用的其他子模块</p></li><li><p>maven打包</p></li><li><p>配置启动设置，配置为启动web子模块的配置即可</p></li></ol><p><img src="/assets/images/multi_module_demo/run-config.png" alt="模块依赖"></p><h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><ol><li><p>maven统一打包命令(跳过测试)</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn package —Dmaven.test.skip=true</span><br></pre></td></tr></table></figure></li><li><p>编译/打包报错程序包xxx.xxx.xxx不存在，尝试</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean</span><br></pre></td></tr></table></figure></li><li><p>子模块间的引用要写在各自的pom文件里的 <code>&lt;dependencies&gt;</code>中，父工程配置<code>&lt;modules&gt;</code>即可</p></li><li><p>引用的jar包写在父工程pom的 <code>&lt;dependencies&gt;</code>中</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Java </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot搭建体验</title>
      <link href="2017/11/03/Java/SpringBoot%E6%90%AD%E5%BB%BA%E4%BD%93%E9%AA%8C/"/>
      <url>2017/11/03/Java/SpringBoot%E6%90%AD%E5%BB%BA%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<p>虽然现在不在用Java开发，但是决定了解一下Java Web开发在用的比较新的东西<br>在这记录一下，SpringBoot搭建一个小型项目框架</p><h3 id="工具清单"><a href="#工具清单" class="headerlink" title="工具清单"></a>工具清单</h3><p>JDK IDEA MySQL</p><h3 id="框架工具组成"><a href="#框架工具组成" class="headerlink" title="框架工具组成"></a>框架工具组成</h3><p>SpringBoot + Mybatis + Thymeleaf + Maven</p><h3 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h3><ol><li>新建工程 -&gt; 选择<code>Spring Initializr</code> -&gt; 选好JDK -&gt; 填好项目信息</li><li>选择要集成的框架，这里选基本的<code>SpringBoot</code>项目需要的<br>  Web -&gt; Web<br>  Template Engines -&gt; Thymeleaf<br>  SQL -&gt; MyBatis JDBC MySQL</li><li>IDEA搭建好基本框架，Maven添加依赖包</li><li>删除<code>application.properties</code>，新建<code>application.yml</code>、<code>application-dev.yml</code>和<code>application-prod.yml</code>，分别作为主配置、开发配置、生成配置文件<br><code>application.yml</code>:<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  thymeleaf:</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="string">HTML5</span></span><br><span class="line"><span class="attr">    encoding:</span> <span class="string">utf-8</span></span><br><span class="line"><span class="attr">    content-type:</span> <span class="string">text/html</span></span><br><span class="line"><span class="attr">    cache:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">dev</span> <span class="comment"># 表示使用application-dev.yml</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span></span><br><span class="line"><span class="attr">    tomcat:</span></span><br><span class="line"><span class="attr">      initialSize:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      min-idle:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      max-idle:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">      max-wait:</span> <span class="number">60000</span></span><br><span class="line"><span class="attr">      timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line"><span class="attr">      minEvictableIdleTimeMillis:</span> <span class="number">30000</span></span><br><span class="line"><span class="attr">      validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      testOnReturn:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  file:</span> <span class="string">logs/demo.log</span></span><br></pre></td></tr></table></figure></li></ol><p><code>application-dev.yml</code>:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure></p><p><code>application-prod.yml</code>:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">  ssl:</span></span><br><span class="line"><span class="attr">    key-store:</span> <span class="attr">classpath:xxx.jks</span></span><br><span class="line"><span class="attr">    key-store-password:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">    keyStoreType:</span> <span class="string">JKS</span></span><br><span class="line"><span class="attr">    keyAlias:</span> <span class="string">xxx</span></span><br></pre></td></tr></table></figure></p><ol><li>然后按照我的<code>SpringBootDemo</code>仓库来建controller什么的，就好了。</li><li>好吧，前面好多别人写了很多遍的东西，需要的话看我参考的博客就好了。<br><code>Thymeleaf</code>之前只撇过几眼，好像跟<code>JSTL</code>有点像，就没注意</li></ol><p><code>Thymeleaf</code>它是一个XML/XHTML/HTML5模板引擎，使用各种包含<code>th:*</code>属性的标签，格式其实和HTML有点不一样，head、body什么的都不一样。</p><p>Thymeleaf的url，因为模板里好像不能用<code>&amp;</code>符号，需要<code>&amp;amp;</code>替换，但是官方有对应的标签的<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;a href="/test?id=1&amp;name=2"&gt;a&lt;/a&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/test(id=1, name=2)&#125;"</span>&gt;</span>a<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ol><li>配置启动设置，添加<code>SpringBoot</code>启动配置，集成了Tomcat的，不用想<code>SpringMVC</code>等等以前的配置Tomcat的配置，<code>Main class</code>就是<code>XxxApplication</code>，选上<code>Use classpath of module</code>和<code>JRE</code>，就可以启动了。</li><li>为了开发看起来舒服点，在<code>Project Structure</code>的<code>Modules</code>中设置一下对应文件目录作用，设置一下<code>Main class</code>为Spirng配置文件</li></ol><h3 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h3><p>框架用起来越来越简单了，但是框架解决的还是那些问题，只是省去了很多复杂的配置，写东西越来越简便，让我这样的“搬砖工”，写逻辑什么的更专注一点吧，或许有一天AI可以写逻辑了，大概就失业了:)</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL安装</title>
      <link href="2017/11/02/SQL/MySQL%E5%AE%89%E8%A3%85/"/>
      <url>2017/11/02/SQL/MySQL%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>MySQL压缩包安装步骤记录<br><a id="more"></a></p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p>去<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">官网</a> -&gt; Other Downloads:Windows (x86, 64-bit), ZIP Archive -&gt; 下载mysql社区版压缩包</p></li><li><p>解压到要安装的目录，如：<code>D:\Program Files\mysql-8.0.11-winx64</code></p></li><li><p>在根目录下新建<code>my.ini</code>，如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br><span class="line"></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置3306端口</span></span><br><span class="line"><span class="string">port</span> <span class="string">=</span> <span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="string">basedir="D:\Program</span> <span class="string">Files\mysql-5.7.20-winx64"</span></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="string">datadir="D:\Program</span> <span class="string">Files\mysql-5.7.20-winx64\data"</span></span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="string">max_connections=200</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line"><span class="string">character-set-server=utf8</span></span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="string">default-storage-engine=INNODB</span></span><br><span class="line"><span class="comment"># sql规则</span></span><br><span class="line"><span class="string">sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'</span></span><br></pre></td></tr></table></figure></li><li><p>cmd，cd进入<code>D:\Program Files\mysql-8.0.11-winx64\bin</code>目录，执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> mysqld install</span></span><br><span class="line">Service successfully installed.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> mysqld --initialize-insecure --user=mysql</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> net start mysql</span></span><br><span class="line"> MySQL 服务正在启动 .</span><br><span class="line"> MySQL 服务已经启动成功。</span><br></pre></td></tr></table></figure><p>这时候MySQL已经启动了，端口什么的如<code>my.ini</code>配置</p></li><li><p>但是为了全局使用，需要在环境变量<code>Path</code>添加<code>D:\Program Files\mysql-8.0.11-winx64\bin</code></p></li></ol><p>（一开始下了个<code>mysql-8.0.11-winx64.zip</code>，还以为是msi文件压缩了一下呢。- -||</p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2017-11-01</title>
      <link href="2017/11/01/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-11-01/"/>
      <url>2017/11/01/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-11-01/</url>
      
        <content type="html"><![CDATA[<p>重装折腾win7，没关闭更新，更新100+补丁还失败还原，各种dll丢失。报错大致如下：</p><blockquote><p>D3DCompiler_47.dll、api-ms-win-core-libraryloader-l1-2-1.dll、gfx.dll……丢失</p></blockquote><p>启动Word2016、SS和MSSQL Server MS的时候(依赖都比较新的软件)报错，缺少<code>net46</code>。报错大致如下:</p><blockquote><p>“<module>“的类型初始值设定项引发异常<br>缺少”.Net Framework 4.6”</module></p></blockquote><p>原因：<br><code>D3DCompiler_47.dll</code>丢失，因为更新补丁失败还原的缘故<br>其他的是卸载了或者本来就缺新的<code>.Net Framework</code></p><p>解决方法：</p><ol><li><p>打补丁<code>Windows6.1-KB4019990-x64.msu</code>，应该是补上<code>D3DCompiler_47.dll</code>一系列的库的。<br><a href="http://blog.csdn.net/sxf359/article/details/78217247?locationNum=2&amp;fps=1" target="_blank" rel="noopener">Win32Exception (0x80004005): 找不到指定的模块</a></p></li><li><p>重装电脑里版本需要的.Net框架，打完补丁就可以装了，一般运行的话装个比较高版本的就好，我装的是<code>.Net Framework4.7</code>，会修复版本.Net框架“缺少”之类的问题。</p></li></ol><p>注：<code>.Net Fx</code>出现无法安装之类的问题见本文最后<br>以上。结果弄了好几天。(╯‵□′)╯︵┻━┻</p><h3 id="插曲1-2017-11-2-15-00-26"><a href="#插曲1-2017-11-2-15-00-26" class="headerlink" title="插曲1 2017-11-2 15:00:26"></a>插曲1 2017-11-2 15:00:26</h3><p>今天本来以为已经搞定了，结果发现VS2015里没有.Net Framework 4.5，于是又开始折腾。。。目前更糟糕了，VS起不来了，报没有.Net Fx4.6，然而卸载程序里面明明有的。<br>未完待续，好烦。</p><h3 id="插曲2-2017-11-2-16-49-13"><a href="#插曲2-2017-11-2-16-49-13" class="headerlink" title="插曲2 2017-11-2 16:49:13"></a>插曲2 2017-11-2 16:49:13</h3><ul><li>首先，卸载明明安装着的.Net Fx 4.6是不明智的</li><li>其次，修复VS更是浪费青春</li><li>然后，重装电脑里最新的.Net Fx，我的是4.7，然后4.6的问题就解决了。<br>但是并不能解决.Net Fx 4.5没有的问题，正在去官网下载4.5.2的Dev-Pack，328M，感觉装完有应该就会有4.5了</li><li>最后，吐槽一下，公司网真烂，太烂了，下载页好久才打开，加上电脑也烂，不然早弄好了</li></ul><h3 id="插曲终-2017-11-3-14-03-10"><a href="#插曲终-2017-11-3-14-03-10" class="headerlink" title="插曲终 2017-11-3 14:03:10"></a>插曲终 2017-11-3 14:03:10</h3><p>问题原因：<br>本机上有 <code>net45</code> 的文件没删干净，所以安装不了，但是肯定缺少文件了<br>解决办法：<br><code>.net framework</code> 的安装目录在 <code>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5</code><br>清理干净，或者直接从其他电脑拷一份过来就好了。</p><p>完结撒花。</p>]]></content>
      
      
      
        <tags>
            
            <tag> DotNet </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【C#】预编译SQL</title>
      <link href="2017/10/27/DotNet/%E3%80%90CSharp%E3%80%91%E9%A2%84%E7%BC%96%E8%AF%91SQL/"/>
      <url>2017/10/27/DotNet/%E3%80%90CSharp%E3%80%91%E9%A2%84%E7%BC%96%E8%AF%91SQL/</url>
      
        <content type="html"><![CDATA[<p>C#中预编译SQL方法如下：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// System.Data.Entity.Database</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ExecuteSqlCommand</span>(<span class="params"><span class="keyword">string</span> sql, <span class="keyword">params</span> <span class="keyword">object</span>[] parameters</span>)</span>;</span><br></pre></td></tr></table></figure></p><p>使用EF6框架，仓库使用生成的数据库上下文：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> EFDbContext dbctx = <span class="keyword">new</span> EFDbContext();</span><br></pre></td></tr></table></figure></p><p>使用示例：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除tableA中，name以"$"结尾的数据</span></span><br><span class="line"><span class="keyword">string</span> sql = <span class="string">"DELETE FROM tableA WHRER name like \"%@sign\""</span>;</span><br><span class="line"><span class="keyword">int</span> result = dbctx.Database.ExecuteSqlCommand(sql,</span><br><span class="line">               <span class="keyword">new</span> SqlParameter(<span class="string">"sign"</span>, <span class="string">"$"</span>)</span><br><span class="line">             );</span><br></pre></td></tr></table></figure></p><p>查询方法，如下：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> parameters = <span class="keyword">new</span> SqlParameter[] &#123;</span><br><span class="line">    <span class="keyword">new</span> SqlParameter(<span class="string">"name"</span>, name),</span><br><span class="line">    <span class="keyword">new</span> SqlParameter(<span class="string">"age"</span>, age)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span> sql = <span class="string">$"select * from user where name = @name and age = @age"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> l = db.Database.SqlQuery&lt;User&gt;(sql, parameters).ToList();</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSharp </tag>
            
            <tag> 随笔 </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔2017-10-26</title>
      <link href="2017/10/26/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-10-26/"/>
      <url>2017/10/26/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%942017-10-26/</url>
      
        <content type="html"><![CDATA[<p>这两天稍微有点时间，简单看了看设计模式，感觉比上次理解多了，或许是要自己实际解决的问题更多了吧。</p><p>除了工厂模式、单例模式、MVC模式等等很经常使用的模式以外，享元、适配器等等各种模式也都有了自己理解的应用场景，我想，下次再看应该会更有感触吧。</p><p>回想很多大学里学的知识，也都是慢慢的觉得很有用处，当然这里也没有得后悔当初为什么没有好好学了，只能叹息有时间再补吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime记录</title>
      <link href="2017/10/26/Record/Sublime%E8%AE%B0%E5%BD%95/"/>
      <url>2017/10/26/Record/Sublime%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="设置记录"><a href="#设置记录" class="headerlink" title="设置记录"></a>设置记录</h3><p>sublime.setting-user<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"color_scheme"</span>: <span class="string">"Packages/Theme - Afterglow/Afterglow-markdown.tmTheme"</span>,</span><br><span class="line">    <span class="attr">"expand_tabs_on_save"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"font_size"</span>: <span class="number">13</span>,</span><br><span class="line">    <span class="attr">"ignored_packages"</span>:</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"Markdown"</span>,</span><br><span class="line">        <span class="string">"Vintage"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"tab"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"translate_tabs_to_spaces"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"default_encoding"</span>: <span class="string">"UTF-8"</span>,</span><br><span class="line">    <span class="attr">"update_check"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime Terminal</title>
      <link href="2017/10/26/Record/Sublime-Terminal/"/>
      <url>2017/10/26/Record/Sublime-Terminal/</url>
      
        <content type="html"><![CDATA[<p>无论是用Sublime写前端，还是写Markdown，经常要用到终端，每次<code>Win+R</code>再cmd也是麻烦</p><ol><li><p>Package Control -&gt; Terminal</p></li><li><p>设置Setting-Default，就是有<code>&quot;termainal&quot;:</code>这个参数的设置文件，改成下面设置，即可<code>Ctrl+Alt+T</code>启动普通cmd了（不改的话，默认为启动Power Shell）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  // Replace with your own path to cmder.exe</span><br><span class="line">  "terminal": "cmd",</span><br><span class="line">  "parameters": ["/START", "%CWD%"]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><a href="https://github.com/wbond/sublime_terminal" target="_blank" rel="noopener">Sublime插件-Terminal的Github</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简历</title>
      <link href="2017/10/25/Resume/%E7%AE%80%E5%8E%86/"/>
      <url>2017/10/25/Resume/%E7%AE%80%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<p>准备中…</p><div style="visibility: hidden;"><br><br>## 个人简历<br><br>### 基本信息<br><br>|||||<br>|:-:|:-:|:-:|:-:|<br>|<strong>求职状态</strong>：|准备中……|<strong>毕业工作时间</strong>：|2017.6 |<br>|<strong>现工作地</strong>：|浙江嘉兴|<strong>期望工作地点</strong>：|上海 |<br><br>### 教育经历<br>学校：华侨大学 学历：本科<br>专业：软件工程 时间：2013.9 ~ 2017.6<br><br>### 工作经验<br><br>一、蓝鸽科技有限公司<br><br><strong>职位</strong>：.Net开发工程师 &nbsp;&nbsp;&nbsp; <strong>工作时间</strong>：2017.6 ~ 今<br><br><strong>主要工作</strong>：<br><br>1. 数据采集平台：对公司众多应用系统的数据进行采集、清洗、补全以及存储<br><br>2. 数据模拟工具：模拟大量的应用系统数据<br><br><br>二、中电福富有限公司<br><br><strong>职位</strong>：Java开发工程师 &nbsp;&nbsp;&nbsp; <strong>工作时间</strong>：2016.11 ~ 2017.4<br><br><strong>主要工作</strong>：<br><br>1. CRM系统开发维护<br><br>2. 电渠平台<br><br>3. O2O订单中台管理系统<br><br></div>]]></content>
      
      
      
        <tags>
            
            <tag> resume </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建</title>
      <link href="2017/10/24/Hexo/Hexo%E6%90%AD%E5%BB%BA/"/>
      <url>2017/10/24/Hexo/Hexo%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><p><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">http://blog.csdn.net/gdutxiaoxu/article/details/53576018</a></p><h3 id="主题github地址"><a href="#主题github地址" class="headerlink" title="主题github地址"></a>主题github地址</h3><p><strong>yilia</strong> <code>https://github.com/litten/hexo-theme-yilia.git</code><br><strong>NexT</strong> <code>https://github.com/iissnan/hexo-theme-next.git</code></p><h3 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h3><p><a href="http://blog.csdn.net/xuezhisdc/article/details/53130383" target="_blank" rel="noopener">http://blog.csdn.net/xuezhisdc/article/details/53130383</a></p><p>新建文章<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"article title"</span></span><br></pre></td></tr></table></figure></p><p>生成部署<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g   <span class="comment"># 生成</span></span><br><span class="line">hexo d   <span class="comment"># 部署</span></span><br><span class="line"><span class="comment"># 或直接</span></span><br><span class="line">hexo d -g <span class="comment"># 在部署前先生成</span></span><br></pre></td></tr></table></figure></p><h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><ol><li><p><strong>部署</strong>：将生成在public文件夹内的文件复制到deploy.git内后，自动推送到git，自动部署需要安装插件，并配置发布地址等</p></li><li><p>新建文章的 <strong>命名、分类、标签</strong>：不能包含<code>#</code>符号，Github上面会404，其他的<code>\/.?</code>之类的应该也不行，<code>-_</code>以及数字是可以的</p></li><li><p>自定义页面，不渲染<br><a href="http://e12e.com/2016/06/05/hexo跳过指定文件的渲染/" target="_blank" rel="noopener">hexo跳过指定文件的渲染</a><br>在<code>_config.yml</code>文件中设置<code>skip_render</code>，都是相对<code>source</code>目录的路径：</p></li></ol><ul><li><p>跳过<code>source</code>目录下的<code>test.html</code>:</p><figure class="highlight plain"><figcaption><span>test.html```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 跳过`source`目录下`test`文件夹内所有文件：</span><br><span class="line">```skip_render: test/*</span><br></pre></td></tr></table></figure></li><li><p>跳过source目录下<code>test</code>文件夹内所有文件包括子文件夹以及子文件夹内的文件：</p><figure class="highlight plain"><figcaption><span>test/**```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* 跳过多个路径：</span><br><span class="line">```yml</span><br><span class="line">skip_render:</span><br><span class="line"> - test.html</span><br><span class="line"> - test/*</span><br></pre></td></tr></table></figure></li></ul><ol><li><code>_post</code>文件夹下是可以新建自己的文件夹的</li></ol><h3 id="hexo标签插件"><a href="#hexo标签插件" class="headerlink" title="hexo标签插件"></a><a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="noopener">hexo标签插件</a></h3><p><strong>jsFiddle</strong><br>在文章中嵌入 jsFiddle。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Gist</strong><br>在文章中嵌入 Gist。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure></p><p><strong>iframe</strong><br>在文章中插入 iframe。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Image</strong><br>在文章中插入指定大小的图片。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Link</strong><br>在文章中插入链接，并自动给外部链接添加 target=”_blank” 属性。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure></p><ol><li>代码块高亮<br>c#代码块标记（<code>c#</code>标记无效）：<code>cs</code>、<code>csharp</code><br>配置文件类型（<code>*:*</code>这种）：<code>yml</code></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git命令</title>
      <link href="2017/10/24/Shell/Git%E5%91%BD%E4%BB%A4/"/>
      <url>2017/10/24/Shell/Git%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>强制更新覆盖本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all # 下载最新文件（未覆盖）</span><br><span class="line">git reset --hard origin/master # 定向最新下载版本</span><br><span class="line">git pull origin master # 更新，已经同步远程最新文件</span><br><span class="line"></span><br><span class="line">git pull origin master --allow-unrelated-histories # 允许无关联历史</span><br></pre></td></tr></table></figure><p>分支变更回退</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reflog  <span class="comment"># 所有分支的所有操作记录</span></span></span><br><span class="line">272c92d (HEAD -&gt; master, origin/master) HEAD@&#123;0&#125;: reset: moving to HEAD</span><br><span class="line">272c92d (HEAD -&gt; master, origin/master) HEAD@&#123;1&#125;: reset: moving to origin/master</span><br><span class="line">b6acea6 HEAD@&#123;2&#125;: commit: update</span><br><span class="line">3041a64 HEAD@&#123;3&#125;: commit: init</span><br><span class="line">1718038 HEAD@&#123;4&#125;: commit: update ignore</span><br><span class="line">f85aa76 HEAD@&#123;5&#125;: commit: init</span><br><span class="line">90ba2c6 HEAD@&#123;6&#125;: commit (initial): init</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard b6acea6 <span class="comment"># 回退到之前版本</span></span></span><br></pre></td></tr></table></figure><p>删除已纳入版本控制，并后添加到<code>.gitignore</code>的文件（注意<code>.</code>）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rm -r --cached .</span><br><span class="line">git add .</span><br><span class="line">git commit -m "update .gitignore"</span><br></pre></td></tr></table></figure><p>修改已<code>commit</code>备注</p><ol><li>输入</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><ol><li>进入最后一次提交的内容（vim编辑器） &gt; <code>a</code>进入插入模式 &gt; 修改 &gt; <code>Esc</code> &gt; 输入<code>:wq</code>，保存退出</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="about/index.html"/>
      <url>about/index.html</url>
      
        <content type="html"><![CDATA[<p>回头写点什么。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="categories/index.html"/>
      <url>categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="tags/index.html"/>
      <url>tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
